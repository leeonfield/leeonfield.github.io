<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[IKBC Poker 2 键盘常见功能]]></title>
      <url>http://lijundong.com/poker-shortcut/</url>
      <content type="html"><![CDATA[<p><img src="http://source.lijundong.com/17-11-21/64023066.jpg" alt=""><br>一个半月前，夏部长的青轴出现了 P 键间歇失灵的问题，忍了一段时间就下单了 Poker 茶轴，用着很舒服，不过由于组合键太多，导致经常出现按键锁定的情况，每到这个时候，我就像个猴子在电脑前，按哪错哪。</p>
<p>据我研究表明，使用工具前先看<strong>说明书</strong>是一件非常重要的事情。</p>
<a id="more"></a>
<h3 id="太长不看版本"><a href="#太长不看版本" class="headerlink" title="太长不看版本"></a>太长不看版本</h3><blockquote>
<p>Q:  左 WIN 键亮灯怎么关 ？<br>A: <code>FN + Z</code></p>
<p>Q: 空格左灯怎么关 ？<br>A: <code>FN + 左 Shift</code></p>
<p>Q: 空格右灯怎么关 ？<br>A: <code>FN + 右 Ctrl</code></p>
<p>Q: 怎么打出 <code>~</code> ？<br>A: <code>Shift + FN + ESC (注意顺序)</code></p>
<p>Q: 只能打出<strong>大写字母</strong>／<strong>大写锁定了</strong><br>A: 再按一次 <code>Shift</code>，<strong>如果左 WIN 键亮灯，可以参照第一条关掉</strong></p>
<p>Q: 关掉键盘的 LED 灯 ？（仅限于带背光版本）<br>A: <code>FN + v</code></p>
<p>Q: w、a、s、d 打不出来，变成方向键了<br>A: <code>FN +  空格键</code></p>
</blockquote>
<h3 id="精简版说明书"><a href="#精简版说明书" class="headerlink" title="精简版说明书"></a>精简版说明书</h3><h4 id="常用快捷键"><a href="#常用快捷键" class="headerlink" title="常用快捷键"></a>常用快捷键</h4><ul>
<li>FN + [1、2、3…… -&gt; +] = [F1 -&gt; F12]</li>
<li>FN + BackSpace = Del</li>
<li>FN + I = Insert</li>
<li>FN + P = PrintScreen</li>
<li>FN + ‘“ = PAGE UP</li>
<li>FN + /? = PAGEDOWN</li>
<li>FN + W = ↑</li>
<li>FN + A = ←</li>
<li>FN + S = ↓</li>
<li>FN + D = →</li>
<li>FN + N = 音量减</li>
<li>FN + M = 音量增</li>
<li>FN + ,&lt; = 静音</li>
</ul>
<h4 id="编程相关"><a href="#编程相关" class="headerlink" title="编程相关"></a>编程相关</h4><ul>
<li>FN + 空格 = 锁定／解锁方向键(w、a、s、d)</li>
<li>FN + z = 左 WIN 键亮灯（再按一次 FN + z 灯熄灭），按 shift 锁定大写，再按 shift 解锁大写</li>
<li>FN + 右 Ctrl = 编程模式，空格右灯亮（再按一次退出）</li>
<li>FN + 右 Shift = 锁定已编程模式，可不用按 PN 键，即可食用编程快捷键，空格左灯亮（再按一次退出）</li>
</ul>
<h4 id="编程举例"><a href="#编程举例" class="headerlink" title="编程举例"></a>编程举例</h4><p>目标：把 <code>a</code> 编为 <code>Ctrl + FN + a</code> （mac 下切换屏幕）</p>
<ol>
<li><code>FN + 右 Ctrl</code> 打开编程模式，空格右键亮起</li>
<li>点下 <code>a</code> 键， 接着按下 <code>Ctrl + FN + a</code> 组合键，放开，再点击 <code>PN</code> 键保存编辑</li>
<li><code>FN + 右 Ctrl</code> 退出编程模式，空格右灯熄灭</li>
<li><code>PN + a</code> =&gt; 屏幕切换，成功</li>
<li>现在我们锁定编程模式 <code>FN + 右 Shift</code>，按 <code>a</code> =&gt; 屏幕切换 （get it ?)</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 键盘 </tag>
            
            <tag> poker 2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React + Node 单页应用「三」API 设计 & 项目部署]]></title>
      <url>http://lijundong.com/application-with-react-and-node-3th/</url>
      <content type="html"><![CDATA[<h3 id="关于项目"><a href="#关于项目" class="headerlink" title="关于项目"></a>关于项目</h3><p><a href="//github.com/lijundong/gitcard">项目地址</a><br><a href="//github.lijundong.com/">预览地址</a></p>
<p>记录最近做的一个 demo，前端使用 <code>React</code>，用 <code>React Router</code> 实现前端路由，<code>Koa 2</code> 搭建 API Server， 最后通过 <code>Nginx</code> 做请求转发。 </p>
<p>这是第三篇，也是最后一篇，内容关于整个项目的 API 设计，以及最后的项目部署。<br><a id="more"></a></p>
<h3 id="前端-Server"><a href="#前端-Server" class="headerlink" title="前端 Server"></a>前端 Server</h3><p>项目打包后的代码集中在 <code>/build/</code> 目录下，<code>create-react-app</code> 提供了 <code>serve -s build</code> 命令启动前端 Server，当然，还可以选择其他工具。现在，前端 server 跑在开发机的 <code>3000</code> 端口上。</p>
<p>接下来，我们配置项目的 API。</p>
<h3 id="API-设计"><a href="#API-设计" class="headerlink" title="API 设计"></a>API 设计</h3><p>因为前后端分离，API 可以独立设计，可以走独立域名，例如 <code>api.github.com</code>，也可以走独立的根目录，例如 <code>github.lijundong.com/api/auth</code>，我们这里选择独立根目录形态。</p>
<p>其次请求方式需要建议做区分，可以参考 Github API，GET、POST、PUT、DELETE 区分开，使得 API 功能结构功能清晰，很值得借鉴。</p>
<p>路径中的 <code>/api</code> 用于 Nginx 转发时作区分，我们在设置后端 API 时，如下，</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> router = <span class="built_in">require</span>(<span class="string">'koa-router'</span>)();</span><br><span class="line"><span class="keyword">const</span> Comment = <span class="built_in">require</span>(<span class="string">'./comment.js'</span>);</span><br><span class="line"><span class="keyword">const</span> User = <span class="built_in">require</span>(<span class="string">'./user.js'</span>);</span><br><span class="line"><span class="keyword">const</span> Home = <span class="built_in">require</span>(<span class="string">'./home.js'</span>);</span><br><span class="line"><span class="keyword">const</span> Auth = <span class="built_in">require</span>(<span class="string">'./auth.js'</span>)</span><br><span class="line">router.get(<span class="string">'/'</span>, Home.renderIndex)</span><br><span class="line">      .get(<span class="string">'/login'</span>, User.renderLogin)</span><br><span class="line">      .get(<span class="string">'/signup'</span>, User.renderSignup)</span><br><span class="line">      .get(<span class="string">'/getcomment'</span>, Comment.getComment)</span><br><span class="line">      .get(<span class="string">'/getauthuser'</span>, Auth.getAuthUser)</span><br><span class="line">      .get(<span class="string">'/auth'</span>, Auth.getCode)</span><br><span class="line">      .post(<span class="string">'/signup'</span>, User.signup)</span><br><span class="line">      .post(<span class="string">'/login'</span>, User.login)</span><br><span class="line">      .post(<span class="string">'/newcomment'</span>, User.checkAuth, Comment.newComment)</span><br><span class="line">      .post(<span class="string">'/delcomment'</span>, User.checkAuth, Comment.delComment)</span><br></pre></td></tr></table></figure>
<p>最后 Node 服务在部署时可以直接选择 <code>node app.js</code> 的方式，当然，这种方式，在遇到 Server 挂了时，得人工重启，所以我推荐使用一些自动重启的工具，例如 forever、nodemon 等。</p>
<h3 id="Nginx-配置"><a href="#Nginx-配置" class="headerlink" title="Nginx 配置"></a>Nginx 配置</h3><p>下面分别是 AP 和 前端 Server 的 Nginx 配置，后端服务 <code>/api</code> 路径走 <code>127.0.0.1:3300</code>，前端路由走 <code>127.0.0.1:3000</code>。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name github.lijundong.com;</span><br><span class="line">    access_log /var/log/nginx/github.log;</span><br><span class="line">    location /api/ &#123;</span><br><span class="line">        proxy_pass //127.0.0.1:3300/;</span><br><span class="line">    &#125;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass //127.0.0.1:3000/;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="意识流"><a href="#意识流" class="headerlink" title="意识流"></a>意识流</h3><p>大三，认识了罗老师之后，想赚钱，于是开始接外包，不爽于没有后端支持，自己开始学 Node 相关的东西，当然，也只局限于使用，刚开始用 Express ，毕设想学点东西，又看了 Koa，但现在还只是局限在 Node Coder，如果想做一名 Node Develper，还得深入学点底层实现的东西，这也是下一步的方向。</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> node.js </tag>
            
            <tag> github </tag>
            
            <tag> 前后分离 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React + Node 单页应用「二」OAuth 2.0 协议 & GitHub 授权实践]]></title>
      <url>http://lijundong.com/application-with-react-and-node-2th/</url>
      <content type="html"><![CDATA[<h3 id="关于项目"><a href="#关于项目" class="headerlink" title="关于项目"></a>关于项目</h3><p><a href="//github.com/lijundong/gitcard">项目地址</a><br><a href="//github.lijundong.com/">预览地址</a></p>
<p>记录最近做的一个 demo，前端使用 <code>React</code>，用 <code>React Router</code> 实现前端路由，<code>Koa 2</code> 搭建 API Server， 最后通过 <code>Nginx</code> 做请求转发。 </p>
<p>这是第二篇，介绍下 <code>OAuth 2.0</code> 授权机制，以及 Github App 授权过程，通过获取授权使用 Github API。</p>
<a id="more"></a>
<h2 id="OAuth-2-0-协议"><a href="#OAuth-2-0-协议" class="headerlink" title="OAuth 2.0 协议"></a>OAuth 2.0 协议</h2><h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>传统的 CS(Client-Server) 授权模式下，请求访问受保护资源(用户信息)时，客户端需要向服务器提供资源所属用户的证书，为了让第三方拿到资源，用户就得将证书共享给第三方应用。这种方式会导致以下几个问题：</p>
<ul>
<li>第三方应用为了长久使用，需要存储用户凭证，特别是明文密码。</li>
<li>服务器需要支持密码验证，虽然密码存在固有的安全缺陷。</li>
<li>第三方应用获得了资源的过度访问权限，导致用户在授权期间无法限制第三方应用的访问权限。</li>
<li>用户不能单独撤销某一个第三方应用的访问权限，必须修改密码来撤销所有授权应用的权限。</li>
<li>任何第三方应用的漏洞都可能会威胁到用户的密码，以及对应密码权限下的用户数据。</li>
</ul>
<h3 id="OAuth-2-0"><a href="#OAuth-2-0" class="headerlink" title="OAuth 2.0"></a>OAuth 2.0</h3><p>为了解决这个问题，<code>OAuth</code> 协议引入了授权层，并将客户端与服务端的角色区分开，在 <code>OAuth</code> 协议中，客户端请求的 <code>Access_token</code> ，被托管在资源服务器，但受用户控制，并且与用户凭证完全不同。</p>
<p>举个例子，现在有一家档案馆，档案馆中有很多资料，这些资料有些涉及到机密，有些只是常规资料，<br>研究员<strong>小李</strong>需要进入档案馆查找<strong>常规资料</strong>，于是就跑去找<strong>罗馆长</strong>批条子</p>
<blockquote>
<p>“馆长馆长，我要看一些常规资料，请给我批个条子吧”</p>
</blockquote>
<p>罗馆长了解了小李要看的是常规资料，很爽快地批了</p>
<blockquote>
<p>“没问题，给，这是同意的<strong>条子</strong>”</p>
</blockquote>
<p>于是小李拿到条子后，径直去找了档案馆门卫<strong>大壮</strong></p>
<blockquote>
<p>“大壮，你看这是馆长给我批的查看常规资料的条子”，</p>
</blockquote>
<p>大壮确认没问题后</p>
<blockquote>
<p>“嗯，既然馆长同意了，来，这是常规文件的<strong>钥匙</strong>”，</p>
</blockquote>
<p>于是小李就拿着钥匙进入馆内开始找资料，馆内每道房门都有一把锁，如果房间里存放的是常规资料，小李只需要出示钥匙就可以进入，但存放涉密资料的房间，小李的钥匙打不开，必须找馆长批一份查看涉密资料的条子，再拿着条子去大壮那儿换一把新的钥匙。</p>
<h3 id="流程中的角色"><a href="#流程中的角色" class="headerlink" title="流程中的角色"></a>流程中的角色</h3><ul>
<li><p>资源所有者<br>可以授权获取受保护资源的实体，如果这个所有者是人，即常规意义的用户，即档案馆的馆长。</p>
</li>
<li><p>资源服务器<br>资源服务器用于存储资源，接收请求，并将资源返回给携带合法 <code>Access_token</code> 的请求，在我们的例子中，档案馆就充当着资源服务器的角色。</p>
</li>
<li><p>客户端<br>获取授权后，代表用户请求资源的第三方应用，也就是故事中的研究员小李。</p>
</li>
<li><p>授权服务器<br>授权服务器在成功认证资源拥有者并获取到授权后，发放 <code>Access_token</code> 给客户端，故事中大壮的主要工作内容就是发放访问钥匙。</p>
</li>
</ul>
<h3 id="授权流程"><a href="#授权流程" class="headerlink" title="授权流程"></a>授权流程</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">+--------+                               +---------------+</span><br><span class="line">|<span class="string">        </span>|<span class="string">--(A)- Authorization Request -&gt;</span>|<span class="string">   Resource    </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               </span>|<span class="string">     Owner     </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">&lt;-(B)-- Authorization Grant ---</span>|<span class="string">               </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               +---------------+</span><br><span class="line"></span>|<span class="string">        </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               +---------------+</span><br><span class="line"></span>|<span class="string">        </span>|<span class="string">--(C)-- Authorization Grant --&gt;</span>|<span class="string"> Authorization </span>|</span><br><span class="line">|<span class="string"> Client </span>|<span class="string">                               </span>|<span class="string">     Server    </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">&lt;-(D)----- Access Token -------</span>|<span class="string">               </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               +---------------+</span><br><span class="line"></span>|<span class="string">        </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               +---------------+</span><br><span class="line"></span>|<span class="string">        </span>|<span class="string">--(E)----- Access Token ------&gt;</span>|<span class="string">    Resource   </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">                               </span>|<span class="string">     Server    </span>|</span><br><span class="line">|<span class="string">        </span>|<span class="string">&lt;-(F)--- Protected Resource ---</span>|<span class="string">               </span>|</span><br><span class="line">+--------+                               +---------------+</span><br></pre></td></tr></table></figure>
<p>上面这张图是引自 RFC6749 的 OAuth 2.0 授权流程，概括如下</p>
<ul>
<li>第三方应用向用户请求授权，用户同意，第三方拿到授权许可</li>
<li>第三方拿着用户的授权许可，请求授权服务器要访问数据的 <code>Access_token</code></li>
<li>带着 <code>Access_token</code>，第三方应用就可以访问资源服务器中的资源了</li>
</ul>
<h2 id="Github-APP-授权"><a href="#Github-APP-授权" class="headerlink" title="Github APP 授权"></a>Github APP 授权</h2><p>Github 有一套非常完备的 API，在没有获得授权时，仅有部分功能可用，例如获取用户信息、仓库信息等，并且调用次数被限制在了一小时仅允许60次</p>
<p>授权后，每小时调用次数放开到每小时 5000 次，并且申请授权时，可以选择申请的权限范围，例如申请 star 项目、follow 用户的权限(我们这次用到的)等等，我们通过申请完整的权限，甚至可以写一个 Github 第三方应用。</p>
<h3 id="注册并配置-APP"><a href="#注册并配置-APP" class="headerlink" title="注册并配置 APP"></a>注册并配置 APP</h3><p>要获取授权，首先需要在 Github 注册一个应用，注册这个应用之前，需要准备好两个东西</p>
<ul>
<li>用作应用主页访问的 URL，例如 <code>github.lijundong.com</code>（如果是 IP 记得加协议头）</li>
<li>用作接受授权回调的的 URL，例如<code>github.lijundong.com/github/getauth</code></li>
</ul>
<p>可依照以下路径创建一个授权 APP，</p>
<p><code>Github &gt; setting &gt; Developer settings &gt; OAuth Apps &gt; New OAuth App</code></p>
<p><img src="//source.lijundong.com/17-11-11/2009205.jpg" alt=""></p>
<p>进入注册界面，需要填写应用名、应用主页地址、应用简介、以及回调 URL，创建完成会跳转到 APP 管理页面，在管理页面可以更新应用信息以及上传应用 Logo，并且你将看到你的应用的 <code>Client ID</code>、<code>Client Secret</code>，接下来获取权限需要用到这两个东西。</p>
<p><img src="//source.lijundong.com/17-11-11/23233133.jpg" alt=""></p>
<h3 id="授权流程-1"><a href="#授权流程-1" class="headerlink" title="授权流程"></a>授权流程</h3><p>GitHub 官方的<a href="//developer.github.com/apps/building-integrations/setting-up-and-registering-oauth-apps/about-authorization-options-for-oauth-apps/">授权流程</a>:<br><strong>第一步</strong>：页面跳转到 GitHub 的授权页</p>
<p>在项目中，我选择了用 <code>&lt;a&gt;</code> 标签链接的方式跳转。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">GET <span class="comment">//github.com/login/oauth/authorize?client_id=xxx&amp;scope=xxx</span></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * client_id：注册应用的 client_id 必填</span><br><span class="line"> * scope：申请的权限范围  选填，默认用户权限为空</span><br><span class="line"> */</span></span><br></pre></td></tr></table></figure></p>
<p><strong>第二步</strong>：回调接口收到 GitHub 的回调请求，获得 code</p>
<p>我们在注册应用时，设置了授权回调 URL，上一步中，Github 授权页成功获得用户授权后，会带上 code 请求我们设置的回调 URL，在这一步中，我们的 Server 就拿到了用户的授权 code。</p>
<p><strong>第三步</strong>：通过 code 获取 <code>Access_token</code></p>
<p>最后一步通过已有 code，加上应用的 <code>client_id</code> 和 <code>client_secret</code>，我们向 Github 申请 <code>Access_token</code>。</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * code：第二步获取到的 code 必填</span><br><span class="line"> * client_secret：注册应用 client_secret 必填</span><br><span class="line"> * client_id：注册应用的 client_id 必填</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">const</span> rp = <span class="built_in">require</span>(<span class="string">'request-promise'</span>)</span><br><span class="line"><span class="keyword">let</span> option = &#123;</span><br><span class="line">    uri: <span class="string">'//github.com/login/oauth/access_token?client_id='</span> + clientId + <span class="string">'&amp;client_secret='</span> + clientSecret + <span class="string">'&amp;code='</span> + code,</span><br><span class="line">    json: <span class="literal">true</span></span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">let</span> tokenResp = <span class="keyword">await</span> rp(option);</span><br></pre></td></tr></table></figure>
<p><strong>第四步</strong>：将获得的 <code>Access_token</code> 写入页面的 cookie 中。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ctx.cookies.set(<span class="string">'access_token'</span>, tokenResp.access_token, &#123;</span><br><span class="line">    <span class="string">'httpOnly'</span>: <span class="literal">false</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<h3 id="获取用户数据"><a href="#获取用户数据" class="headerlink" title="获取用户数据"></a>获取用户数据</h3><p>因为第三方应用请求 GitHub API 涉及到跨域，第一篇文章已经提到了<a href="//developer.github.com/v3/#cross-origin-resource-sharing">Github API 只支持 XHR 跨域请求</a>，一些同学如果用 Fetch 跨域请求 API 会导致请求 <code>request type</code> 变成 <code>option</code> ，所以项目中改用 <code>axios</code> 进行网络请求。</p>
<p>这里以获取登陆用户基本信息为例，<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> Axios <span class="keyword">from</span> <span class="string">'axios'</span></span><br><span class="line"><span class="keyword">import</span> Cookie <span class="keyword">from</span> <span class="string">'js-cookie'</span></span><br><span class="line"><span class="keyword">const</span> access_token = Cookie.get(<span class="string">'access_token'</span>);</span><br><span class="line"></span><br><span class="line">getLoginInfo() &#123;</span><br><span class="line">    <span class="keyword">let</span> that = <span class="keyword">this</span>;</span><br><span class="line">    <span class="keyword">let</span> url = API.GITHUB.GET_LOGIN_INFO;</span><br><span class="line">    Axios.get(url, &#123;</span><br><span class="line">        params: &#123;</span><br><span class="line">            access_token: access_token</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;).then(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 拿到用户信息</span><br><span class="line"> */</span></span><br><span class="line">        that.setState(&#123;</span><br><span class="line">            loginInfo: res.data,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;).catch(<span class="function"><span class="keyword">function</span> (<span class="params">error</span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.error(error);</span><br><span class="line">      &#125;)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上就是 Github APP 获取 <code>Access_token</code> 的全部过程，接下来的最后一篇文章，记录下 API 的设计以及最后的项目部署。</p>
<p>参考：</p>
<ul>
<li><a href="//tools.ietf.org/html/rfc6749">RFC6749-The OAuth 2.0 Authorization Framework</a></li>
<li><a href="//developer.github.com/v3/">Github API V3</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> node.js </tag>
            
            <tag> github </tag>
            
            <tag> 前后分离 </tag>
            
            <tag> OAuth 2.0 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[React + Node 单页应用「一」前端搭建]]></title>
      <url>http://lijundong.com/application-with-react-and-node-1th/</url>
      <content type="html"><![CDATA[<h2 id="关于项目"><a href="#关于项目" class="headerlink" title="关于项目"></a>关于项目</h2><ul>
<li><a href="//github.com/lijundong/gitcard">项目地址</a></li>
<li><a href="//github.lijundong.com/">预览地址</a></li>
</ul>
<p>记录最近做的一个 demo，前端使用 <code>React</code>，用 <code>React Router</code> 实现前端路由，<code>Koa 2</code> 搭建 API Server， 最后通过 <code>Nginx</code> 做请求转发。 </p>
<p>这是第一篇，主要介绍下前端代码的构建、<code>React router</code> 使用中遇到问题，以及前端开发完成后部署相关工作。</p>
<a id="more"></a>
<h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><p>GitCard 可以通过 GitHub 授权获取用户基本信息</p>
<ul>
<li>在首页模块，可以查看最近登录的用户，并点击头像查看该用户的详细信息</li>
<li>在 <code>/Comment</code> 模块中可以发表评论，并删除自己的评论</li>
<li>在 <code>/Detail</code> 模块中可以查看用户在 Github 上的基本信息（代码库，Follower、Following 以及更多开发的信息），你可以在这个基础上做更多有意思的事情，支持 Follow 和 Unfollow 操作，当然，你可以加上 Star 和 Unstar 操作，异曲同工。🈳️</li>
</ul>
<h2 id="依赖版本"><a href="#依赖版本" class="headerlink" title="依赖版本"></a>依赖版本</h2><ul>
<li>构建工具: create-react-app</li>
<li>react: 16.0.0</li>
<li>react-router: 4.2.2</li>
<li>网络请求: axios</li>
<li>UI: material-ui</li>
</ul>
<h2 id="项目搭建"><a href="#项目搭建" class="headerlink" title="项目搭建"></a>项目搭建</h2><p>前端构建工具使用 React 官方的 <a href="//github.com/facebookincubator/create-react-app">create-react-app</a>，快速生成可执行的项目结构。下面是快速上手流程，详细的内容可以参见 <a href="//github.com/facebookincubator/create-react-app">官方文档</a>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 全局安装 create-react-app</span></span><br><span class="line">npm install -g create-react-app</span><br><span class="line"></span><br><span class="line"><span class="comment">//生成项目，项目名 my-app（自定义）</span></span><br><span class="line">create-react-app my-app</span><br><span class="line">cd my-app</span><br><span class="line"></span><br><span class="line"><span class="comment">// 安装依赖</span></span><br><span class="line">npm install</span><br><span class="line"><span class="comment">// 开发环境</span></span><br><span class="line">npm start</span><br><span class="line"><span class="comment">// 打包</span></span><br><span class="line">npm run build</span><br></pre></td></tr></table></figure>
<p>生成项目后，项目文件结构如下，<code>npm run build</code> 执行后，目录下会出现 <code>/build/</code> 目录，存放构建后的文件。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * my-app 目录结构</span><br><span class="line"> */</span></span><br><span class="line">├── README.md</span><br><span class="line">├── node_modules</span><br><span class="line">├── package.json</span><br><span class="line">├── .gitignore</span><br><span class="line">├── public </span><br><span class="line">│   └── favicon.ico</span><br><span class="line">│   └── index.html</span><br><span class="line">│   └── manifest.json</span><br><span class="line">└── src</span><br><span class="line">    └── App.css</span><br><span class="line">    └── App.js <span class="comment">//项目入口</span></span><br><span class="line">    └── App.test.js</span><br><span class="line">    └── index.css</span><br><span class="line">    └── index.js</span><br><span class="line">    └── logo.svg</span><br><span class="line">    └── registerServiceWorker.js</span><br></pre></td></tr></table></figure>
<p>我们在 <code>/src/</code> 目录下新建 <code>/components/</code> 目录，用于存放本次项目中的所有自定义组件，最终的目录如下</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">.</span><br><span class="line">├── README<span class="selector-class">.md</span></span><br><span class="line">├── build</span><br><span class="line">├── package<span class="selector-class">.json</span></span><br><span class="line">├── public</span><br><span class="line">├── src</span><br><span class="line">│   ├── App<span class="selector-class">.css</span></span><br><span class="line">│   ├── App<span class="selector-class">.js</span></span><br><span class="line">│   ├── App<span class="selector-class">.test</span><span class="selector-class">.js</span></span><br><span class="line">│   ├── components</span><br><span class="line">│   │   ├── Comments</span><br><span class="line">│   │   │   ├── comment<span class="selector-class">.css</span></span><br><span class="line">│   │   │   └── index<span class="selector-class">.jsx</span></span><br><span class="line">│   │   ├── Events</span><br><span class="line">│   │   │   └── index<span class="selector-class">.jsx</span></span><br><span class="line">│   │   ├── HomePage</span><br><span class="line">│   │   │   └── index<span class="selector-class">.jsx</span></span><br><span class="line">│   │   ├── UserDetail</span><br><span class="line">│   │   │   └── index<span class="selector-class">.jsx</span></span><br><span class="line">│   │   └── layouts</span><br><span class="line">│   │       ├── Header<span class="selector-class">.jsx</span></span><br><span class="line">│   │       └── SideMenu<span class="selector-class">.jsx</span></span><br><span class="line">│   ├── index<span class="selector-class">.css</span></span><br><span class="line">│   ├── index<span class="selector-class">.js</span></span><br><span class="line">│   ├── logo<span class="selector-class">.svg</span></span><br><span class="line">│   ├── registerServiceWorker<span class="selector-class">.js</span></span><br><span class="line">│   └── utils</span><br><span class="line">│       ├── api<span class="selector-class">.jsx</span></span><br><span class="line">│       ├── fetch<span class="selector-class">.jsx</span></span><br><span class="line">│       └── keygen<span class="selector-class">.js</span></span><br><span class="line">└── yarn.lock</span><br></pre></td></tr></table></figure>
<h2 id="前端路由"><a href="#前端路由" class="headerlink" title="前端路由"></a>前端路由</h2><p>这次做的项目是单页应用，通过 <code>React router</code> 实现前端路由，<code>Container</code> 通过路由选择显示的模块内容，在 <code>Header</code> 显示路由切换入口，页面结构图如下。 </p>
<p><img src="//source.lijundong.com/17-11-8/9420557.jpg" alt=""></p>
<p>在 <code>/src/App.js</code> 布局并设置路由，将 <code>Header</code> 和 <code>Container</code> 包在 <code>Router</code> 下，在 <code>Header</code> 的 Menu 组件中设置路由链接，并在 <code>Container</code> 中设置路由指向对应组件。</p>
<p>Menu 中 Detail 链接在用户授权登录后就指向登录用户信息，否则跳转到授权登录页面。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 引入 React router</span></span><br><span class="line"><span class="keyword">import</span> &#123;</span><br><span class="line">  BrowserRouter <span class="keyword">as</span> Router,</span><br><span class="line">  Link,</span><br><span class="line">  Route</span><br><span class="line">&#125; <span class="keyword">from</span> <span class="string">"react-router-dom"</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 layout-content 中设置路由对应的组件</span></span><br><span class="line">&lt;Router&gt;</span><br><span class="line">    <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"App"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Header</span> <span class="attr">loginInfo</span>=<span class="string">&#123;this.state.loginInfo&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Header</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"layout-container"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"layout-content"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">exact</span> <span class="attr">path</span>=<span class="string">"/"</span> <span class="attr">component</span>=<span class="string">&#123;</span> <span class="attr">HomePage</span> &#125; &gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">"/user/:userid"</span> <span class="attr">component</span>=<span class="string">&#123;</span> <span class="attr">UserDetail</span> &#125; &gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">"/events"</span> <span class="attr">component</span>=<span class="string">&#123;Events&#125;</span>&gt;</span><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Route</span> <span class="attr">path</span>=<span class="string">"/comments"</span> <span class="attr">render</span>=<span class="string">&#123;</span> ()=&gt;</span><span class="tag">&lt;<span class="name">Comments</span> <span class="attr">loginInfo</span>=<span class="string">&#123;this.state.loginInfo&#125;</span> /&gt;</span> &#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Router</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 在 Header 中设置 Link </span></span><br><span class="line">&lt;Menu&gt;</span><br><span class="line">    &lt;Link to="/"&gt;</span><br><span class="line">        &lt;MenuItem primaryText="Home" /&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">    &lt;Link to="/comments"&gt;</span><br><span class="line">        &lt;MenuItem primaryText="Comments"/&gt;</span><br><span class="line">    &lt;/Link&gt;</span><br><span class="line">    &#123;</span><br><span class="line">    this.props.loginInfo.login ?</span><br><span class="line">      (&lt;Link to=&#123;  '/user/' + this.props.loginInfo.login &#125;&gt;</span><br><span class="line">            &lt;MenuItem primaryText="Detail" /&gt;</span><br><span class="line">      &lt;/Link&gt;)</span><br><span class="line">      : (&lt;MenuItem primaryText="Login" onClick=&#123;this.login&#125; /&gt;)</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/Menu&gt;</span><br></pre></td></tr></table></figure>
<h2 id="数据操作"><a href="#数据操作" class="headerlink" title="数据操作"></a>数据操作</h2><h3 id="路由下发数据"><a href="#路由下发数据" class="headerlink" title="路由下发数据"></a>路由下发数据</h3><p>上面的代码的路由中，我们通过两种方式下发数据到组件中，通过路由参数将用户 ID 下发到 <code>Detail</code> 组件，以及通过 <code>props</code> 讲用户基本信息下发到 <code>Comment</code> 组件中。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 通过路由参数下发的 Link 以及对应的 Route</span></span><br><span class="line">&lt;Link to=&#123;  <span class="string">'/user/'</span> + <span class="keyword">this</span>.props.loginInfo.login &#125;&gt;<span class="xml"><span class="tag">&lt;<span class="name">MenuItem</span> <span class="attr">primaryText</span>=<span class="string">"Detail"</span> /&gt;</span><span class="tag">&lt;/<span class="name">Link</span>&gt;</span></span></span><br><span class="line">&lt;Route path=<span class="string">"/user/:userid"</span> component=&#123; UserDetail &#125; &gt;<span class="xml"><span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过 props 下发</span></span><br><span class="line">&lt;Route path=<span class="string">"/comments"</span> render=&#123; ()=&gt;<span class="xml"><span class="tag">&lt;<span class="name">Comments</span> <span class="attr">loginInfo</span>=<span class="string">&#123;this.state.loginInfo&#125;</span> /&gt;</span> &#125;&gt;<span class="tag">&lt;/<span class="name">Route</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<p>通过路由参数获取下发数据，如果在 <code>/user/lijundong</code> 跳转到 <code>/user/free-free</code> 会出现路由改变，数据不刷新的情况，这里需要用 <code>componentWillReceiveProps(nextProps)</code> 处理。</p>
<p>在 <code>Detail</code> 组件中获取 ID，<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> userId = <span class="keyword">this</span>.props.match.params.userid;</span><br></pre></td></tr></table></figure></p>
<p>以及在 <code>Comment</code> 中获取用户信息<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> loginInfo = <span class="keyword">this</span>.props.loginInfo;</span><br></pre></td></tr></table></figure></p>
<h3 id="数据请求"><a href="#数据请求" class="headerlink" title="数据请求"></a>数据请求</h3><p>我们在这里选择用 axios 网络请求，为了方便管理，将所有的 API 统一放在 <code>/src/utils/api.jsx</code> 中，利于后期维护。<br>没有使用 Fetch 是因为 <strong><a href="//developer.github.com/v3/#cross-origin-resource-sharing">Github API 只支持 XHR 跨域请求</a></strong>，Fetch 跨域请求会导致请求 request type 变成 <code>option</code> 。</p>
<h3 id="数据更新"><a href="#数据更新" class="headerlink" title="数据更新"></a>数据更新</h3><h4 id="setState"><a href="#setState" class="headerlink" title="setState"></a>setState</h4><p>因为这次的数据并不复杂，所以没有引入 MobX 或者 Redux 处理，数据更新全程使用 <code>setState</code>，不过由于 <code>setState</code> 是异步操作，所以，某些情况下，需要用到回调函数，如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">setState(</span><br><span class="line">  &#123; name: <span class="string">"Michael"</span> &#125;,</span><br><span class="line">  () =&gt; <span class="built_in">console</span>.log(<span class="keyword">this</span>.state.name)</span><br><span class="line">);</span><br><span class="line"><span class="comment">// Michael</span></span><br></pre></td></tr></table></figure>
<h4 id="componentWillReceiveProps"><a href="#componentWillReceiveProps" class="headerlink" title="componentWillReceiveProps"></a>componentWillReceiveProps</h4><p>上面提到过，通过路由参数获取下发数据，如果在 <code>/user/lijundong</code> 跳转到 <code>/user/free-free</code> 会出现路由改变，数据不刷新的情况，这是因为 <code>componentDidMount()</code> 只会执行一次，<code>props</code> 更新不会触发重新获取数据，这里可通过 <code>componentWillReceiveProps()</code> 解决。</p>
<p><code>componentWillReceiveProps()</code> 会在每次 <code>props</code> 更新时触发，通过新参数重新获取数据列表。</p>
<figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">componentWillReceiveProps(nextProps)&#123;</span><br><span class="line">    <span class="keyword">const</span> userId = nextProps.match.<span class="keyword">params</span>.userid;</span><br><span class="line"><span class="comment">// 通过新参数获取数据</span></span><br><span class="line">    Axios.<span class="keyword">get</span>(url)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="项目构建部署"><a href="#项目构建部署" class="headerlink" title="项目构建部署"></a>项目构建部署</h3><p>项目开发结束，通过 <code>npm run build</code> 进行打包，打包完成后，生成的 <code>/build/</code> 即我们最终上线的版本，因为是前后端分离的项目，前端需要自起 Server，可以通过这两种方案进行部署</p>
<ul>
<li>使用 create-react-app 自带的 <code>serve -s build</code> 命令起 Server（我当前使用的方式）</li>
<li>或者通过第三方工具 <code>http-server</code>、<code>anywhere</code> 等起 Server</li>
</ul>
<p>服务开启后，可以正常访问就代表前端部分已经完成，暴露的端口供最后 Nginx 配置使用。</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> node.js </tag>
            
            <tag> github </tag>
            
            <tag> react router4 </tag>
            
            <tag> 前后分离 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[配置 SSH 快捷登录]]></title>
      <url>http://lijundong.com/ssh-login-directly/</url>
      <content type="html"><![CDATA[<p>目前我有两台开发机，一台公司，一台私人，日常开发对开发机强依赖，但一直以来都是用最原始的方式登录机器， <code>ssh root@xxx.xxx.xxx.xxx</code>，接着输入 <code>password</code>，偶尔会出现密码和 IP 记混的状况，得尝试好几次，不妨用十分钟优化这个过程，一劳永逸。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"># 优化前</span><br><span class="line"># 公司机器</span><br><span class="line">ssh root@xxx.xxx.xxx.xxx</span><br><span class="line">password: ******</span><br><span class="line"># 私人机器</span><br><span class="line">ssh root@xxx.xxx.xxx.xxx</span><br><span class="line">password: ******</span><br><span class="line"></span><br><span class="line">#优化后</span><br><span class="line">#公司机器</span><br><span class="line">ssh dev-server</span><br><span class="line"># 私人机器</span><br><span class="line">ssh leeon-server</span><br></pre></td></tr></table></figure></p>
<a id="more"></a>
<p>网络上有海量的配置教程，因为过程遇到一个坑，所以花点篇幅记录下我的配置过程。</p>
<h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul>
<li>本地<ul>
<li>系统：MacOS</li>
<li>终端：iTerm2</li>
</ul>
</li>
<li>开发机<ul>
<li>系统：centOS</li>
</ul>
</li>
</ul>
<h3 id="设置主机别名"><a href="#设置主机别名" class="headerlink" title="设置主机别名"></a>设置主机别名</h3><p>我们可以通过 SSH 配置文件配置主机别名，取代长串的 IP，用 <code>root</code> 权限打开 <code>/etc/ssh/ssh_config</code> 或 <code>~/.ssh/config</code> 进行配置</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 配置别名，别名自定</span><br><span class="line">Host leeon-server</span><br><span class="line"># IP 必填</span><br><span class="line">    hostname xx.xx.xx.xx</span><br><span class="line"># 端口 选填</span><br><span class="line">    port 22</span><br><span class="line"># 登录名 选填</span><br><span class="line">    user root</span><br></pre></td></tr></table></figure>
<p>现在我们可以通过别名进行登录</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh leeon-server</span><br><span class="line">password: ******</span><br></pre></td></tr></table></figure>
<p>现在不用输长串 IP，但是仍需要密码，下面设置免密码登录</p>
<h3 id="设置公钥登录"><a href="#设置公钥登录" class="headerlink" title="设置公钥登录"></a>设置公钥登录</h3><p>如果你用过 git 远程仓库，对公钥 <code>public key</code> 肯定不陌生，这里提一下如何生成密钥</p>
<h4 id="生成公钥"><a href="#生成公钥" class="headerlink" title="生成公钥"></a>生成公钥</h4><p>生成公钥很简单，执行 <code>ssh-keygen</code> 一路回车，就在 <code>~/.ssh/</code> 目录下生成了 <code>id_rsa.pub</code> 和 <code>id_rsa</code>，但我不推荐这种方式。</p>
<p>如果开发机较多，为了方便管理不同的开发机（公司机器、个人机器），或者访问多个 Git 代码库，建议生成独立的公钥，这样你就不会手滑把公司的代码推上 Github ～</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># 公司机器</span><br><span class="line">ssh-keygen -t rsa -C &quot;xxx@abc.com&quot; -f ~/.ssh/id_rsa_dev</span><br><span class="line"># 生成 id_rsa_dev id_rsa_dev.pub</span><br><span class="line"></span><br><span class="line">ssh-keygen -t rsa -C &quot;xxx@abc.com&quot; -f ~/.ssh/id_rsa_leeon</span><br><span class="line"># 生成 id_rsa_leeon id_rsa_leeon.pub</span><br></pre></td></tr></table></figure>
<h3 id="配置-SSH-公钥登录"><a href="#配置-SSH-公钥登录" class="headerlink" title="配置 SSH 公钥登录"></a>配置 SSH 公钥登录</h3><h4 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h4><p>需要将我本地生成的公钥粘贴到<strong>开发机</strong>的 <code>~/.ssh/authorized_keys</code> 文件中，如果没有 <code>authorized_keys</code> 文件，请新建。</p>
<p> 配置我个人的开发机，将 <code>id_rsa_leeon.pub</code> 内容粘贴到<strong>开发机</strong>的 <code>~/.ssh/authorized_keys</code> 中，<br> 配置公司开发机，则将 <code>id_rsa_dev.pub</code> 内容粘贴到<strong>开发机</strong>的 <code>~/.ssh/authorized_keys</code> 中。</p>
<h4 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h4><p>需要修改本地的 SSH 配置文件</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"># 个人开发机</span><br><span class="line">Host leeon-server</span><br><span class="line">    hostname xx.xx.xx.xx</span><br><span class="line">    port 22</span><br><span class="line">    user root</span><br><span class="line"># 授权方式</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line"># 私钥配置，注意是与公钥对应</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_leeon</span><br><span class="line"># 公司开发机</span><br><span class="line">Host dev-server</span><br><span class="line">    hostname xx.xx.xx.xx</span><br><span class="line">    port 22</span><br><span class="line">    user root</span><br><span class="line"># 授权方式</span><br><span class="line">    PreferredAuthentications publickey</span><br><span class="line"># 私钥配置，注意是与公钥对应</span><br><span class="line">    IdentityFile ~/.ssh/id_rsa_dev</span><br></pre></td></tr></table></figure>
<p>下面我们就可以尝试免密码登录了</p>
<h3 id="免密码登录"><a href="#免密码登录" class="headerlink" title="免密码登录"></a>免密码登录</h3><p>登录我的个人开发机试试</p>
<p><code>ssh leeon-server</code></p>
<p>登陆成功！</p>
<h4 id="提示错误-？"><a href="#提示错误-？" class="headerlink" title="提示错误 ？"></a>提示错误 ？</h4><p>我第一次尝试免密码登录时遇到以下错误，</p>
<p>提示<strong>错误</strong>： <code>Permission denied (publickey,gssapi-keyex,gssapi-with-mic,password).</code></p>
<p>搜了下原因，将开发机中的 <code>.ssh</code> <strong>目录权限</strong>设置为 600 或者 700<br><code>chmod 600 .ssh/</code></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ssh </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[移动端 H5 页面滚动加载优化]]></title>
      <url>http://lijundong.com/lazy-load-optimization-on-iOS-Android/</url>
      <content type="html"><![CDATA[<p>当一个页面需要展示的数据量较大时，为了使用户获得最佳使用体验，我们常选择分页的方式进行展示数据，减少单次显示数据来降低服务器响应时间以及页面渲染时间，从而降低页面首屏时间。</p>
<p>PC 端常见两种交互方式，通过分页控件的方式，用户点击下一页或指定页数进行跳转，另一种是通过懒加载的方式，通过监听页面滚动，在页面内容快展示完时请求下一页的数据并 append 到页面中。</p>
<p>而在移动端，我们更想让用户无感知地浏览到页面最后一页，保证了信息阅读的连续、流畅，既然这样，滚动懒加载的方式处理分页就成了不二之选。</p>
<a id="more"></a>
<p>备注：默认引入 <code>jQuery／zepto</code></p>
<h3 id="监听滚动"><a href="#监听滚动" class="headerlink" title="监听滚动"></a>监听滚动</h3><p>页面中，在文档底部到视窗底部的距离低于某个阈值时，触发下一页数据请求，我们这里设置距离低于 <code>200px</code> 时，触发请求。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'loading'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop;</span><br><span class="line">    <span class="keyword">var</span> windowHeight = $(<span class="built_in">window</span>).height();</span><br><span class="line">    <span class="keyword">var</span> scrollHeight = $(<span class="built_in">document</span>).height();</span><br><span class="line">    <span class="keyword">var</span> distance = scrollHeight - scrollTop - windowHeight;</span><br><span class="line">    <span class="keyword">if</span>(distance &lt; <span class="number">200</span> )&#123;</span><br><span class="line">        load();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="//source.lijundong.com/17-11-6/88603046.jpg" alt=""></p>
<p>现在已经完成了最基本的功能需求，但因为绑定的 <code>scroll</code> 事件，页面滚动时就会触发，因此，内容底部和视窗底部的距离小于 <code>200px</code> 时，页面继续滚动，<code>loading</code> 会被继续触发，这就丧失了分页的意义，所以在这里需要对加载的触发进行稀释。</p>
<h3 id="稀释事件触发"><a href="#稀释事件触发" class="headerlink" title="稀释事件触发"></a>稀释事件触发</h3><p>我们设定一次请求触发后，需保持 <code>60ms</code> 安静，即这 <code>60ms</code> 不会出现二次触发请求事件，以保证这是一次稳定的请求触发。假设第一次触发的 <code>60ms</code> 内被被第二次触发，第一次作废，从第二次重新开始计时 <code>60ms</code>。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (timeoutId) &#123;</span><br><span class="line">        clearTimeout(timeoutId);</span><br><span class="line">    &#125;</span><br><span class="line">    timeoutId = setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="comment">// var scrollTop = $(this).scrollTop();</span></span><br><span class="line">        <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop;</span><br><span class="line">        <span class="keyword">var</span> windowHeight = $(<span class="built_in">window</span>).height();</span><br><span class="line">        <span class="keyword">var</span> scrollHeight = $(<span class="built_in">document</span>).height();</span><br><span class="line">        <span class="keyword">var</span> distance = scrollHeight - scrollTop - windowHeight;</span><br><span class="line">        <span class="keyword">if</span>(distance &lt; <span class="number">200</span> )&#123;</span><br><span class="line">            lazyLoad();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;, <span class="number">60</span>)</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p><img src="//source.lijundong.com/17-11-6/33055800.jpg" alt=""></p>
<p>稀释后，触发条件间接变成在页面滚动停止时，发出数据请求。但一个新问题出现，如果请求返回稍慢，用户等不及，一直在页面底部摩擦摩擦，导致请求被多次发出，并且异步请求返回的顺序可能打乱原有数据顺序，第 2、3 页请求发出去，返回的数据顺序可能先是第 3 页再是第 2 页，这时候就该给请求加把锁。</p>
<p><img src="//source.lijundong.com/17-11-6/34474726.jpg" alt=""></p>
<h3 id="事件锁"><a href="#事件锁" class="headerlink" title="事件锁"></a>事件锁</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> loading = <span class="literal">false</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">'append element to document'</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">load</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    loading = <span class="literal">true</span>;</span><br><span class="line">    $.ajax(&#123;</span><br><span class="line">        url: <span class="string">'api.xxx.com'</span></span><br><span class="line">    &#125;).done(<span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        append();</span><br><span class="line">        loading = <span class="literal">false</span>;</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">$(<span class="built_in">window</span>).scroll(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> scrollTop = $(<span class="built_in">window</span>).scrollTop;</span><br><span class="line">    <span class="keyword">var</span> windowHeight = $(<span class="built_in">window</span>).height();</span><br><span class="line">    <span class="keyword">var</span> scrollHeight = $(<span class="built_in">document</span>).height();</span><br><span class="line">    <span class="keyword">var</span> distance = scrollHeight - scrollTop - windowHeight;</span><br><span class="line">    <span class="keyword">if</span>(distance &lt; <span class="number">200</span> &amp;&amp; !loading )&#123;</span><br><span class="line">        load();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
<p>通过给请求添加 <code>loading</code> 状态，同一时间只允许一个请求执行，当已存在未返回请求时，新的请求不会被触发。</p>
<p><img src="//source.lijundong.com/17-11-7/35158605.jpg" alt=""></p>
<h3 id="UI-优化"><a href="#UI-优化" class="headerlink" title="UI 优化"></a>UI 优化</h3><p>作为开发者，我们清楚知道触发数据加载的过程，清楚触发的时机以及请求的过程，但用户看到的只是页面拉到了底部（请求还没响应），用户以为已经显示全部数据了，实际只是分页数据还没加载出来，等页面真正看完全部数据，用户却可能认为还会有下一页，不断上拉页面，试图拉出隐藏于某处的一些数据。</p>
<p>一个用户体验优秀的前端页面，应该具有准确传递信息的能力，这些功能实现成本很低，但可以带来更好的用户体验。</p>
<p>所以，在数据加载时，在页面底部添加一个加载的 GIF 动画，缓解用户的焦虑，“放轻松，系统正全力加载中～”，数据加载到最后一页时，用户还准备上拉加载时，发现加载 GIF 被 “到底了～” 文案取代。</p>
<p><img src="//source.lijundong.com/17-11-7/24544987.jpg" alt=""></p>
<h3 id="容错处理"><a href="#容错处理" class="headerlink" title="容错处理"></a>容错处理</h3><p>程序不可能 100% 依照我们编写的逻辑运行，上面介绍的内容都是在数据正常返回的情况下，如遇到接口异常时，请求没有拿到想要的数据，请求已经返回错误，通过在将加载动画替换为重新加载的点击按钮，通过用户点击触发二次请求。</p>
<h3 id="scroll-兼容问题"><a href="#scroll-兼容问题" class="headerlink" title="scroll 兼容问题"></a>scroll 兼容问题</h3><p>scroll 目前仍存在兼容问题，视 webview 而定，iOS 7 及之前在 scroll 时会暂停 CSS3 animation 和 javascript 运行，但一些 APP 内定制的 webview 仍会存在这样的问题，所以，在实现相同需求前，请花一点时间验证。</p>
<p>以上，就是我在做滚动加载过程中的一点总结，辛苦期间启蒙大大、顾老师、宇航大大不厌其烦的解答。</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scroll </tag>
            
            <tag> touchevent </tag>
            
            <tag> 移动端 </tag>
            
            <tag> 滚动加载 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[zepto 添加 slideDown 和 slideUp]]></title>
      <url>http://lijundong.com/add-slide-in-zepto/</url>
      <content type="html"><![CDATA[<p>之前一直用 jQuery，最近开发移动端较多，转用 zepto，多数场景下都与 jQuery 无缝切换，但某些功能暂时还不支持，其中就包括我要用到的 slideDown 和 slideUp。</p>
<a id="more"></a>
<p>主要思路是通过 <code>animate</code> 控制元素的高度，<code>overflow: hidden</code>，动画结束时清空临时样式，在 <code>callback</code> 中操作元素的类或者进行其他操作。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">(<span class="function"><span class="keyword">function</span> (<span class="params">$</span>) </span>&#123;</span><br><span class="line">    $.fn.slideDown = <span class="function"><span class="keyword">function</span> (<span class="params">duration, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> position = <span class="keyword">this</span>.css(<span class="string">'position'</span>);</span><br><span class="line">        <span class="keyword">this</span>.show();</span><br><span class="line">        <span class="keyword">this</span>.css(&#123;</span><br><span class="line">          position: <span class="string">'absolute'</span>,</span><br><span class="line">          visibility: <span class="string">'hidden'</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> height = <span class="keyword">this</span>.height();</span><br><span class="line">        <span class="keyword">this</span>.css(&#123;</span><br><span class="line">          position: position,</span><br><span class="line">          visibility: <span class="string">'visible'</span>,</span><br><span class="line">          overflow: <span class="string">'hidden'</span>,</span><br><span class="line">          height: <span class="number">0</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">this</span>.animate(&#123;</span><br><span class="line">          height: height</span><br><span class="line">        &#125;, duration, <span class="string">"linear"</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            that.removeAttr(<span class="string">"style"</span>);</span><br><span class="line">            callback();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    $.fn.slideUp = <span class="function"><span class="keyword">function</span> (<span class="params">duration, callback</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> that = <span class="keyword">this</span>;</span><br><span class="line">        <span class="keyword">var</span> height = <span class="keyword">this</span>.height();</span><br><span class="line">        <span class="keyword">this</span>.css(&#123;</span><br><span class="line">            overflow: <span class="string">'hidden'</span>,</span><br><span class="line">            height: height</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="keyword">this</span>.animate(&#123;</span><br><span class="line">            height: <span class="number">0</span></span><br><span class="line">        &#125;,duration, <span class="string">'linear'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">            that.removeAttr(<span class="string">"style"</span>);</span><br><span class="line">            callback();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;;</span><br><span class="line">&#125;)(Zepto);</span><br></pre></td></tr></table></figure>
<p>参考：</p>
<ul>
<li><a href="">How to implement jquery like slideDown() in zepto</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> zepto </tag>
            
            <tag> slide </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 Dash 管理代码段]]></title>
      <url>http://lijundong.com/manage-code-snippets/</url>
      <content type="html"><![CDATA[<p>要想成为一名合格的泥瓦匠，我们理应管理好手上的工具，对于趁手的工具需要即用即拿，这在工作中会带来事半功倍的效果。</p>
<p>所以，今天我们讨论一下如何用 Dash 管理以及<strong>同步</strong>代码段（code snippets）。</p>
<a id="more"></a>
<h3 id="泥瓦匠和作家的工具"><a href="#泥瓦匠和作家的工具" class="headerlink" title="泥瓦匠和作家的工具"></a>泥瓦匠和作家的工具</h3><p>在之前的开发经历中，我并没有代码段的意识，一是项目做的少，需要复用的少，二是我那时认为一个优秀的开发者应该记住实现的原理而不是实现的代码，all is in mind。随着工作的规范以及工作量的增加，才开始意识到，好记性不如烂笔头。</p>
<p>一些优秀的文字作品里，我们往往能发现作者援引很多精彩的段落，这些句子关键时刻给文章增色不少，认知比较浅薄阶段，我会感叹这位作者的记性真是好啊，直到看过作家的写作过程才意识到，好文好句的使用不是因为作家的记性好，而是因为他们的笔记做的好，在需要时，可以快速找到相关的内容，进行参考，前期花费时间精力进行整理，使得后期可以高效复用，一劳永逸。</p>
<p>开发者的代码段就是作家的笔记，在开发量比较大的情况下，会出现很多高频场景，每个场景对应一个实现方式，我们不妨尝试记下这种方式，并在后面再次遇到时进行复用，并且对这种方式进行完善，形成<strong>最佳实践</strong>。</p>
<h3 id="关于-Dash"><a href="#关于-Dash" class="headerlink" title="关于 Dash"></a>关于 Dash</h3><p>Dash 作为体验极佳的 API 文档浏览器的同时，也拥有优秀的代码段管理功能。通过添加代码段，进行命名，打 tag， 让代码段可以快速被检索到，配合 Alfred 体验更佳。</p>
<h3 id="Dash-Snippets"><a href="#Dash-Snippets" class="headerlink" title="Dash Snippets"></a>Dash Snippets</h3><h4 id="为什么选-Dash"><a href="#为什么选-Dash" class="headerlink" title="为什么选 Dash"></a>为什么选 Dash</h4><p>在选择工具时，首先考虑是否满足基本需求，首先代码段检索速度必须快，即用即拿，其次必须是可以同步、备份。</p>
<p>Github 和 国内的 Coding 的都提供了 Gist 服务，这个服务首先解决的是同步问题，线上保存，方便同步和分享，但检索功能受制于网络和客户端，Github Gist 虽有信仰充值，还有体验优秀的开源的客户端 Lepton 支持，无奈 DNS 被污染，间歇性 timeout，导致体验很差，Coding Gist 虽然速度快，但没有客户端支持。</p>
<p>随后搜到 Dash 早<a href="//twitter.com/kapeli/status/446340673005187072">在 2014 年</a>就实现同步功能，不过方式是通过用户自己同步库文件的方式进行同步，聊胜于无。</p>
<h4 id="同步配置"><a href="#同步配置" class="headerlink" title="同步配置"></a>同步配置</h4><p>在 <code>preference &gt; Snippets &gt; Snippet library location</code> 中设置库文件（dash 后缀的文件）的路径，如果已经有库文件了，直接指向即可，下面我们介绍还没有库文件该怎么做。<br>可以看到 <code>Save as…</code> 按钮前面有一行提示 <code>To sync, save your library into Dropbox</code>。</p>
<ul>
<li>首先保存现有的库文件到你的自动同步文件夹，自动同步的网盘可以选择 DropBox、Google Driver 或者国内的坚果云。（我用的是 Google Driver）</li>
<li>保存后，再看库文件的配置路径已经自动指向保存的目录</li>
<li>库文件所做的任何更改都会通过 云盘同步</li>
<li>在新设备中，只需要将云盘中的库文件拉下拉，Dash 指向目录即可同步</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>工具只是辅助作用，内容有积累，所做的工作才会有意义，不可本末倒置。</p>
]]></content>
      
        <categories>
            
            <category> 规范 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> code snippets </tag>
            
            <tag> dash </tag>
            
            <tag> 规范 </tag>
            
            <tag> Google Driver </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【译】高性能 React：提高性能的 3 个开发工具]]></title>
      <url>http://lijundong.com/translation-High-Performance-React-3-New-Tools-to-Speed-Up-Your-Apps/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文地址：<a href="//medium.freecodecamp.org/make-react-fast-again-tools-and-techniques-for-speeding-up-your-react-app-7ad39d3c1b82">High Performance React: 3 New Tools to Speed Up Your Apps</a><br>文中介绍了几种 React 应用性能检测工具，并且提供了几条关于应用性能提升的解决方案。</p>
</blockquote>
<a id="more"></a>
<p><img src="//source.lijundong.com/17-8-6/93104397.jpg" alt=""></p>
<p>React 通常都是非常快的，只不过一些小错误很容易会导致性能问题，组件挂载慢、组件树过深以及无意义的渲染周期等因素都会导致用户使用时感觉很慢。</p>
<h3 id="工具-1：Chrome-的-Performance-时间轴"><a href="#工具-1：Chrome-的-Performance-时间轴" class="headerlink" title="工具#1：Chrome 的 Performance 时间轴"></a>工具#1：Chrome 的 Performance 时间轴</h3><p>React 15.4 引入了一个新的 Performance 时间轴功能，它可以让你准确查看组件的挂载、更新以及卸载的过程，还能可视化相关组件的生命周期。<br><strong>注意：</strong>因为该功能使用了尚未完全适配的 <code>User Timing API</code>，所以目前只适用于 Chrome、Edge、以及 IE。</p>
<h4 id="如何使用"><a href="#如何使用" class="headerlink" title="如何使用"></a>如何使用</h4><ol>
<li>在 Chrome 中访问你的页面，并且在 URL 后添加一个参数：<code>react_perf</code>，例如：<code>//localhost:3000?react_perf</code></li>
<li>打开 Chrome 调试面板，进入 <strong>Performance</strong> 选项，点击  <strong>Record</strong></li>
<li>执行一些你想分析的操作</li>
<li>停止 <strong>Recording</strong></li>
<li>检查时间轴中生成的可视化图表</li>
</ol>
<p><img src="//source.lijundong.com/17-8-6/84131199.jpg" alt=""></p>
<h4 id="查看检测结果"><a href="#查看检测结果" class="headerlink" title="查看检测结果"></a>查看检测结果</h4><p>每个彩条代表着一个组件占用的时间，因为 Javascript 是单线程的，当一个组件正在挂载或渲染时，它会占用主进程并且会阻止其他代码运行。</p>
<p>像 <code>[update]</code> 一类被包在括号中的文字描述了组件当前的状态，即组件正处于生命周期的哪一阶段。时间轴会分解出每个过程，因此你可以看到类似于 <code>[componentDidMount]</code>、<code>[componentWillReceiveProps]</code>、<code>[ctor]</code> （构造函数)、以及 <code>[render]</code> 等方法占用的时间。</p>
<p>堆叠到一起的彩条代表组建树，虽然在 React 中经常见到非常深的组件树，但如果你优化一些频繁挂载的组件，则可以减少包装组件的数量，而每少一个组件都会减少性能以及内存的损耗。</p>
<p>这里需要注意的是，时间轴中展示的消耗时间是 React 开发环境编译的效果，会比生产环境慢很多。事实上， 使用 Performance 时间轴本身也会拖慢页面的速度。虽然这些时间不能代表页面在实际生产环境中的表现，但<strong>不同组件之间的相对时间是准确的</strong>，此外，组件是否更新与页面是否是处于生产环境，这两者之间也无关联。</p>
<h4 id="示例-1"><a href="#示例-1" class="headerlink" title="示例#1"></a>示例#1</h4><p>为了例子生动好玩，我在 TodoMVC 项目中恶意制造了一些严重的性能问题，你可以<a href="//perf-demo.firebaseapp.com/?react_perf">在这里试试</a><br>在页面中打开调试工具，在 <strong>Performance</strong> 选项中点选 <strong>Record</strong>，然后可以在页面添加一些 TODO，停止 <strong>Record</strong>，检查时间轴，看看你能不能定位页面中造成性能问题的组件 :)。</p>
<h3 id="工具-2：why-did-you-update"><a href="#工具-2：why-did-you-update" class="headerlink" title="工具#2：why-did-you-update"></a>工具#2：why-did-you-update</h3><p>无意义的渲染周期是造成 React 性能问题的最常见的原因之一，React 默认状态下，如果父组件渲染，子组件即便属性值没有改变也会重新渲染。<br>举个例子，现有子组件如下：</p>
<pre><code>class DumbComponent extends Component {
      render() {
    return &lt;div&gt; {this.props.value} &lt;/div&gt;;
      }
}
</code></pre><p>父组件如下所示：</p>
<pre><code>class Parent extends Component {
      render() {
          return &lt;div&gt;
              &lt;DumbComponent value={3} /&gt;
          &lt;/div&gt;;
      }
}
</code></pre><p>不管父组件什么时候渲染，<code>DumbComponent</code> 都会重新渲染，不管它的属性值有没有改变。</p>
<p>通常，如果 <code>render</code> 函数执行了，但虚拟 DOM 没有任何改变，就意味此渲染周期是浪费的，无意义的，<code>render</code> 方法应该是纯净并且没有任何副作用的，在庞大的 React 项目中，要检测可能造成这些问题的代码会非常棘手，但比较方便的是，现在有个现成的工具可以用。</p>
<h4 id="使用-why-did-you-update"><a href="#使用-why-did-you-update" class="headerlink" title="使用 why-did-you-update"></a>使用 why-did-you-update</h4><p><img src="//source.lijundong.com/17-8-6/19890189.jpg" alt=""></p>
<p><code>why-did-you-update</code> 是一个挂钩到 React 的库，可以检测一些潜在的不必要的组件渲染，它可以检测到组件属性值没变但却重新渲染的情况。</p>
<h4 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h4><ol>
<li>用 npm 安装：<code>npm i --save-dev why-did-you-update</code></li>
<li>把下面这段代码放到页面中，位置不限：<pre><code>import React from &apos;react&apos;
if (process.env.NODE\_ENV !== &apos;production&apos;) {
      const {whyDidYouUpdate} = require(&apos;why-did-you-update&apos;)
      whyDidYouUpdate(React)
}
</code></pre></li>
</ol>
<p><strong>注意：</strong> <code>why-did-you-update</code> 虽然在开发环境下非常好用，但是一定要确保在上线前注释或删除这段代码，否则它会拖慢页面速度。</p>
<h4 id="查看检测结果-1"><a href="#查看检测结果-1" class="headerlink" title="查看检测结果"></a>查看检测结果</h4><p>当项目运行时，<code>why-did-you-update</code> 监控页面并且打印出没必要改变的组件，并展示这些组件渲染周期前后的属性值。</p>
<h4 id="示例-2"><a href="#示例-2" class="headerlink" title="示例#2"></a>示例#2</h4><p>为了演示，我在 TodoMVC 项目里安装了 <code>why-did-you-update</code>，并放在了 Code Sandbox 平台上（一个线上 React 平台），打开浏览器的 console，在页面中添加一些 ToDo，你就会看到控制台输出的问题。</p>
<p><a href="//codesandbox.io/s/xGJP4QExn">这里是项目</a>。</p>
<p>需要注意的是，项目中的一些组件存在无意义渲染，试试上面的方式来杜绝那些无意义的组件渲染，如果你处理正确的话，控制台中应该没有 <code>why-did-you-update</code> 输出的警告。</p>
<h3 id="React-开发工具"><a href="#React-开发工具" class="headerlink" title="React 开发工具"></a>React 开发工具</h3><p><img src="//source.lijundong.com/17-8-6/18745991.jpg" alt=""></p>
<p>Chrome 扩展“React Developer Tools”已经内建了更新组件的高亮功能，这对于定位无意义的组件渲染是非常有用的，要使用功能，首先得<a href="//codesandbox.io/s/xGJP4QExn">安装 React Developer Tools 扩展</a><br>安装后，在调试面板中进入 React 选项狂，打开 “Highlight Updates” 功能。</p>
<p><img src="//source.lijundong.com/17-8-6/71902719.jpg" alt=""></p>
<p>然后操作项目页面，和不同的组件进行交互，你就可以看到 React 开发工具高亮的效果了。</p>
<h4 id="查看检测结果-2"><a href="#查看检测结果-2" class="headerlink" title="查看检测结果"></a>查看检测结果</h4><p>React 开发工具高亮显示了那些在给定时间内重新渲染的组件，不同颜色的高亮对应了组件更新的频率，蓝色代表更新频率低，而颜色范围为绿黄红则代表了高频更新。<br>看到黄色或者红色不一定代表有问题，可能是调整滑动条或触发频繁更新的其他 UI 组件。但如果你点击了一个按钮却看到了红色高亮，这可能代表代码有问题了。该扩展的功能是让开发者定位项目中无意义更新的组件，作为一个开发者，你应该对给定时间内哪些组件需要更新有大概的意识。</p>
<h4 id="示例-3"><a href="#示例-3" class="headerlink" title="示例#3"></a>示例#3</h4><p>同上面的例子一样，为了演示更形象生动，我在 TodoMVC 项目中恶意造成了一些不必要的组件更新。<br><a href="//highlight-demo.firebaseapp.com/">TodoMVC 项目地址</a><br>打开上面的项目链接，打开 React 开发工具，并且打开 “update highlighting”，当你在输入框中输入时，你会看到所有的 Todo 条目都在高亮，如果你快速输入，你会看到高亮的颜色不同，分别代表着这些组件的更新频率。</p>
<h3 id="修复无意义渲染"><a href="#修复无意义渲染" class="headerlink" title="修复无意义渲染"></a>修复无意义渲染</h3><p>当你确定项目中的一些组件存在无意义渲染的情况时，有以下几种简单的修复方式。</p>
<h4 id="使用-PureComponent"><a href="#使用-PureComponent" class="headerlink" title="使用 PureComponent"></a>使用 PureComponent</h4><p>在上面的示例中，<code>DumbComponent</code> 想对于它的属性值是一个纯粹的函数，也就是说，该组件只需要在它的属性值改变时进行重新渲染，React 有一个内建的特殊组件 <code>PureComponent</code> 恰好适用于这种场景。<br>现用 <code>React.PureComponent</code> 取代 <code>React.Component</code>，如下所示：</p>
<pre><code>class DumbComponent extends PureComponent {
      render() {
        return &lt;div&gt; {this.props.value} &lt;/div&gt;;
      }
}
</code></pre><p>使用以上的写法，该组件就只会在属性值改变的情况下重新渲染。</p>
<p>需要注意的是，<code>PureComponent</code> 对属性值只做了<strong>浅比较</strong>，如果数据结构比较复杂，它可能会忽略一些属性的属性的改变而不让组件重新渲染。</p>
<h4 id="执行-shouldComponentUpdate"><a href="#执行-shouldComponentUpdate" class="headerlink" title="执行 shouldComponentUpdate"></a>执行 shouldComponentUpdate</h4><p><code>shouldComponentUpdate</code> 是一个组件因为属性或者状态改变而重新渲染之前被调用的组件方法，如果 <code>shouldComponentUpdate</code> 返回 <code>true</code> ，<code>render</code> 会被调用，如果返回的是 <code>false</code>, <code>render</code> 则不会被调用。<br>通过执行 <code>shouldComponentUpdate</code> 方法，你可以避免无意义的组件渲染。<br>举个例子，现在 <code>dumb</code> 组件中添加 <code>shouldComponentUpdate</code> 方法，像以下展示的写法：</p>
<pre><code>class DumbComponent extends Component {
     shouldComponentUpdate(nextProps) {
    if (this.props.value !== nextProps.value) {
          return true;
    } else {
          return false;
    }
      }
    render() {
    return &lt;div&gt;foo&lt;/div&gt;;
      }
}
</code></pre><h3 id="在生产环境调试性能问题"><a href="#在生产环境调试性能问题" class="headerlink" title="在生产环境调试性能问题"></a>在生产环境调试性能问题</h3><p>React 开发工具只在你本地起作用，但如果你想在生产环境了解项目的性能问题的话，你应该试试 <a href="//logrocket.com/">LogRocket</a></p>
<p><img src="//source.lijundong.com/17-8-6/2564335.jpg" alt=""></p>
<p><a href="//logrocket.com/">LogRocket</a> 就像是网络应用的录像机，记录在你网站上发生的一切，你不用去猜测问题的原因，你可以重播存在 bug 或者性能问题的会话来快速定位问题的根本原因。<br>LogRocket 会记录页面的性能数据、Redux 动作／状态、日志、错误、网络请求／响应（包含响应头和响应体）以及浏览器的 metadata。也会记录页面中的 HTML 和 CSS，重新创建即使是最复杂的单页应用的非常完美的视频。</p>
<p><a href="//logrocket.com/">LogRocket | Logging and Session Replay for JavaScript Apps</a></p>
<p>感谢您的阅读，希望这些工具和技巧对你的下一个项目会有帮助！</p>
]]></content>
      
        <categories>
            
            <category> 译文 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> 译文 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【译】React 的 10 种迷你开发模式]]></title>
      <url>http://lijundong.com/translation-10-mini-react-patterns/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文地址：<a href="//hackernoon.com/10-react-mini-patterns-c1da92f068c5">10 React mini-patterns</a><br>对于 React 初学者的一些经验之谈，初次翻译，望多指教。</p>
</blockquote>
<a id="more"></a>
<p>过去几年里，我参与了几个较大的 <code>React</code> 项目，也做了非常多的小项目，在这过程中，我总结了一些 React 常用的开发模式。<br>这些模式是我在 React 入门阶段非常希望看到的，如果你是 <code>React</code> 新手，那你今天算是赚到了，如果你已经是 <code>React</code> 老鸟，不妨看看有哪些模式。本文较长，如果觉得一些介绍比较枯燥（比如 3、6、8、10），可以选择跳过。</p>
<h3 id="1-数据传输"><a href="#1-数据传输" class="headerlink" title="1. 数据传输"></a>1. 数据传输</h3><p>我建议每个 React 初学者都去了解 React 组件向下传递数据（对象、字符串等）的模式，以及传递让子组件传回数据的方法的模式。可以联想救援队将食物与对讲机送抵井底被困矿工。<br>举个例子：<br><img src="//source.lijundong.com/17-8-3/97066388.jpg" alt="" title="Sending data down and up"></p>
<p>图中左右分别是父组件和子组件，你可以想象连接父子组件的这两个属性允许了数据的双向流通。</p>
<p>其实这一条不算真正意义上的开发模式，下面才是。</p>
<h3 id="2-修复-HTML-原生-input"><a href="#2-修复-HTML-原生-input" class="headerlink" title="2. 修复 HTML 原生 input"></a>2. 修复 HTML 原生 input</h3><p>React 和 web 组件的一大好处是，当页面出现 bug，你可以很快定位到问题所在。<br>如果你在考虑页面中使用不同的输入标签，你会发现这些标签的命名大多是无意义，因此，如果我在处理一个包含多个输入的页面时，我首先会处理这个问题。</p>
<p><img src="//source.lijundong.com/17-8-3/93024380.jpg" alt=""></p>
<p>这些输入标签虽然不是纯粹的花架子，但是仍有很多地方可以改进：</p>
<ul>
<li>输入应该通过 <code>onChange</code> 方法返回值，而不是通过 <code>Javascript</code> 事件绑定</li>
<li>保证 <code>onChange</code> 返回值的类型与输入的值类型统一，如果 <code>typeof props.value</code> 是一个 <code>number</code> 类型，应该将 <code>e.target.value</code> 转换成 <code>number</code> 类型再返回</li>
<li>一套 <code>radio</code> 标签和一个 <code>select</code> 标签在功能上都是相同的，唯一的区别只是 UI 的不同，推荐项目中保留一个 <code>&lt;PickOneFromMany /&gt;</code> 组件，可以通过属性 <code>ui=&quot;radio&quot;</code> 或者 <code>ui=&quot;dropDown&quot;</code> 进行控制</li>
</ul>
<p>以上是我处理原生输入标签时用到的方法，你可以选择其他方式，关键是将这些原生标签转换成为你所用，再也不需要忍受那些糟糕的原生输入标签了。</p>
<h3 id="3-给-input-绑定唯一-ID-的标签"><a href="#3-给-input-绑定唯一-ID-的标签" class="headerlink" title="3. 给 input 绑定唯一 ID 的标签"></a>3. 给 input 绑定唯一 ID 的标签</h3><p>关于 <code>input</code> 输入，如果你注重用户体验，你应该给每个 <code>&lt;input&gt;</code> 标签绑定一个 <code>&lt;label&gt;</code>,通过 <code>id</code>/<code>for</code> 属性进行关联。<br>但如果给每一个 <code>input</code> 都想一个独一无二且生动形象的 ID，那样太浪费时间，而且使用随机生成 ID 的方式也不可行，客户端与服务器端生成的 ID 不同，导致校验不通过，这里推荐你创建一个提供增量 ID 的模块，并在 <code>input</code> 组件中使用，如下所示：</p>
<pre><code>class Input extends React.Component {
    constructor(props) {
        super(props);
        this.id = getNextId();
        this.onChange = this.onChange.bind(this);
  }
   onChange(e) {
        this.props.onChange(e.target.value);
  }
   render() {
       return (
       &lt;label htmlFor={this.id}&gt;
           {this.props.label}
           &lt;input
               id={this.id}
               value={this.props.value} 
               onChange={this.onChange}
               /&gt;
               &lt;/label&gt;
           );
      }
}
</code></pre><p>虽然这里解决 ID 的问题，但是这个方案有漏洞，<code>getNextId()</code> 方法每被调用一次，数字会增加，如果是在服务端渲染，这个数字会持续增加到，因此应该在每次渲染之前进行一次重置（每一次网络请求)。因此，一个完整的获取 ID 模块应该是这样：</p>
<pre><code>let count = 1;
export const resetId = () =&gt; {
    count = 1;
}
export const getNextId = () =&gt; {
    return element-id-${count++};
}
</code></pre><h3 id="4-通过-props-控制-CSS"><a href="#4-通过-props-控制-CSS" class="headerlink" title="4. 通过 props 控制 CSS"></a>4. 通过 props 控制 CSS</h3><p>当你想在不同的实例中应用不同的 CSS 样式，你可以通过传入不同的 <code>props</code> 值来控制需要应用的样式。表面上看，这样的操作似乎很简单，但实际应用中往往会出现很多错误。<br>我总结共有三种不同的方式来控制组件的样式：</p>
<h4 id="使用主题"><a href="#使用主题" class="headerlink" title="使用主题"></a>使用主题</h4><p>借鉴主题的思路，将一系列的 CSS 声明组合在一起，统一成一个主题，在组件中生命组件的主题，例如 <code>primary</code> 按钮以及 <code>secondary</code> 按钮：<br><code>&lt;Button theme=&quot;secondary&quot;&gt;Hello&lt;/Button&gt;</code><br>一个组件中尽量使用一个主题。</p>
<h4 id="使用标记"><a href="#使用标记" class="headerlink" title="使用标记"></a>使用标记</h4><p>也许你的页面中会有一些圆角 <code>button</code>，但这样的风格不符合你已经定义的主题，遇到这种情况，你可能要去找 UI 商量一个统一的方案，或是在元素中添加一个布尔属性，像这样：<br><code>&lt;Button theme=&quot;secondary&quot; rounded&gt;Hello&lt;/Button&gt;</code><br>等同于这种写法：<br><code>&lt;Button theme=&quot;secondary&quot; rounded={true}&gt;Hello&lt;/Button&gt;</code></p>
<h4 id="设置值"><a href="#设置值" class="headerlink" title="设置值"></a>设置值</h4><p>当然，你肯定会遇到直接在组建中写 CSS 样式的情况，像这样：<br><code>&lt;Icon width=&quot;25&quot; height=&quot;25&quot; type=&quot;search&quot; /&gt;</code></p>
<h4 id="举个例子"><a href="#举个例子" class="headerlink" title="举个例子"></a>举个例子</h4><p>设想你现在需要实现一个链接，但现在有三种截然不同的主题，一些链接有下划线，一些没有，就像这样：</p>
<p><img src="//source.lijundong.com/17-8-3/67133232.jpg" alt=""></p>
<p>下面给出我的处理方式：</p>
<pre><code>// demo.jsx
const Link = (props) =&gt; {
  let className = link link--${props.theme}-theme;
  if (!props.underline) className += &apos; link--no-underline&apos;;
  return &lt;a href={props.href} className={className}&gt;{props.children}&lt;/a&gt;;
};
Link.propTypes = {
  theme: PropTypes.oneOf([
&apos;default&apos;, // primary color, no underline
&apos;blend&apos;, // inherit surrounding styles
&apos;primary-button&apos;, // primary color, solid block
  ]),
  underline: PropTypes.bool,
  href: PropTypes.string.isRequired,
  children: PropTypes.oneOfType([
PropTypes.element,
PropTypes.array,
PropTypes.string,
  ]).isRequired,
};
Link.defaultProps = {
  theme: &apos;default&apos;,
  underline: false,
};
</code></pre><p>CSS 代码如下：</p>
<pre><code>// demo.css
.link--default-theme,
.link--blend-theme:hover {
  color: #D84315;
}

.link--blend-theme {
  color: inherit;
}

.link--default-theme:hover,
.link--blend-theme:hover {
  text-decoration: underline;
}

.link--primary-button-theme {
  display: inline-block;
  padding: 12px 25px;
  font-size: 18px;
  background: #D84315;
  color: white;
}

.link--no-underline {
  text-decoration: none;
}
</code></pre><p>你可能注意到我在类名(例如 <code>link-no-underline</code> )中使用了 <code>--</code>，源自于我过去一直以少写 CSS 代码为目标，但后来意识到这是错的。如果样式可以更好地应用在布局中，我更喜欢使用一些双重和多选择器规则集。<br>虽然我之前提过，但我还想再强调一下，扩展一个网站最困难的部分是 CSS 的部分，Javascript 部分都很容易，CSS 开始就写的很混乱，后面维护会非常困难，一入布局深似海。<br>实际项目中，一些 web 开发者往往被 CSS 特异性给难倒了，如果你在浏览网页，不妨查看一下页面中的元素（比如导航栏中的提示图标）是如何用 CSS 实现的。<br>如果你不想打开控制台去找，也可以思考这个元素（比如圆圈中包含数字）的实现样式涉及了哪些 CSS 规则。</p>
<blockquote>
<p>译者注：所说的元素包含在原文站点中</p>
</blockquote>
<p>共有二十三条规则，还不包括从其他十一条规则下集成的规则，其中 <code>line-height</code> 被复写了九次……即便 <code>line-height</code> 是一只猫，也未能幸免于难。</p>
<p><img src="//source.lijundong.com/17-8-3/72770435.jpg" alt=""></p>
<blockquote>
<p>译者注：猫有九命的梗</p>
</blockquote>
<p>使用 React 之后，我们更好地处理页面样式，更周到地决定设计哪些类应用在我们的组件中，将全局设置迁移到 <code>Button.scss</code> 文件中，移除所有对于特异性以及文件顺序的依赖。<br>边注：我梦想有一天，我们再也不需要浏览器对于样式使用的建议。<code>::user-agent-styles: none-whatsoever;</code> 让这样的梦想成为现实。</p>
<h3 id="5-开关组件"><a href="#5-开关组件" class="headerlink" title="5. 开关组件"></a>5. 开关组件</h3><p>开关组件是呈现众多组件之一的组件。可以是用来展示页面的 <code>&lt;Page&gt;</code> 组件或者是 tab 集合中的 tab，也可以是模态组件中的不同模式。<br>我过去习惯使用 switch 语句处理，实际传递到我想要渲染的组件，再从组件本身导出对组件的引用（作为命名导出，作为组件的属性）。<br>现在看来这些都是可怕的方式，我已经解决的一个潜在危险方法是我用一个对象将 prop 值映射到组件中。</p>
<pre><code>import HomePage from &apos;./HomePage.jsx&apos;;
import AboutPage from &apos;./AboutPage.jsx&apos;;
import UserPage from &apos;./UserPage.jsx&apos;;
import FourOhFourPage from &apos;./FourOhFourPage.jsx&apos;;
const PAGES = {
home: HomePage,
about: AboutPage,
user: UserPage,
};
const Page = (props) =&gt; {
const Handler = PAGES[props.page] || FourOhFourPage;
return &lt;Handler {...props} /&gt;
};
Page.propTypes = {
page: PropTypes.oneOf(Object.keys(PAGES)).isRequired,
};
</code></pre><p><code>PAGE</code> 对象中的值可以在 prop 类型中用来捕获开发时错误。当然，我们可以像这样使用 <code>&lt;Page page=&quot;home&quot; /&gt;</code>，如果你将 <code>home</code>、<code>about</code> 和 <code>user</code> 分别提换成 <code>/</code>、<code>/about</code> 以及 <code>／user</code>，那么你就有了半个路由啦。<br>（下一步想法：移除 react-router）</p>
<h3 id="6-进入组件内部"><a href="#6-进入组件内部" class="headerlink" title="6. 进入组件内部"></a>6. 进入组件内部</h3><p>如果你想提高用户体验，不妨试试在页面输入较频繁的输入框添加 <code>autofocus</code>，非常简单，但却可以大大提高用户的使用体验。<br>设想页面中有一个登陆表单，而作为“用户体验高级设计师”的你想在表单的“用户名”输入框中添加一个闪烁的光标，但发现登陆表单显示在模态框中，而 <code>autofocus</code> 属性只能应用在页面加载。<br>现在你该怎么办 ？<br>你可能会用 Javascript 实现，给 <code>input</code> 标签一个 <code>id</code>，再用 <code>document.getElementById(&#39;user-name-input&#39;).focus()</code> 让输入框聚焦。这种方法虽然有效，但不够优雅，你的程序中对字符串匹配的依赖应该越少越好。<br>比较幸运的是，有一种非常简单的方法可以实现这个效果：</p>
<pre><code>class SignInModal extends Component {
  componentDidMount() {
this.InputComponent.focus();
  }
  render() {
return (
  &lt;div&gt;
&lt;label&gt;User name: &lt;/label&gt;
&lt;Input
  ref={comp =&gt; { this.InputComponent = comp; }}
/&gt;
  &lt;/div&gt;
)
  }
}
</code></pre><p>需要注意的是，当你对组件使用 <code>ref</code> 时，是对组件的引用（而不是底层元素），所以你可以访问其方法。</p>
<h3 id="7-组件的边界"><a href="#7-组件的边界" class="headerlink" title="7. 组件的边界"></a>7. 组件的边界</h3><p>设想你正在写一个搜索用户的组件，当你输入的时候，你会看到一列潜在匹配的用户名和头像，就像这样。</p>
<p><img src="//source.lijundong.com/17-8-3/79573493.jpg" alt=""></p>
<p>当你在设计这个组件时，你可能会犹豫，列表中的每一项都属于 <code>SearchSuggestion</code> 组件吗 ？只有几行 HTML 和 CSS 代码，也许不是 ？但我曾经告诉自己：“如果感到疑惑，那就再建一个新组件”。</p>
<p>我如果这样做，就一个单独的组件都没了。相反，只有一个给每个入口返回对应 DOM 的 <code>renderSearchSuggestion</code> 方法，我就生成了如下的结果：</p>
<pre><code>const SearchSuggestions = (props) =&gt; {
  // renderSearchSuggestion() behaves as a pseduo SearchSuggestion component
  // keep it self contained and it should be easy to extract later if needed
  const renderSearchSuggestion = listItem =&gt; (
&lt;li key={listItem.id}&gt;{listItem.name} {listItem.id}&lt;/li&gt;
  );
  return (
&lt;ul&gt;
  {props.listItems.map(renderSearchSuggestion)}
&lt;/ul&gt;
  );
}
</code></pre><p>如果需求变得更复杂或者你想在其他地方使用这个组件，你可以把这段代码复制到新的组件中。</p>
<p>不要过早地组件化，组件不像茶匙，你可以有很多组件。</p>
<p>我的意思不是要你把你觉得应该独立成组件的部分合并到父组件中，而是想让你把那些你认为不应该独立成组件的部分做一些改进，让它看起来和所在的组件更贴合（如果可以的话）。</p>
<h3 id="8-用于格式化文字的组件"><a href="#8-用于格式化文字的组件" class="headerlink" title="8. 用于格式化文字的组件"></a>8. 用于格式化文字的组件</h3><p>当我刚接触 React 时，我觉得组件是一个非常大的东西，一种给 DOM 结构分组的方法，但实际上，组件就像是用于格式化的一种方法。<br>这里有一个 <code>&lt;Price&gt;</code> 组件，输入一个数字会返回一个漂亮的字符串（加上小数点或者 $ 符）。</p>
<pre><code>const Price = (props) =&gt; {
const price = props.children.toLocaleString(&apos;en&apos;, {
  style: props.showSymbol ? &apos;currency&apos; : undefined,
  currency: props.showSymbol ? &apos;USD&apos; : undefined,
  maximumFractionDigits: props.showDecimals ? 2 : 0,
});
return &lt;span className={props.className}&gt;{price}&lt;/span&gt;
};

Price.propTypes = {
  className: React.PropTypes.string,
  children: React.PropTypes.number,
  showDecimals: React.PropTypes.bool,
  showSymbol: React.PropTypes.bool,
};

Price.defaultProps = {
  children: 0,
  showDecimals: true,
  showSymbol: true,
};

const Page = () =&gt; {
  const lambPrice = 1234.567;
  const jetPrice = 999999.99;
  const bootPrice = 34.567;
  return (
&lt;div&gt;
  &lt;p&gt;One lamb is &lt;Price className=&quot;expensive&quot;&gt;{lambPrice}&lt;/Price&gt;&lt;/p&gt;
  &lt;p&gt;One jet is &lt;Price showDecimals={false}&gt;{jetPrice}&lt;/Price&gt;&lt;/p&gt;
  &lt;p&gt;Those gumboots will set ya back &lt;Price showDecimals={false} showSymbol={false}&gt;{bootPrice}&lt;/Price&gt; bucks.&lt;/p&gt;
&lt;/div&gt;
  );
};
</code></pre><p>注意：代码中没有对获取的数字进行校验……</p>
<h3 id="9-Store-服务于组件"><a href="#9-Store-服务于组件" class="headerlink" title="9. Store 服务于组件"></a>9. Store 服务于组件</h3><p>这行代码我已经写过无数遍了（虽然夸张了点）：<br><code>if (props.user.signInStatus === SIGN_IN_STATUSES.SIGNED_IN)...</code><br>最近我意识到，我这样做是不是错了，我想知道的是“用户登录了没”，而不是“用户登录的状态是否等于已登录 ？”<br>对于我的组件而言，他们应该有足够的发展，而不该因为了忧虑这些小事叨扰它们，他们不该管得到的 price 参数是否是 Number 类型，也不应该为了一个参数的 <code>true</code> 或者 <code>false</code> 烦心。<br>如你所见，如果在 <code>store</code> 中定义的数据符合你的组件要求，你的组件就会简洁很多。如我之前所说，bug 隐藏在复杂逻辑之后，你的组件越简洁，出现 bug 的几率就越低。<br>但开发中肯定会遇到一些复杂的场景，关于如何解决这些问题，我这里有几点经验：</p>
<ol>
<li>制定组件的一般结构以及其所需要的数据</li>
<li>设计满足这些需求的 <code>stroe</code></li>
<li>尽量使你传入的数据匹配 <code>stroe</code> 的要求<br>关于最后一点，我建议创建一个单独的模块来完成所有输入数据的格式处理，属性重命名、字符串转数字、对象转数组、Date 字符串转 Date 对象等等。</li>
</ol>
<h3 id="10-不要通过相对路径引入组件"><a href="#10-不要通过相对路径引入组件" class="headerlink" title="10. 不要通过相对路径引入组件"></a>10. 不要通过相对路径引入组件</h3><pre><code>import Button from &apos;../../../../Button/Button.jsx&apos;;
import Icon from &apos;../../../../Icon/Icon.jsx&apos;;
import Footer from &apos;../../Footer/Footer.jsx&apos;;
</code></pre><p>用下面的方式替代上面的引用方式，是不是觉得清爽很多 ？<br>    import {Button, Icon, Footer} from ‘Components’;<br>理论上可以这么做：</p>
<ul>
<li>创建一个 <code>index.js</code> 文件来引用你所有的组件</li>
<li>使用 Webpack 的 <code>resolve.alias</code> 来重定向所有组件到 <code>index</code> 文件<br>我目前还没尝试过这种方法，我打算在先有的项目中拿一个出来转换成这样的组织方式（蛤蛤，骗你的，我一直都是这么做的）。但正如我之前写的代码一样，我后来意识到这种方式是错的，原因如下：</li>
</ul>
<ol>
<li>Webpack 2 中的 <a href="//github.com/webpack/webpack/issues/4160#issuecomment-281236136">resolve.alias</a> 失效了</li>
<li>因为组件不在 <code>node_modules</code> 里，所以这算是一个 <code>eslint</code> 错误</li>
<li>如果你有一个好的 IDE，那么它会知道项目里的所有组件，如果你忘了加一些属性值，它会温馨地提示你添加，你可以通过 <code>cmd</code>/<code>Ctrl</code> + 点击就可以打开这些组件所在的文件。如果用我之前的方式引用组件，那么 IDE 将找不到我的组件的位置，我就失去了这些温馨智能的功能。</li>
</ol>
<p><img src="//source.lijundong.com/17-8-3/7528192.jpg" alt=""></p>
<p>标注：<a href="//medium.com/@hsiungmatt">matthew hsiung</a> 在关于 eslint 和 WebStorm 的 issue 回复下面提供了一个<a href="//medium.com/@hsiungmatt/great-article-917a2f6b718e#.w66jk94ao">解决方案</a></p>
]]></content>
      
        <categories>
            
            <category> 译文 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> react </tag>
            
            <tag> 译文 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[llog-32]]></title>
      <url>http://lijundong.com/good-coder-not-equal-to-good-developer/</url>
      <content type="html"><![CDATA[<blockquote>
<p>时间：2017-7-27<br>坐标：北京<br>天气：阴</p>
</blockquote>
<a id="more"></a>
<p>上午在给新上的项目排期，之前在实验室做项目阶段，最怕的就是估时间，估多了甲方不同意，估少了自己做不完，但这个问题肯定要解决，从启蒙那学了估期的方法，将任务分解，分成小模块，感觉难度不大就 0.5 天，感觉比较复杂就 1 天，感觉非常复杂就继续划分模块，再将这些划分出的模块进行排期，用这种方式很容易就可以将任务拆解完，最后将每个模块的估期汇总，便可以得出整个项目需要的时间，联调的时间根据接口数量以及复杂度进行估算，最后再给自己两天 buffer 时间以防万一。</p>
<p>这样的方式使得项目排期变得不再无处下手，让整个流程清晰，不过对于开发的要求就相对严格，必须在规定的时间之前完成相关模块的开发，这就回到之前提到的，给自己一个合理的时间规划，并且严格执行。这应该是一个非常基础的习惯，但是之前没有养成，只能现在来补，亡羊补牢，为时未晚。</p>
<p>中午吃饭时，启蒙问我在公司的感觉如何，个人而言，对这家公司非常有好感，很幸运能加入，他鼓励我好好加油，说这段时间会是成长最快的时间，对此我深信不疑，这段时间我能感受到我的进步，接下来还有更多的挑战，希望通过这些挑战上升到一个新的境界，因此不能放松对自己的要求。面对未来，即紧张，又兴奋。</p>
<p>这段时间想清楚了一件事，技术没有非此即彼。没有最好，只有最合适。记得来公司面试，二面我问教主，为什么后台不统一用 JAVA 或者 PHP，前端没有统一使用框架，为什么不用 vue，而是用 react。现在看这个问题，大概因为一个人做项目做久了，太理想化，学校作业和实际项目工程差距很大。</p>
<p>学生时代，在项目里遇到很烂的代码，看不顺眼就想着重构，在百度实习期间也看过很多很烂的代码，但不敢碰，原因是因为不知道改了之后会出现什么问题，这就是问题关键所在，什么是好代码？什么又是烂代码？在生产环境中，首先需要确保的是项目的稳定性，保证项目的正常运行，所做的一切改动的前提都应该是项目的稳定运行。我时常吐槽烂代码都是以开发者的角度看问题，出于代码洁癖，并没有从项目的角度看待问题。从这个角度看，我可能是个好的编码者，但是不是一个合格的开发者，<strong>开发者应该以解决问题作为思考的方向，而不是为了编码而编码，只有编码者才会纠结编码方式，开发者只会考虑解决方案。</strong>但往往好的开发者都会养成好的编码方式。</p>
<p>前几天我在 less、sass、stylus 之间纠结，思考哪一个才是最佳的方案，最后发现这个问题本身就是个伪命题，因为作为一个合格的开发者，我应该三者都会，在处理问题的时候立刻上手解决问题，我可以选择一个作为个人偏好，语言之间没有最好，只有最合适，在需要的地方使用合适的语言，理解了这一点，顿时感觉视野开阔。</p>
<p>反思之前非此即彼的想法，实属懒惰的想法，学习好一门框架也好，构建工具也罢，难以掩盖的是我懒惰，不想学习新框架新工具的小心思。因此面对选择时，我会很自然的选择自己熟悉的框架或者工具，而不是出自于项目需要的考量。这样看来，我永远不可能成为一个好的开发者，</p>
<p>不因该局限一隅，哪有什么最优解，只有相对最合适的解。</p>
]]></content>
      
        <categories>
            
            <category> llog </category>
            
        </categories>
        
        
        <tags>
            
            <tag> llog </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[网上高效阅读]]></title>
      <url>http://lijundong.com/surf-the-Internet-efficiently/</url>
      <content type="html"><![CDATA[<p>网络信息多且繁杂，利用工具提高阅读效率，你如何过滤信息 ？你如何使用 Pocket 和 Evernote ？</p>
<a id="more"></a>
<h3 id="序言：现状"><a href="#序言：现状" class="headerlink" title="序言：现状"></a>序言：现状</h3><p>在<a href="//www.lijundong.com/normalize-life-with-tools/">「给生活一个规范」</a>一文里，我提到要给一个高频事件添加一个相对最优的方案，比如使用工具。<br>我日常会使用 Pocket 和各种笔记应用（Evernote、oneNote、有道云笔记等）保存看到的文章，只不过没有明确两种工具的使用场景，使用的方式混乱，没有形成规范，导致文章保存后打开率非常低，也没能形成有效的价值积累。今天来给一个目前认为最佳的解决方案。</p>
<h3 id="工具场景"><a href="#工具场景" class="headerlink" title="工具场景"></a>工具场景</h3><p>Pocket 和笔记类产品的应用场景完全不同，Pocket 的功能主打 Mark 功能，即标记，标记方便稍后阅读（read it later），标记的是文章的链接，如果文章链接失效了，这个标记也就无意义了。</p>
<p>以 Evernote 为代表的笔记应用主打笔记和剪藏的功能，即将文章内容复制到我的笔记账户中，这个副本记录的是内容，不再受原链接内容影响，完全独立，我们可以在原内容之上进行笔记、二次创作等。</p>
<h3 id="流程规范"><a href="#流程规范" class="headerlink" title="流程规范"></a>流程规范</h3><p>此规范来源于万维刚先生的<a href="//book.douban.com/subject/25986341/">「万万没想到：用理工科思维理解世界」</a>中的“高效冲浪的办法”一节。</p>
<h4 id="只点不看"><a href="#只点不看" class="headerlink" title="只点不看"></a>只点不看</h4><p>在浏览信息过程中，一篇文章或者是一个页面中会附有很多链接，推荐的方法是将遇到的新链接在新 Tab 中打开（PC 端按住 Ctrl/ Cmmand 点选链接），保证本页的阅读不被打断。只点链接不看。</p>
<h4 id="略读"><a href="#略读" class="headerlink" title="略读"></a>略读</h4><p>接下来速读每条信息，迅速过滤低质量信息，面对质量尚可的文章，使用 Chrome 的 Pocket 插件将链接添加到 Pocket 列表中。</p>
<h4 id="精读"><a href="#精读" class="headerlink" title="精读"></a>精读</h4><p>以两天或三天为一个周期，对 Pocket 中的精选文章精读，一旦发现文章质量好到了永久保存的程度，使用笔记应用的剪藏插件剪藏内容到笔记本中，方便后期处理。</p>
<h4 id="价值积累"><a href="#价值积累" class="headerlink" title="价值积累"></a>价值积累</h4><p>对剪藏的内容进行整理，归类，方便后期进行检索，同时可以在此文之上进行二次总结，进行笔记。</p>
<h3 id="跋"><a href="#跋" class="headerlink" title="跋"></a>跋</h3><p>使用宽框架过滤信息，可以保证信息的相对高质量。</p>
<blockquote>
<p>诺贝尔经济学奖得主丹尼尔·卡尼曼在《思考，快与慢》一书中介绍了两个著名的心理学概念：“窄框架”（narrow framing）和“宽框架”（broad framing）。所谓窄框架，就是遇到一个东西做一次决策，一事一议；而宽框架则是把所有东西都摆在桌面上集中选择。</p>
</blockquote>
<p>好的信息来源是好文章的保证，每一个好作家肯定都会有一个收集信息的体系，我一直想试图建立这样的体系，希望本文对你有益。</p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><ul>
<li>万维钢(同人于野). 万万没想到:用理工科思维理解世界 (Kindle 位置 2312-2314). 电子工业出版社. Kindle 版本.</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 规范 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 规范 </tag>
            
            <tag> 阅读 </tag>
            
            <tag> pocket </tag>
            
            <tag> evernote </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Charles 使用小记]]></title>
      <url>http://lijundong.com/use-charles-up-to-debug/</url>
      <content type="html"><![CDATA[<p>脱离使用场景谈工具都是在扯淡，今天咱们不扯淡，说点有用的，最近做的一个项目中，使用了 Charles 让调试变得简单很多，这是可以提升编码幸福感的工具，这里总结几个常用的 feature。</p>
<a id="more"></a>
<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><p>电脑系统：MacOS 10.12.6<br>Charles 版本：4.1.4</p>
<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>当下的移动应用开发广泛应用了 Hybrid 模式，将 H5 页面嵌入原生应用中，以手机 QQ 为例，<a href="//mp.weixin.qq.com/s/evzDnTsHrAr2b9jcevwBzA">70% 以上业务是由 H5 开发</a>，由此可见一斑。<br>常规的开发流程是 FE 在本地开发环境中写好 H5 页面，开发完成后，后台 RD 将项目部署到测试版本中，手机下次测试版 APP，在 APP 内对页面进行测试。</p>
<p>FE 在开发环境中可以通过浏览器调试，部署到测试环境后，遇到新的 bug 或是需求的改动，需要在本地改动代码，重新部署到测试包，打开 APP 进行验证。这个过程太复杂，后台 RD 也会很烦。</p>
<p>这时候就需要 Charles 辅助开发。</p>
<h3 id="关于-Charles"><a href="#关于-Charles" class="headerlink" title="关于 Charles"></a>关于 Charles</h3><p>Charles 常用于截取网络封存包，可以设想一下，你的手机与服务器之间存在一个代理服务器，手机所有的请求都会经过这个代理服务器，如下示意图<br><img src="" alt=""><br>设想你是一个负责收发信件的信使，当一位客户将书信交予你递送时，你可以按常规流程去递送，也可以在非常规状态下更改信件的内容、收信人等，你还可以决定这封信递送的速度，甚至直接将这封信拦截不送，知道收信人地址的你，可以反复递送信件考研收件人的耐心。收信人的回信，你可以将其修改，调包。长此以往，作为信使，你可能会被投诉，开除。但作为工具，你可以成为 Charles，受到大批开发者的拥趸。</p>
<h3 id="监听设备"><a href="#监听设备" class="headerlink" title="监听设备"></a>监听设备</h3><p>为了 Charles 能监听到你的移动设备的所有请求，你需要做一点配置</p>
<ul>
<li>你的移动设备与电脑处于同一局域网下，查看你电脑在此局域网下的 IP</li>
<li>打开 Charles，Proxy &gt; MacOS proxy，在 Proxy setting 下设置监听端口，默认 8888</li>
<li>关闭移动端的所有代理工具，VPN、Shadowsocks 等</li>
<li>在移动设备 WLAN 设置中，添加代理，IP 和 端口分别时电脑的 IP 以及 Charles 设置的端口</li>
<li>退出 WLAN 设置，进入浏览器，访问网络，Charles 会显示设备连接请求，点击同意，可以看到在 session 窗口中迅速显示监听到的请求，配置结束。</li>
</ul>
<h3 id="常用-feature"><a href="#常用-feature" class="headerlink" title="常用 feature"></a>常用 feature</h3><p>前面都是介绍以及配置，下面介绍几个常用的 feature。</p>
<h4 id="map"><a href="#map" class="headerlink" title="map"></a>map</h4><p>点选 session 窗口中的请求，右键查看选项，选项的最后两项即是 map 选项，提供了 <code>map remote/map local</code> 选项，可以将请求的资源映射到本地或者远程的资源，举个例子。<br>你需要调试页面中的 JS 代码，你可以将页面的 JS 请求映射到本地开发环境中的 JS 文件，刷新页面后，页面请求到的是本地 JS 文件，如此一来，修改本地 JS 后，刷新页面就可以在 APP 内查看到效果。<br>map 是这次开发中主要使用的功能，大幅度提高了我的开发效率。</p>
<h3 id="参考："><a href="#参考：" class="headerlink" title="参考："></a>参考：</h3><ul>
<li><a href="//blog.devtang.com/2015/11/14/charles-introduction/">Charles 从入门到精通</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hybrid </tag>
            
            <tag> debug </tag>
            
            <tag> charles </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[用户体验之 localStorage]]></title>
      <url>http://lijundong.com/improve-UE-by-localStorage/</url>
      <content type="html"><![CDATA[<p>通过在页面应用使用 localStorage 提升用户使用体验。 </p>
<a id="more"></a>
<h3 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h3><p>首先，来说两个关于用户体验的经历。<br>大学在校期间，经常被安排在教学系统上填写各种信息采集表，教学系统是学校找外面外包公司做的，给的钱多，出的活却很烂，信息采集的表单是很老旧的 table 布局，一页一个表单，一个表单有几十个项，当你辛辛苦苦填完了整个表单，点击提交按钮页面却没有响应，系统卡了？你抱着试一试的心态刷新了页面，恭喜你，之前填的数据全部丢失，像是卷入了一个黑洞，你又从第一项开始填。这样的系统毫无用户体验可言，不是强制要求，没人愿意打开这样的网站。<br>到了大三找实习，投简历到阿里，需要在系统上填一些信息，对应的也是一个表单很多项，巧的是，提交时页面卡住了，虽然脑海中重现了被学校系统支配的恐惧，但除了刷新页面别无选择，刷新之后，页面回来了，之前填写的数据竟然原封不动的回来了，当时很菜，不知道是怎么实现，就觉得背后的技术肯定很厉害，后面才去了解这方面的知识。<br>后来了解了 localStorage 之后，才意识到表单数据保存背后的技术很简单，但是用在了相应的场景，给用户带来的是非常棒的用户体验，从那之后，我对阿里校招页面一直很有好感。</p>
<h3 id="关于-localStorage"><a href="#关于-localStorage" class="headerlink" title="关于 localStorage"></a>关于 localStorage</h3><h4 id="容量"><a href="#容量" class="headerlink" title="容量"></a>容量</h4><p>localStorage 的容量是相对其作用域而言，而 localStorage 的作用域是 <code>协议 + 主机名 + 端口</code>，目前业界默认同一作用域下拥有 5M 的容量，手机端和 PC 端标准略有不同。<br>数据以键值对方式存储，同一作用域下的数据可以被相互访问，并且不允许跨域。<br><strong>注意：</strong> localStorage 存储只支持存储字符串，因此在存储对象时需要使用 <code>JSON.stringify()</code> 以及 <code>JSON.parse()</code> 进行序列化以及解析。</p>
<h4 id="API"><a href="#API" class="headerlink" title="API"></a>API</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">localStorage.setItem(<span class="string">"name"</span>,<span class="string">"leeon"</span>);   <span class="comment">//设置 name 值 为 leeon</span></span><br><span class="line">localStorage.getItem(<span class="string">"name"</span>);   <span class="comment">//获取 name 的值</span></span><br><span class="line">localStorage.key(<span class="number">0</span>);    <span class="comment">//获取第 0 个数据项的 key 名</span></span><br><span class="line">localStorage.removeItem(<span class="string">"name"</span>);    <span class="comment">//移除 name 对应的键值对</span></span><br><span class="line">localStorage.clear();   <span class="comment">//清除当前作用域下的所有localstorage数据</span></span><br></pre></td></tr></table></figure>
<h3 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h3><p>上面提到的表单数据保存是最常见的场景，避免信息的丢失，实现方式是在 <code>input</code> 标签 <code>blur</code>（失焦) 后，触发 localStorage 存储，页面加载之后，从 localStorage 读取已存储的数据，表单提交成功后，移除存储的数据。</p>
<p>还有一种情况，类似于博客系统内置的评论功能，页面可以参见下图，这样的场景，没有登陆，用户信息不能持久化保存，每次评论都需要再次填写基础信息<br><img src="//source.lijundong.com/17-7-6/47641822.jpg" alt=""></p>
<p>应用 localStorage 保存用户基础信息，我用 React 写了一个评论框输入组件，包含的 <code>_saveUsername</code> 和 <code>_loadUsername</code> 方法对应着用户信息的存储以及获取，分别会在输入框失焦以及页面渲染时被调用，体验更好的方式则是提供一个保存基本信息的选项，用户在勾选后，信息被保存。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CommentInput</span> <span class="keyword">extends</span> <span class="title">Component</span> </span>&#123;</span><br><span class="line">    <span class="keyword">constructor</span>(props) &#123;</span><br><span class="line">        <span class="keyword">super</span>(props);</span><br><span class="line">        <span class="keyword">this</span>.state = &#123;</span><br><span class="line">            username: <span class="string">''</span>,</span><br><span class="line">            content: <span class="string">''</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">static</span> PropType = &#123;</span><br><span class="line">        onSubmit: PropType.func</span><br><span class="line">    &#125;</span><br><span class="line">    componentDidMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>.textarea.focus()</span><br><span class="line">    &#125;</span><br><span class="line">    componentWillMount() &#123;</span><br><span class="line">        <span class="keyword">this</span>._loadUsername()</span><br><span class="line">    &#125;</span><br><span class="line">    _saveUsername (username) &#123;</span><br><span class="line">        localStorage.setItem(<span class="string">'username'</span>, username)</span><br><span class="line">    &#125;</span><br><span class="line">    _loadUsername () &#123;</span><br><span class="line">        <span class="keyword">const</span> username = localStorage.getItem(<span class="string">'username'</span>)</span><br><span class="line">        <span class="keyword">if</span>(username) &#123;</span><br><span class="line">            <span class="keyword">this</span>.setState(&#123;username&#125;)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    handleUserNameBlur (event) &#123;</span><br><span class="line">        <span class="keyword">this</span>._saveUsername(event.target.value)</span><br><span class="line">    &#125;</span><br><span class="line">    handleUsernameChange (event) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            username: event.target.value</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    handleContentChange (event) &#123;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;</span><br><span class="line">            content: event.target.value</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    handleSubmit () &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">this</span>.props.onSubmit) &#123;</span><br><span class="line">            <span class="keyword">const</span> &#123;username, content&#125; = <span class="keyword">this</span>.state</span><br><span class="line">            <span class="keyword">this</span>.props.onSubmit(&#123;</span><br><span class="line">                username: <span class="keyword">this</span>.state.username, </span><br><span class="line">                content: <span class="keyword">this</span>.state.content,</span><br><span class="line">                createdTime: +<span class="keyword">new</span> <span class="built_in">Date</span>()</span><br><span class="line">            &#125;)</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">this</span>.setState(&#123;content: <span class="string">''</span>&#125;)</span><br><span class="line">    &#125;</span><br><span class="line">    render () &#123;</span><br><span class="line">        <span class="keyword">return</span> (</span><br><span class="line">            <span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-input"</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-field"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">"comment-field-name"</span>&gt;</span>userName:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-field-input"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">input</span></span><br><span class="line">                        <span class="attr">onBlur</span>=<span class="string">&#123;this.handleUserNameBlur.bind(this)&#125;</span></span><br><span class="line">                        <span class="attr">value</span>=<span class="string">&#123;this.state.username&#125;</span></span><br><span class="line">                        <span class="attr">onChange</span>=<span class="string">&#123;this.handleUsernameChange.bind(this)&#125;</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-field"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">span</span> <span class="attr">className</span>=<span class="string">"comment-field-name"</span>&gt;</span>Comment:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-field-input"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">textarea</span></span><br><span class="line">                        <span class="attr">ref</span>=<span class="string">&#123;(textarea)</span> =&gt;</span> &#123;this.textarea = textarea&#125;&#125;</span><br><span class="line">                         value=&#123;this.state.content&#125; </span><br><span class="line">                         onChange=&#123;this.handleContentChange.bind(this)&#125;</span><br><span class="line">                        &gt;<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">className</span>=<span class="string">"comment-field-button"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">button</span> <span class="attr">onClick</span>=<span class="string">&#123;this.handleSubmit.bind(this)&#125;</span> &gt;</span>comment<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            )</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
<h3 id="关于用户体验"><a href="#关于用户体验" class="headerlink" title="关于用户体验"></a>关于用户体验</h3><p>因为做的工作的原因，遇到一些很棒的网站第一反应是打开控制台看代码，每每看到那些巧妙的代码都赞叹不已，少量的代码带来用户体验的大幅度提升，这是具有很高性价比的一件事。遇到一些烂糟糟的设计，会考虑烂的原因，以及如何去改进，比如渣浪的微博。</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> UE </tag>
            
            <tag> localstorage </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[给生活一个规范]]></title>
      <url>http://lijundong.com/normalize-life-with-tools/</url>
      <content type="html"><![CDATA[<p>生活中的高频问题都应有一个相对最优解，如果没有，你应该有一个。</p>
<a id="more"></a>
<p>生活中有很多易用并能极大提高效率的工具，借助这些工具，可以让过程事半功倍，我喜欢搜寻可以解决生活痛点的工具，搜寻到的工具，有些成了生活工作必不可缺的一部分，有些，则只是好工具，我并没有高频使用，主要原因是因为在生活与工作时，没能形成一个体系，没有一个成型的规则。</p>
<p>做事没有规则的结果，就是在多次处理同一问题时，可能会选择多种解决方式，每次选了新的解决方式都可能会出现新的问题，无形中增加了处理成本，再者，每次解决问题后，都会获得已知的相对最优解，再次遇到相同问题时，抛弃最优解的处理方式无疑是对之前投入成本的浪费，长此以往，就陷入了高投入低产出的低效局面。</p>
<p>我一直想解决这个问题，试图给遇到的高频问题一个普世方案，在处理问题时高效果断，例如最基本 GTD（get things done），市面上存在的优秀的 GTD 工具已经非常多了，我试过很多款，都是拥有庞大用户基数的工具，体验很棒，然而具体也只是试用而已，我一直没能生成一个 GTD 规范，待处理事项仍旧依靠大脑缓存，处于这样的状态，一是我待处理的事物数量不大，大脑可以应付，这种状态的改变不是必须，二是我没有提高效率的意识。这样的状态虽然很少出错，但是有弊端，我需要通过高频率的回忆来加深记忆，这样回忆的过程可能发生在任何时候，在我工作之余放松的时候，在我专注思考问题的时候，这个提醒会突然蹦出来打断我，这种隐形成本的消耗是巨大的。另一个例子是关于写博客，我用 sublime 或者 vim（比如这篇）编写 markdown，通过 hexo 将生成的文件推到服务器，偶尔一篇文章会在多个平台发布，我需要在每个站点贴一遍，中间消耗的成本可以看得见。还有一个例子，我这个人不善交际，情商很低，在大街上遇到同一个人（认识但不熟），我可能一次会选择热情打招呼，另一次，选择装作没看见，是不是很奇葩？我自己也觉得奇葩，这样的结果就是我与那些人形同陌路。在遇到一些二选一的情况时，我没有一个完整的规则体系，最后的结果往往带来很多苦恼。以上三个问题只是一部分，但已经说明了很多问题。</p>
<p>我今天在用 google calendar 制定日程，未来的一段时间里，它应该会被高频使用，iOS 原生的提醒也开始用，需要查看待处理事项时，大脑告诉我打开工具去看，不需要高频率的让大脑高频 check 事项。生活中还有很多低效的地方，我意识到的以及没能意识到的，都待被改进。</p>
<p>两年前开始折腾 shadowsocks，之后开始用 Chrome 和 Google 账户，从那之后就很少使用国内的搜索引擎，我的设备上再也没出现国内的浏览器，这就是我的规则，这些工具和模式已经成为默认选项，一个稳态，即便环境变化，经过调整后，又进入另一个稳态，这就是我想达到的效果。</p>
]]></content>
      
        <categories>
            
            <category> life </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
            <tag> 规范 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chrome 下合并不同 Google 账号数据]]></title>
      <url>http://lijundong.com/synchronize-data-between-google-accounts/</url>
      <content type="html"><![CDATA[<p>如果你在 Chrome 上同时拥有了两个 Google 账号，并深受其扰，开始想着合并两个账户的数据到某一个账户，我想告诉你，这真的远比想象的简单。</p>
<a id="more"></a>
<p>在今天之前一直使用的是两个 google 账号，主要的数据在于 Chrome 上存储的扩展、书签以及密码，新号用于邮件管理，两个账号的使用随着时间的延续会让事情变得复杂，之前没找到合适的方式，今天在官方的帮助文档里找到了解决方案：</p>
<blockquote>
<ol>
<li>打开 Chrome。</li>
<li>点击右上角的“更多”图标 更多。</li>
<li>点击设置。</li>
<li>在“登录”下方，点击取消与您的 Google 帐户的关联。</li>
<li>点击断开帐户连接。</li>
<li><strong>提示是否保留数据，选择保留</strong></li>
<li>点击登录 Chrome。</li>
<li>使用新账户进行登陆</li>
<li><strong>提示是否同步数据，选择同步</strong></li>
</ol>
</blockquote>
<p>Alphabet 的产品才是真的感动人心。</p>
<p>来源：<a href="//support.google.com/chrome/answer/6386684?hl=zh-Hans">在 Chrome 中切换同步帐户</a></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> google </tag>
            
            <tag> 数据 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript 的赋值、引用以及深拷贝、浅拷贝]]></title>
      <url>http://lijundong.com/deep-clone-vs-shallow-clone/</url>
      <content type="html"><![CDATA[<p>在之前总结 <a href="//www.lijundong.com/this-in-javascript/">This 用法</a> 的时候,遇到了传参问题，由此意识到了复制与引用的问题，说得高端些，引申出了深拷贝与浅拷贝的问题，后来在链家面试的时候，和一面也讨论到这个问题，当时的理解比较乱，涉及到深拷贝实现的方面都不熟悉，现在试着总结一下。</p>
<a id="more"></a>
<h3 id="基本类型-amp-引用类型"><a href="#基本类型-amp-引用类型" class="headerlink" title="基本类型 &amp; 引用类型"></a>基本类型 &amp; 引用类型</h3><p>ECMAScript 中的变量类型分为两类</p>
<ul>
<li>基本类型：number、string、boolean、null、undefined</li>
<li>引用类型：Object</li>
</ul>
<p>两者的区别就是这篇文章要讨论的赋值问题，首先复习一下两种变量类型的存储方式。</p>
<h4 id="基本类型"><a href="#基本类型" class="headerlink" title="基本类型"></a>基本类型</h4><p>基本类型变量的存储方式如下图所示，栈内存中分别存储着变量的标识符以及变量的值。</p>
<p><img src="//source.lijundong.com/17-2-28/11497418-file_1488289350451_141ba.png" alt=""></p>
<p>所以 <code>var a = &#39;leeon&#39;;</code> 这里的 a 就是以下面的的方式进行存储。</p>
<p><img src="//source.lijundong.com/17-2-28/17191622-file_1488289392814_648.png" alt=""></p>
<h4 id="引用类型"><a href="#引用类型" class="headerlink" title="引用类型"></a>引用类型</h4><p>至于引用类型变量，参看下图，可以对比上面基本类型变量的存储结构。</p>
<p><img src="//source.lijundong.com/17-2-28/579494-file_1488289373542_128ea.png" alt=""></p>
<p>引用类型变量与基本类型变量的区别是，栈内存存储的是变量的标识符以及对象在堆中的存储地址。可能听起来拗口，例如 <code>var obj1 = {name: &#39;leeon&#39;};</code> 这样的对象定义之后，就会以下图的方式进行存储。</p>
<p><img src="//source.lijundong.com/17-2-28/28695556-file_1488289419385_10e6a.png" alt=""></p>
<p>存储结构的差异只是前提，下面的代码才到重点</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 情境一</span></span><br><span class="line"><span class="comment">// 基本类型变量</span></span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'leeon'</span>;  <span class="comment">//leeon</span></span><br><span class="line"><span class="keyword">var</span> b = a;       </span><br><span class="line"><span class="built_in">console</span>.log(b);  <span class="comment">//leeon</span></span><br><span class="line">b = <span class="string">'pine'</span>;      <span class="comment">// pine</span></span><br><span class="line"><span class="built_in">console</span>.log(a);  <span class="comment">//leeon</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 这段代码很简单，改变 b 并不会影响到 a</span></span><br><span class="line"><span class="comment">// 下面这段就不同了</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//情境二</span></span><br><span class="line"><span class="comment">//引用类型变量</span></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;name: <span class="string">'leeon'</span>&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line"><span class="built_in">console</span>.log(obj2);  <span class="comment">// &#123;name: 'leeon'&#125;</span></span><br><span class="line">obj2.name = <span class="string">'pine'</span>;</span><br><span class="line"><span class="built_in">console</span>.log(obj1);  <span class="comment">// &#123;name: 'pine'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// obj2 是 obj1 的副本，但修改 obj2 却影响了 obj1 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 情境三</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;name: <span class="string">'leeon'</span>&#125;</span><br><span class="line"><span class="keyword">var</span> obj2 = obj1;</span><br><span class="line"><span class="built_in">console</span>.log(obj2);  <span class="comment">// &#123;name: 'leeon'&#125;</span></span><br><span class="line">obj2 = &#123;name: <span class="string">'pine'</span>&#125;;</span><br><span class="line"><span class="built_in">console</span>.log(obj1);  <span class="comment">// &#123;name: 'leeon'&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// obj2 是 obj1 的副本，但修改 obj2 没有影响了</span></span><br></pre></td></tr></table></figure>
<p>这样的问题最初遇到时觉得很费解，但是从内存角度进行理解之后，答案开始清晰，情境一中，基本类型变量的拷贝，复制了变量的标识符以及值，<code>a</code> 与 <code>b</code> 的关系保持了独立。</p>
<p><img src="//source.lijundong.com/17-2-28/62092344-file_1488289444123_a40c.png" alt=""></p>
<p>而在情境二中，在引用类型变量这里，拷贝时复制的是变量的标识符与 <strong>对象存储地址</strong>，导致最后 <code>obj1</code> 和 <code>obj2</code> 都指向同一个对象，<code>obj2</code> 和 <code>obj1</code> 只是同一对象的两个面具，相互影响自然是必然的结果。 </p>
<p><img src="//source.lijundong.com/17-3-1/23876944-file_1488298747142_8a89.png" alt=""></p>
<p>但是情境三中，对 <code>obj2</code> 的更改却没影响到 <code>obj1</code>，这又是为什么？难道上面的理论有问题？当然不是，给 <code>obj2</code> 赋值一个新的对象，背后做的其实是将 <code>obj2</code> 的对象地址指向 <code>{name: &#39;pine&#39;}</code>，并不会影响到原对象，原理如下 ：<br><img src="//source.lijundong.com/17-3-1/33543805-file_1488298796532_150c9.png" alt=""></p>
<p>这样的拷贝方式就引发了一个问题，我本想拷贝一个新的完全独立的新对象，最后只得出来一个壳，这是无法接受的（感受到了敷衍……）。这里就引出了深拷贝与浅拷贝之说（人们总喜欢造一堆高大上的概念）。</p>
<h3 id="深拷贝-amp-浅拷贝"><a href="#深拷贝-amp-浅拷贝" class="headerlink" title="深拷贝 &amp; 浅拷贝"></a>深拷贝 &amp; 浅拷贝</h3><p>由此可以明白，所谓浅拷贝，指的是仅拷贝对象地址，拷贝后的副本与原对象仍共用一块内存，而深拷贝则是将对象进行内存级别的复制，拷贝的副本与原对象保持独立。</p>
<h3 id="如何实现深拷贝"><a href="#如何实现深拷贝" class="headerlink" title="如何实现深拷贝"></a>如何实现深拷贝</h3><h4 id="JSON-parse"><a href="#JSON-parse" class="headerlink" title="JSON.parse()"></a>JSON.parse()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> oobj1 = &#123;name: <span class="string">'leeon'</span>,friens: &#123;name:[<span class="string">'john'</span>,<span class="string">'kk'</span>,<span class="string">'jd'</span>]&#125;&#125;;</span><br><span class="line">temp = <span class="built_in">JSON</span>.stringify(obj1);</span><br><span class="line"><span class="keyword">var</span> obj2 = <span class="built_in">JSON</span>.parse(temp);</span><br><span class="line"><span class="comment">// p 是 o 的深拷贝</span></span><br></pre></td></tr></table></figure>
<h4 id="slice"><a href="#slice" class="headerlink" title="slice()"></a>slice()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1=[<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>];</span><br><span class="line"><span class="keyword">var</span> arr2=arr1.slice(<span class="number">0</span>);</span><br><span class="line"><span class="comment">// arr2 是 arr1 的深拷贝</span></span><br></pre></td></tr></table></figure>
<h4 id="concat"><a href="#concat" class="headerlink" title="concat()"></a>concat()</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> arr1=[<span class="string">"1"</span>,<span class="string">"2"</span>,<span class="string">"3"</span>];</span><br><span class="line"><span class="keyword">var</span> arr2 = arr1.concat();</span><br><span class="line"><span class="comment">// arr2 是 arr1 的深拷贝</span></span><br></pre></td></tr></table></figure>
<h4 id="jQuery-的-extend"><a href="#jQuery-的-extend" class="headerlink" title="jQuery 的 extend()"></a>jQuery 的 extend()</h4><p><em>参考：</em></p>
<ul>
<li>(美)David Flanagan. JavaScript权威指南（原书第6版） (Kindle 位置 3112-3125).</li>
<li><a href="//www.cnblogs.com/tracylin/p/5346314.html">也来谈一谈js的浅复制和深复制</a></li>
<li>​<a href="//bosn.me/js/js-call-by-sharing/">JS是按值传递还是按引用传递?</a></li>
<li><a href="//segmentfault.com/a/1190000002789651">JS 进阶基本类型 引用类型 简单赋值 对象引用</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 深拷贝 </tag>
            
            <tag> 浅拷贝 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[早班车乱谈]]></title>
      <url>http://lijundong.com/think-in-early-bus/</url>
      <content type="html"><![CDATA[<p>我们处在一个巨大的变革之中。</p>
<a id="more"></a>
<p>最近在看 「天才在左，疯子在右」，没看之前一直以为是描述疯狂的天才，看了才知道是一本精神病患者访谈录，每篇文章，作者记录和一位患者的交流过程，书中每一个病例，没有病因，没有结论，作者只是在记录这些奇怪的病例以及现象。这让我想起了初中看的「故事会」里面描述的鬼怪之说，所以书中内容我已经不关心，继续看是因为某些患者的想法十分有趣，每看完一篇，我甚至都会想好一会，我可能是下一位患者。</p>
<p>这就是早班车乱谈的来由，坐上公司的班车，我开始胡思乱想。</p>
<p>老司机！开车啊</p>
<p>现在看来，「Matrix」真是一部具有超时代意义的电影，十年前看的时候，我只单纯地把它作为科幻电影对待，但如今再看，愈发觉得这会是个预言，科技的发展不断把我们向前推，那个 matrix 世界的轮廓也愈加的明显。</p>
<p>谁也无法保证我们不是生活在一个 matrix 世界里，活着的感觉也许只是脑电波的闪动，我们连躯体都不需要，只需要思考的脑体，连上主机。那么，存在的意义在哪 ？</p>
<p>VR 的技术日臻成熟，不消几年，VR 会和智能手机一样普及，VR 欺骗了我们的眼睛，那么，VR 之后呢？直接欺骗我们的神经系统如何 ？技术足够成熟，给大脑接一根数据线，我们获得了与现实一样的感受，在那里，你长得帅，娶了一位漂亮的姑娘，生活没有烦恼，没有顾虑，你还愿意回来吗？那些生活痛苦的人，现实生活不如意的人，选择了把自己托管到主机上，只需要低成本就可以开始一段多彩缤纷的生活。最后的结果会不会是 matrix ？</p>
<p>我们坐上了一趟停不下来的火车，不知道下一个隧道之后是美景还是深渊。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> matrix </tag>
            
            <tag> 早班车 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Mac 备份方案]]></title>
      <url>http://lijundong.com/backup-in-mac/</url>
      <content type="html"><![CDATA[<p>行走江湖，讲求的是一个稳字。</p>
<a id="more"></a>
<p>在狗东买的硬盘下午到了，折腾了下，格式化、分区、备份。这里记录下我的方案。</p>
<h3 id="关于硬盘"><a href="#关于硬盘" class="headerlink" title="关于硬盘"></a>关于硬盘</h3><p>硬盘、耳机一类带有玄学色彩的电子产品，我选购的经验是预算之内跟着群众走，排除你有情怀或者是行家里手的情况。作为普通消费者，我们的需求也很简单，因此不必考虑那些极端环境,只要不犯错就达到我们的基本诉求了，毕竟群众的眼睛是雪亮的。<br>所以，我买了希捷的 <a href="//detail.zol.com.cn/move_disk/index364131.shtml">Backup-Plus-Slim-1TB(STDR1000300)</a>。</p>
<p>我是跟着群众走的，所以不要问我为什么……</p>
<h3 id="关于用途"><a href="#关于用途" class="headerlink" title="关于用途"></a>关于用途</h3><p>我买的容量是 1T，计划分区出 250G 作为 timeMachine 的备份空间 A，剩下的用做日常文件存储 B。</p>
<h3 id="关于文件格式"><a href="#关于文件格式" class="headerlink" title="关于文件格式"></a>关于文件格式</h3><p>先抛出结论，硬盘分为两个区，250G 备份分区 A 格式化为 <code>Mac OS Extended</code> 格式，另一分区 B 格式化为 <code>exfat</code> 格式，将硬盘转插在 windows 上，将 B 分区格式化为 <code>NTFS</code> 文件格式。</p>
<p>为适配 Windows，故将大分区 B 设置成 <code>NTFS</code> 格式，<code>NTFS</code> 在 Mac 下可读不可写，但是希捷官方提供了适用于 MacOS(10.9. 及以上)的 <a href="//www.seagate.com/cn/zh/support/downloads/item/ntfs-driver-for-mac-os-master-dl/">Paragon</a>，所以唯一的问题也被解决了。</p>
<h3 id="timeMachine"><a href="#timeMachine" class="headerlink" title="timeMachine"></a>timeMachine</h3><p>关于 timeMachine 的使用，极其简单，打开 timeMachine，选择备份盘，备份。</p>
<p><strong>建议每次升级之前先备份一次。</strong></p>
<h3 id="关于恢复"><a href="#关于恢复" class="headerlink" title="关于恢复"></a>关于恢复</h3><p>目前我还没用到恢复，希望永远也用不到，哈哈。</p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 备份 </tag>
            
            <tag> timemachine </tag>
            
            <tag> mac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript 中 this 的指向]]></title>
      <url>http://lijundong.com/this-in-javascript/</url>
      <content type="html"><![CDATA[<p>关于 javascript 中 this 用法的笔记，来自 <a href="//github.com/getify/You-Dont-Know-JS/blob/master/this%20%26%20object%20prototypes/ch1.md">You Don’t Know JS: this &amp; Object Prototypes</a> 的读书笔记。内容包括 this 绑定规则的总结，以及遇到具体问题时，判断 this 指向的方法。</p>
<a id="more"></a>
<p>首先了解下 this 的绑定规则，分别是 <code>默认绑定</code>、<code>显式绑定</code>、<code>隐式绑定</code>、<code>new 绑定</code>，说是绑定规则，我的理解是四种应用场景，不同的应用场景对应着不同的指向。</p>
<h3 id="指向规则"><a href="#指向规则" class="headerlink" title="指向规则"></a>指向规则</h3><h4 id="默认绑定"><a href="#默认绑定" class="headerlink" title="默认绑定"></a>默认绑定</h4><p>默认绑定的方式很常见，举个例子</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br><span class="line">fun(); <span class="comment">// 1</span></span><br></pre></td></tr></table></figure>
<p>在默认绑定规则下，<strong>this 被绑定到了全局对象</strong>，所以例子中输出的 <code>this.a</code> 的值即全局变量 <code>a</code> 的值。</p>
<p>需要注意的是，绑定到全局对象只存在于非严格模式下，当使用严格模式时，<strong>this 会被绑定到 undefined</strong>。参见下面的案例。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">"use strict"</span>;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="built_in">console</span>.log( <span class="keyword">this</span>.a );</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">2</span>;</span><br><span class="line">fun(); <span class="comment">// this is undefined</span></span><br></pre></td></tr></table></figure>
<h4 id="隐式绑定"><a href="#隐式绑定" class="headerlink" title="隐式绑定"></a>隐式绑定</h4><p>相比于默认绑定只有两个选项，隐式绑定就含蓄的多，我们需要分析上下文来弄清 this 的指向。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">2</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line">obj.foo();  <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
<p>foo 作为引用属性被调用，虽然 foo 不属于 obj 对象，但在被调用时，foo 落脚于 obj 对象，<strong>隐式绑定将 this 绑定到此时的上下文对象</strong>，所以 此时的 <code>this.a</code> 和 <code>obj.a</code> 是一样的。</p>
<p>这一个例子还不能完全将隐式绑定解释清晰，为此，我们需要更多的例子,下面我们来讨论下引用</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">  a: <span class="number">2</span>,</span><br><span class="line">  obj: obj1</span><br><span class="line">&#125;;</span><br><span class="line">obj1.foo(); <span class="comment">//1</span></span><br><span class="line">obj2.obj.foo(); <span class="comment">//1</span></span><br></pre></td></tr></table></figure>
<p>如果遇到这样的引用链，稍加分析不难理解，对象属性引用链中只有最顶层或者说最后一层会影响 this 的上下文，换而言之，在分析引用链中的 this 指向，只需要分析最后一层即可。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = obj.foo;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'global'</span>;</span><br><span class="line">bar(); <span class="comment">//global</span></span><br></pre></td></tr></table></figure>
<p>在这段代码中，<code>bar</code> 引用 <code>obj.foo</code>，<code>obj.foo</code> 引用 <code>fun</code>，归根结底，<code>bar</code> 引用的还是 <code>fun</code>，最后在调用时，和 <code>obj</code> 并没有关系，这只是开始，下面继续。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">doDoo</span>(<span class="params">fn</span>) </span>&#123;</span><br><span class="line">  fn();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'global'</span>;</span><br><span class="line">doFoo(obj.foo); <span class="comment">// global</span></span><br></pre></td></tr></table></figure>
<p>这段代码中的参数传递其实就是一种隐式传值，看到这里有没有觉得似曾相识，跟上一段代码异曲同工，表面上调用的是 <code>obj.foo</code> 其实与 <code>obj</code> 并无联系。<code>doFoo()</code> 中执行的 <code>foo()</code> 调用的是 <code>fun()</code>。趁热打铁，再来一个例子。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'global'</span>;</span><br><span class="line">setTimeout(obj.foo, <span class="number">1000</span>); <span class="comment">// global</span></span><br></pre></td></tr></table></figure>
<p>这段代码和上一段并无二致，只不过这种情形在开发中经常会遇到，this 丢失问题，有没有好办法，肯定有，往下看。</p>
<h4 id="显式绑定"><a href="#显式绑定" class="headerlink" title="显式绑定"></a>显式绑定</h4><p>显式绑定通过 <code>call(…)</code>、<code>apply(…)</code> 方法强制绑定 this</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj1 = &#123;</span><br><span class="line">  a: <span class="number">1</span>,</span><br><span class="line">  foo: fun</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> obj2 = &#123;</span><br><span class="line">  a: <span class="number">2</span>,</span><br><span class="line">&#125;;</span><br><span class="line">obj1.foo(); <span class="comment">//1</span></span><br><span class="line">obj1.foo.call(obj2); <span class="comment">//2</span></span><br></pre></td></tr></table></figure>
<p><code>call(…)</code> 方法将本来指向 <code>obj1</code> 上下文对象的 this 绑定到了 <code>obj2</code>，光明正大的挖墙脚……</p>
<p>为了解决之前的 this 丢失问题，在显式绑定的基础上升级出了<strong>硬绑定</strong>，此招一出，墙脚硬到磕坏牙，再也不用担心 this 会丢失了。</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="built_in">console</span>.log(<span class="keyword">this</span>.a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;</span><br><span class="line">  a: <span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  fun.call(obj);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> a = <span class="string">'global'</span>;</span><br><span class="line">bar();  <span class="comment">// 2</span></span><br><span class="line">setTime(bar, <span class="number">1000</span>);  <span class="comment">//2</span></span><br><span class="line">bar.call(<span class="built_in">window</span>);  <span class="comment">// 2</span></span><br></pre></td></tr></table></figure>
<p>看到没，稳如泰山。硬绑定在 ES5 之后有了现成可用的方法 <code>Function.prototype.bind</code>，其中一种应用场景如下：</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">something</span>) </span>&#123; </span><br><span class="line">  <span class="built_in">console</span>.log( <span class="keyword">this</span>.a, something ); </span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">this</span>.a + something;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123; </span><br><span class="line">  a:<span class="number">2</span></span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = fun.bind( obj );   </span><br><span class="line"><span class="keyword">var</span> b = bar( <span class="number">3</span> );  <span class="comment">// 2 3</span></span><br><span class="line"><span class="built_in">console</span>.log( b ); <span class="comment">// 5</span></span><br></pre></td></tr></table></figure>
<h4 id="new-绑定"><a href="#new-绑定" class="headerlink" title="new 绑定"></a>new 绑定</h4><p>考虑下面的代码</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.a = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> bar = <span class="keyword">new</span> fun(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(bar.a); <span class="comment">//2</span></span><br></pre></td></tr></table></figure>
<p>使用 new 来调用 <code>fun(..)</code> 时，会构造一个新对象并把它绑定到 <code>fun(..)</code> 调用中的 this<br>上。new 是最后一种可以影响函数调用时 this 绑定行为的方法，我们称之为 new 绑定。</p>
<p>New 绑定也是四种绑定中优先级最高的一种，连硬绑定也能掰弯</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">fun</span>(<span class="params">a</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.a = a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> obj = &#123;&#125;;</span><br><span class="line"><span class="keyword">var</span> bar = fun.bind(obj);</span><br><span class="line">bar(<span class="number">2</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.a);  <span class="comment">//  2</span></span><br><span class="line"><span class="keyword">var</span> baz = <span class="keyword">new</span> bar(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">console</span>.log(obj.a);  <span class="comment">//  2</span></span><br><span class="line"><span class="built_in">console</span>.log(baz.a);  <span class="comment">//  3</span></span><br></pre></td></tr></table></figure>
<p>在 new 对象时，预期 <code>obj.a</code> 值应该赋为 3，结果并没有修改，而是 new 出来一个新的对象，说明在 new 的过程中，this 的指向改变了。</p>
<h3 id="判断方法"><a href="#判断方法" class="headerlink" title="判断方法"></a>判断方法</h3><h4 id="常规"><a href="#常规" class="headerlink" title="常规"></a>常规</h4><p>四种规则优先级先后顺序为： <code>new 绑定 &gt; 显式绑定 &gt;  隐式绑定 &gt; 默认绑定</code>。</p>
<p>根据优先级来判断函数在某个调用位置应用的是哪条规则。可以按照下面的顺序来进行判断:</p>
<ol>
<li><p>函数是否在new中调用 ? 如果是的话this绑定的是新创建的对象。</p>
<p><code>var bar = new fun();</code></p>
</li>
<li><p>函数是否通过call、apply或者硬绑定调用 ? 如果是的话，this绑定的是 指定的对象。<br>  <code>var bar = fun.call(obj);</code></p>
</li>
<li><p>函数是否在某个上下文对象中调用 ? 如果是的话，this 绑定的是那个上 下文对象。<br> <code>var bar = obj.foo();</code></p>
</li>
<li><p>如果都不是的话，使用默认绑定。如果在严格模式下，就绑定到undefined，否则绑定到 全局对象。<br> <code>var bar = fun();</code></p>
</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> this </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[关于学习的反思]]></title>
      <url>http://lijundong.com/think-about-learning/</url>
      <content type="html"><![CDATA[<p>请告诉我，你的想法 ？</p>
<a id="more"></a>
<p>年初到现在看了几本书，从原理层面重新理解很多知识点，效果胜过之前看过的任何一篇 Blog。有所感，初拟的题目是「关于技术学习的思考」，后觉不妥，这样的反思不应止于技术。</p>
<p>进入大学之前，所有人都告诉我“你该考个好大学”，包括我自己，但是没人给出理由，同样包括我自己，我年复一年的准备就是为了那场考试，通过考试，进了大学，但从那之后，之前鼓励我考大学的人再没告诉我下一步该怎么走，如果你去问他们，他们不奢望你拿奖学金，但可能会鼓励你去考研，不可否认，“努力学习，拿高绩点，考研去一个更好的学校”，就是我进大学时对于四年的“规划”，美其名曰“规划”，我并不知道考研时为了什么，也不知道考研之后的日子该做什么，没课的时间就去图书馆自习做题，准时睡觉起床，偶尔去跑步，我只是换了一个环境继续着高中的生活，身后被一只无形的手推着走，终日处于一种被动无意识状态。</p>
<p>也许是生活太过枯燥，正好碰到学校的 ACM，于是开始刷题的日子，渐渐乐在其中，听前辈讲题，逛 CSDN，看别人的解题代码，也不求甚解，只浮于看到 Accept 的快感，就这样混了一年。因为选择进入机器人小组，结束了刷题的生活。小组的唯一任务就是准备每年的 Robocon，比赛强迫成员必须尽快的产出，因为对硬件一窍不通，遇到问题总是先去找现成的代码，整日地逛论坛，免费的论坛找不到，就和黄彪凑了 60 大洋买了 amoBBS 的会员，继续找，在网上找单片机视频教程，对着电脑看到昏睡，醒来继续看，仍是不求甚解，因为负责的视觉模块始终无进展，选择退出小组。后来接触 web，跟着 w3cSchool 的教程，又开始了自 high，看了一个月的教程，仍停留在写单页的水平，跟着粉丝日志做 express 开发，跟着 imooc 的视频做微信开发，不求甚解，遇到问题就去找答案，找到能用的答案，能用就行，不求甚解。似乎回到了为了 Accept 整日刷题的状态，我整日都在编码，但技术始终不得精进，终于有一天意识到一个很残酷的事实，我做的只是复制粘贴，一只都是原地踏步，忙碌的只是表象，只是一种主动的无意识状态而已。</p>
<p>我时常在想，一个优秀的工程师，应该像艺术家般，在代码中加入自己的思想，而现在的我仍只是在临摹，距离创作还有遥远的距离，但那是我的追求。BBS、Blog 存在的意义，更偏向经验的传播，在我需要时告诉我 How，但是夜深人静时，艺术家的梦再次扣上心扉，我想去追寻 What 和 Why 时，要探究技术的本质时，还是要去书中寻找。</p>
<p>知识付费在去年开始兴起，以值乎和分答为代表的付费问答，以得到为代表的付费订阅，随后兴起了付费社群。知识付费无疑空前利好创作者，他们可以生活的更好，这也是我希望看到的。不过对于其中的产品，用户还是要有准确的定位。<br>我有过一段时间很喜欢李笑来的观点，包括他的 「把时间当作朋友」，甚至把很多观点奉为圭臬，当时看的时候觉得干货满满，他是我了解的最先做付费社群的人，价格也很贵，崇尚终生学习，并名其新生大学，我一度想过存钱，加入那个社群，后来因为没存到钱（😂），不了了之，偶尔可以看到社群中的文章分享，觉得文风和「时间」一个味道，再读「时间」，不仅没了当初的激动之感，反而感觉到了浓浓的鸡汤风。后来看到他的知乎 live、学费数万元的全栈培训，也就释然了。相比于做比特币投资，我相信他更适合职业割韭菜。</p>
<p>我以技术学习的名义加入过很多技术交流群，结果是接下来的日子，因为群消息太吵我把这些群一个个地屏蔽了，我几乎没在群里说过话，也不怎么看消息，群里面讨论的话题太杂乱，群友水平参差不齐，交流效率奇差。我的初衷是，我会在群里获得技术提升，每个人都是这样的想法，这个群基本就废了，没人愿意输出，或者是有输出的能力。所以在面对一个产品之前，首先应该思考，你在其中的角色是什么？你想得到什么？这一点完全适用于今天的微信社群、小密圈、知乎 live、得到等产品。</p>
<p>知识付费一直存在，我前文提到的 amoBBS 也可以算是付费社群，只是市场环境更好了，产品的形态更多样化，本质不分轩轾，只不过目前的市场，职业割韭菜的人越来越多，这是必经的过程，被收割的群体本着学习的目的前去，交了学费，学了一招防骗术。</p>
<p>交再多的钱，也不可能变得更有思想，这条路上没有捷径。</p>
]]></content>
      
        <categories>
            
            <category> 随笔 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 学习 </tag>
            
            <tag> web </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Javascript 变量提升原理解析]]></title>
      <url>http://lijundong.com/javascript-variable-lift/</url>
      <content type="html"><![CDATA[<p>很多 Javascript 教程或者书籍中都会介绍 Javascript 的变量提升，但是你了解其中的原因吗？</p>
<a id="more"></a>
<h3 id="现象"><a href="#现象" class="headerlink" title="现象"></a>现象</h3><p>首先来看两个经典的案例 （<strong>案例均处于严格模式</strong>）</p>
<p>案例一：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a;</span><br></pre></td></tr></table></figure></p>
<p>这个很简单，变量提升最直接的体现，输出的结果是 <code>1</code>，实际的执行顺序如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line">a = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br></pre></td></tr></table></figure></p>
<p>案例二：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line"><span class="keyword">var</span> a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<p>这段代码执行会报错，不过错误是 a 是 <code>undefined</code>，而不是 <code>ReferenceError</code>，因为这段代码的实际执行顺序如下：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> a;</span><br><span class="line"><span class="built_in">console</span>.log(a);</span><br><span class="line">a = <span class="number">1</span>;</span><br></pre></td></tr></table></figure></p>
<h3 id="解析"><a href="#解析" class="headerlink" title="解析"></a>解析</h3><h4 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h4><p>要弄清楚 Javascript 变量提升，还得回到 Javascript 的编译阶段。</p>
<blockquote>
<p>Part of the compilation phase was to find and associate all declarations with their appropriate scopes.</p>
</blockquote>
<p>编译阶段的其中一个工作就是找到所有的声明，并用合适的作用域将它们关联起来，所有的变量声明以及函数声明都会在代码执行之前首先被处理。所以，分析 Javascript 代码的时候需要先关注声明。<br>这样就导致了 <code>var a = 1;</code> 被分解成了 <code>var a; a = 1;</code>，所以案例二的结果就很明显了。</p>
<h4 id="函数优先"><a href="#函数优先" class="headerlink" title="函数优先"></a>函数优先</h4><p>值得注意的是，变量提升时，<strong>函数声明优先</strong>，函数声明会被首先提升，其次才是变量，具体效果如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">foo();</span><br><span class="line"><span class="keyword">var</span> foo;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line">foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p>执行的结果是 <code>1</code>，实际执行流程如下</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">foo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//var foo; //重复声明，被忽略</span></span><br><span class="line">foo();</span><br><span class="line">foo = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">2</span>);</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure>
<p><strong>参考：</strong></p>
<ul>
<li><em><a href="//github.com/getify/You-Dont-Know-JS/blob/master/scope%20%26%20closures/ch4.md">You Don’t Know JS: Scope &amp; Closures</a></em></li>
</ul>
]]></content>
      
        <categories>
            
            <category> javascript </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> scope </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chrome 插件推荐]]></title>
      <url>http://lijundong.com/chrome-extensions-recommend/</url>
      <content type="html"><![CDATA[<p>今天总结一下你可能还不知道的 Chrome 插件，可能会解决你长久以来的痛点，欢迎补充。</p>
<a id="more"></a>
<h3 id="关于-Chrome"><a href="#关于-Chrome" class="headerlink" title="关于 Chrome"></a>关于 Chrome</h3><p>在一次重装系统之后，安装完 Chrome 之后登陆 Google 账号，亲眼见证了扩展挨个恢复，从来没有一个产品给我这样深刻的记忆，那样的感动难以言表。Chrome 会同步所有正在使用的扩展，包括商城里已经下线的扩展！<br>在 <a href="//www.lijundong.com/SublimeText-extension-recommend/">SublimeText 插件推荐</a> 中提过，我喜欢使用生态更完整的产品，不过在云服务时代 Sublime 的插件无法同步，这就比较尴尬了(曾有个插件试图解决这个痛点，后不了了之)。相比于 Sublime，Chrome 是一个更趋于完美的产品。</p>
<p><strong>当然，你还需要解决墙的问题</strong></p>
<h3 id="扩展推荐"><a href="#扩展推荐" class="headerlink" title="扩展推荐"></a>扩展推荐</h3><p>本想给这些插件分类，但是这样似乎会把简单的事情变得复杂，所以，数量不多，按需所取（排名不分先后）。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei">live reload</a></strong><br>应用场景：在你的编辑器中安装 livereload 插件（例如 SublimeText），在编辑文件时预览到 Chrome 中，你的编辑器和 Chrome 即可通讯，达到所见即所得的境界。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/proxy-switchyomega/padekgcemlokbadohgkifijomclgjgif?utm_source=chrome-app-launcher-info-dialog">Proxy SwitchyOmega</a></strong><br>应用场景：轻松管理网络代理，推荐配合 SS 使用。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/%E4%BA%8C%E7%BB%B4%E7%A0%81qr%E7%A0%81%E7%94%9F%E6%88%90%E5%99%A8qr-code-generato/pflgjjogbmmcmfhfcnlohagkablhbpmg">二维码(QR码)生成器(QR Code Generator)</a></strong><br>应用场景：为当前页面地址生成二维码。</p>
<p><strong><a href="//www.editthiscookie.com/">EditThisCookie</a></strong><br>应用场景：编辑站点 cookie。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/ie-tab/hehijbfgiekmjfkfjpbkbammjbdenadd">IE Tab</a></strong><br>应用场景：一键模拟 IE 内核，在一些比较特殊的场景下比较使用，不用特意再去打开 IE。</p>
<p><strong><a href="//wappalyzer.com/?pk_campaign=chrome&amp;pk_kwd=context">Wappalyzer</a></strong><br>应用场景：查看当前网站所用技术栈</p>
<p><strong><a href="//www.alexa.com/">Alexa Rank</a></strong><br>应用场景：查看当前站点的全球 Alexa 排名</p>
<p><strong><a href="//chrome.google.com/webstore/detail/take-webpage-screenshots/mcbpblocgmgfnpjjppndjkmgjaogfceg">Take Webpage Screenshots Entirely</a></strong><br>应用场景：功能强大的网页截图，并且提供 Pro 选项，截图可以存储为 PDF 或者 图片。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/%E6%9E%81%E7%AE%80%E5%9B%BE%E5%BA%8A/heebflcbemenefckkgfnnklbhdbdkagg">极简图床</a></strong><br>应用场景：配合七牛账号，轻松上传文件到七牛，管理方便，如果你喜欢使用 Markdown，那么你可以尝试一下。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/save-to-pocket/niloccemoadcdkdjlinkgdfekeahmflj">Save to Pocket</a></strong><br>应用场景：稍后阅读，登录 Pocket 账户，全平台同步，方便快捷。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/evernote-web-clipper/pioclpoplcdbaefihamjohnefbikjilc">Evernote Web Clipper</a></strong><br>应用场景：使用体验和 Pocket 异曲同工，登录印象笔记，全平台同步剪藏。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/onetab/chphlpgkkbolifaimnlloiipkdnihall">OneTab</a></strong><br>应用场景：一键保存并关闭当前窗口的所有 TAB，如果你想关闭当前窗口的所有 TAB，但又想保存下来下次再打开，这无疑是最好的选择，在遇到这个插件之前我都是用书签功能，导致最后留下大量书签。</p>
<p><strong><a href="//jasonsavard.com/?ref=homepage_url&amp;ext=gmail">Checker Plus for Gmail </a></strong><br>应用场景：Gmail 最佳伴侣，登陆 Gmail 账户就可以轻松管理邮件了。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/gighmmpiobklfepjocnamgkkbiglidom">Ad Block</a></strong><br>应用场景：过滤广告，地表最强</p>
<p><strong><a href="//chrome.google.com/webstore/detail/vimium/dbepggeogbaibhgnhhndojpepiihcmeb">Vimium</a></strong><br>应用场景：你试过用 Vim 命令操纵 Chrome 吗，你想试试吗</p>
<p><strong><a href="//chrome.google.com/webstore/detail/momentum/laookkfknpbbblfpciffpaejjkokdgca">Momentum</a></strong><br>应用场景：给你一个赏心悦目的 New Tab 界面</p>
<p><strong><a href="//chrome.google.com/webstore/detail/infinity-new-tab/dbfmnekepjoapopniengjbcpnbljalfg">Infinity</a></strong><br>应用场景：有些同学不喜欢 Momentum，说我就喜欢功能丰富的，那么 Infinity 肯定适合你，它会提供你一个功能丰富的 New Tab。</p>
<p><strong><a href="//chrome.google.com/webstore/detail/stylish-custom-themes-for/fjnbnpbmkenffdnngjfgmeleoegfcffe/related">Stylish</a></strong><br>应用场景：此扩展可以让网站应用已有的主题，相信我，他能拯救你的审美疲劳。</p>
<p><strong>Better History</strong>：已下线<br>应用场景：给你更好的浏览历史体验，前段时间开始用的，昨天看却下线了</p>
<p><strong>印象笔记·悦读</strong>：已下线<br>应用场景：将网页内容重新排版，给你更舒适的阅读体验，配合印象笔记使用，体验更佳，不知为何也下线了。</p>
<p><strong>欢迎补充！</strong></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> chrome </tag>
            
            <tag> extension </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[inline「一」：从 image 底部白边初识 line-height]]></title>
      <url>http://lijundong.com/image-and-line-height/</url>
      <content type="html"><![CDATA[<p>今天在做一个静态页面时，图片底部出现一条 3px 高度的白边，既不是 margin 也不是 padding，找了好久没能解决，后来才发现与 line-height 相关，问题解决后查缺补漏。<br>这里作下笔记。</p>
<a id="more"></a>
<p>解决问题之前需要理清楚几个概念，基线、line-height、vertical-align、inline 元素。</p>
<h3 id="基线-baseline"><a href="#基线-baseline" class="headerlink" title="基线(baseline)"></a>基线(baseline)</h3><p>基线(Baseline) 是字体排印学中的概念，指的是多数字母排列的基准线，大多字母都沿着红色基线排列，举个例子辅助理解<br><img src="//source.lijundong.com/17-1-17/23484364-file_1484619667824_4a0a.png" alt=""><br>图中 xHh 字母的下边缘红线就是基线的所在，那么有没有一个特定的条件来定义基线呢？这里有个概念可供参考</p>
<blockquote>
<p>字母x的下边缘(线)就是基线的所在。</p>
</blockquote>
<p><img src="//source.lijundong.com/17-1-17/82294663-file_1484620885555_15872.png" alt=""></p>
<p>这里又引出了 <a href="//en.wikipedia.org/wiki/X-height">x-height</a> 的概念，此处不表。</p>
<h3 id="line-height"><a href="#line-height" class="headerlink" title="line-height"></a>line-height</h3><p>关于 line-height 如何定义的讨论，有说法是两条基线之间的距离，看到这个结论我首先想到第一行的行高如何处理，后来去找了资料，发现两条基线之间的距离即是 line-height 这样的结论并不准确。<br>关于 line-height 的定义，<a href="//developer.mozilla.org/en-US/docs/Web/CSS/line-height">MDN</a> 阐述如下：</p>
<blockquote>
<p>On block level elements, the line-height property specifies the minimum height of line boxes within the element.<br>On non-replaced inline elements, line-height specifies the height that is used to calculate line box height.</p>
</blockquote>
<p>即</p>
<blockquote>
<p>block 元素中， line-height 的值等于元素中高度最低的行框(line box) 的高度值。<br>在 non-replaced inline 元素中，line-height 的值等于行框(line box) 的高度值。</p>
</blockquote>
<p><img src="//source.lijundong.com/17-1-18/72801786-file_1484669613097_12675.png" alt=""></p>
<p><strong>注：</strong></p>
<blockquote>
<p><strong>replaced element VS non-replaced element</strong></p>
<ul>
<li>replaced element: 例如 img、video、canvas 此类渲染出的内容引用外部的元素</li>
<li>non-replaced element: 渲染自身的 content，<br>例如 <code>&lt;a href=&quot;lijundong.com&quot;&gt;Leeon Blog&lt;/a&gt;</code> 此类，渲染出的内容来自自身。</li>
</ul>
</blockquote>
<h3 id="inline-内联-元素"><a href="#inline-内联-元素" class="headerlink" title="inline(内联) 元素"></a>inline(内联) 元素</h3><p>HTML5 中的常见 inline 元素如下：</p>
<ul>
<li>inline：span、strong、em</li>
<li>inline-block：input、button、textarea、select、img</li>
</ul>
<h3 id="vertical-align"><a href="#vertical-align" class="headerlink" title="vertical-align"></a>vertical-align</h3><p>vertical-align 作用于 inline 元素 以及 table-cell 元素，还有 <code>::first-letter</code> 和 <code>::first-line</code>，更多内容可以参见 <a href="//developer.mozilla.org/en-US/docs/Web/CSS/vertical-align">MDN</a></p>
<p>属性分类：</p>
<p>适用于 inline 元素的属性：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* keyword values */</span></span><br><span class="line"><span class="attribute">vertical-align</span>: baseline;  <span class="comment">/*基于基线对齐*/</span></span><br><span class="line"><span class="attribute">vertical-align</span>: sub;</span><br><span class="line"><span class="attribute">vertical-align</span>: super;</span><br><span class="line"><span class="attribute">vertical-align</span>: text-top;</span><br><span class="line"><span class="attribute">vertical-align</span>: text-bottom;</span><br><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br><span class="line"><span class="attribute">vertical-align</span>: top;</span><br><span class="line"><span class="attribute">vertical-align</span>: bottom;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &lt;length&gt; values */</span></span><br><span class="line"><span class="attribute">vertical-align</span>: <span class="number">10em</span>;</span><br><span class="line"><span class="attribute">vertical-align</span>: <span class="number">4px</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* &lt;percentage&gt; values */</span></span><br><span class="line"><span class="attribute">vertical-align</span>: <span class="number">20%</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* Global values */</span></span><br><span class="line"><span class="attribute">vertical-align</span>: inherit;</span><br><span class="line"><span class="attribute">vertical-align</span>: initial;</span><br><span class="line"><span class="attribute">vertical-align</span>: unset;</span><br></pre></td></tr></table></figure></p>
<p>适用于 table-cell 的属性：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vertical-align</span>: top;</span><br><span class="line"><span class="attribute">vertical-align</span>: bottom;</span><br><span class="line"><span class="attribute">vertical-align</span>: middle;</span><br></pre></td></tr></table></figure></p>
<h3 id="回到问题"><a href="#回到问题" class="headerlink" title="回到问题"></a>回到问题</h3><p>问题代码示例如下，<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span> &gt;</span><span class="css"></span><br><span class="line">    * &#123;</span><br><span class="line">        <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">        <span class="attribute">margin</span>:  <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">body</span> &#123;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#ccc</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">img</span> &#123;</span><br><span class="line">        <span class="attribute">width</span>: <span class="number">100px</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="selector-tag">div</span> ,<span class="selector-tag">p</span> &#123;</span><br><span class="line">        <span class="attribute">font-size</span>: <span class="number">100px</span>;</span><br><span class="line">        <span class="attribute">background-color</span>: <span class="number">#fff</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> &gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"headpic.png"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>代码效果图如下，红框圈出部分为出现的白条<br><img src="//source.lijundong.com/17-1-18/21458514-file_1484670835947_1531c.jpg" alt=""></p>
<p>通过对代码稍作修改可以轻松看出问题所在，实图如下</p>
<p><img src="//source.lijundong.com/17-1-18/83589094-file_1484670475410_3d83.jpg" alt=""></p>
<p>有了上面的铺垫，现在回头看遇到的问题，就很简单了，究其原委，首先 img 元素默认对齐方式为 <code>vertical-align: baseline;</code>，这就导致了，baseline 以下的部分被空了出来，显示了背景的白色。</p>
<p>问题找到了，对症下药可得出下面的解决方案：</p>
<ul>
<li><p>根本上消除 img 的对齐方式 —— 块状化：</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123; </span><br><span class="line">    <span class="attribute">display</span>: block; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改 img 对齐方式，以下三种均可</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">img</span> &#123;</span><br><span class="line">    <span class="attribute">vertical-align</span>: top;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">vertical-align</span>: bottom;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
<li><p>更改行高，行高是两条 baseline 之间的距离，因此可以暴力的让行高消失</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123; </span><br><span class="line">    <span class="attribute">line-height</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="comment">/* font-size: 0; 当 line-height 使用数值、百分比或者 rem 定义时也可用这种方式，因为 line-height 参照的是 font-size 的值*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>遇到问题多多求证，即便是很常见的问题也会挖出大学问，在求证的过程中也不能尽用拿来主义，多参考 w3c 和 MDN 的文档。<br>写的过程中，修修补补了好几回，关于 vertical-align 的内容讲的很仓促，后面会补上，如果文中表达有误，烦请指出，感谢。</p>
<hr>
<p><em>参考：</em></p>
<ul>
<li><a href="//www.imooc.com/learn/542">CSS深入理解之vertical-align</a></li>
<li><a href="//www.smashingmagazine.com/2012/12/css-baseline-the-good-the-bad-and-the-ugly/">CSS Baseline: The Good, The Bad And The Ugly</a></li>
<li><a href="//zh.wikipedia.org/wiki/%E5%9F%BA%E7%B7%9A">基线 wiki</a></li>
<li><a href="//stackoverflow.com/questions/23247467/how-css-line-height-is-measured">How CSS line-height is measured?</a></li>
<li><a href="//www.w3.org/Talks/2008/0911-CSS-Amsterdam/">Understanding the CSS box model</a></li>
<li><a href="//stackoverflow.com/questions/28363186/inline-elements-and-line-height">Inline elements and line-height</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> css </category>
            
        </categories>
        
        
        <tags>
            
            <tag> css </tag>
            
            <tag> inline </tag>
            
            <tag> line-height </tag>
            
            <tag> baseline </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[可能是写了篇假的年终总结]]></title>
      <url>http://lijundong.com/year-again-2017/</url>
      <content type="html"><![CDATA[<p>2017 年的第一个月已经过了一半，一篇文章都没憋出来，先拿这篇凑数吧<br><a id="more"></a></p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=29393038&auto=0&height=66"></iframe>

<p>来京一月有半，除元旦和几位在北京的高中同学聚过一次，其余时间均在住处与公司之间兜转，回家的车票买在一周后，周五临时和两位相熟的朋友决定四(chi)处(chi)转(he)转(he)。<br>到什刹海后，被友人领去了一家巷子深处的烤肉店，味道胜于之前吃过的所有的烤肉，也刷新了之前因为学校周边的纸上烤肉给烤肉贴上的消极标签，加之老板为人亲切，全程都十分舒心。<br>午饭后沿着完全商业化的巷子无目的地走，顺便给他们俩找厕所，连续找了几处都没找到，其中一处是一小巷，巷内也许是住家或是商铺，可能与公厕的外形太过相似，他俩凭着直觉就走进去，也不顾入口处挂着的内无公厕的标识，我想巷内的人应该经历过游客 DDOS 攻击吧，一堆人不来买东西，在门前晃悠找厕所，哈哈！<br>本想着去后海看看，后来变了主意改去天坛溜达，我对北京的主要景点的印象还停留在七年前，初三毕业时学校组织的旅游。不同的是来的时候是夏天，这次是冬天。我对天坛的印象除了祈年殿，剩下的就是那些坐在回廊长凳上打牌的一群群老人，上次来的时候正值酷夏，天气热得很，但是天坛中却十分凉爽，那些聚在此处打牌的老人，真是惬意啊，从进门开始我便开始找那排回廊，直到看见那群老人还在那里，热闹非凡，中途还打趣说这是老年人聚众赌博，哈哈！会不会这些人中，七年前的那群人里会不会今天也在场的呢，想想也是十分有趣。</p>
<p>万物生老病死，规律使然，这些建筑也是一样。即便已经到了快凋零的年纪，但为了慕名而来的游客，还是被涂上了新世纪的胭脂，汉白玉石阶要么被换了新，要么被盖上了木板保护。<br>当时在小摊上买了一个天坛的木板立体拼图，回家后跟我姐一起拼起来，我爸又在表面涂了一层清漆，看着很好看。</p>
<p><img src="//source.lijundong.com/17-1-15/45714704-file_1484489002339_ab0a.jpg" alt="天坛"></p>
<p>物理教材上出现的回音壁，大家都在墙边喊，不过效果甚微，可能是请求过多，回音壁宕机了吧，哈哈</p>
<p><img src="//source.lijundong.com/17-1-15/86359476-file_1484489001885_c66.jpg" alt="回音壁"></p>
<p>估摸到了五点多，晚饭决定回西二旗找家火锅店再吃顿火锅，地铁到了中途，三个人已经十分疲惫，临时决定下车休息下，休息了十分钟又临时决定直接在附近找家火锅店解决晚饭，太任性了。</p>
<p>饭罢，各自回家。一切都非常愉快，除了一件，早晨出门刚换上干净衣服，吃了烤肉和火锅之后，全身都散发着火锅的芬芳，到了家，洗澡洗头，衣服全都得洗，这样的场景已经出现了两次，深受其扰，尤其在这样的冬天。</p>
<hr>
<p>我是严肃的分割线</p>
<p>16 年的事情都比较细碎，很多方向之前就了解过，大多浅尝辄止，这一年多数时间的工作都是修修补补。关于毕业之后去向的问题也迷茫过，像无头苍蝇乱飞乱撞。机缘巧合，来了北京实习，这段时间见了山，见了人，收获有的。</p>
<p>这是 17 年的第一篇，之前很多时候想写，认为内容太过简单或是对于那些知识的认知还不够细致，只好作罢，摄入和产出是成正比的，希望 17 年多多学习，多多产出，更多地考虑原理性问题，而不是一直停留在应用层面。学习一些酷酷的东西，对，就是拿来吹牛的，哈哈。</p>
<p>今年开始，不确定性越来越多，介于好奇与恐惧之间的感觉真是奇妙。</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 游记 </tag>
            
            <tag> 总结 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hexo 自定义日志]]></title>
      <url>http://lijundong.com/hexo-blog-custom-log/</url>
      <content type="html"><![CDATA[<p>在这里记录下 Blog 基于 Hexo 和 Next 主题的一些自定义。</p>
<ul>
<li>自定义 url</li>
<li>文末添加版权说明</li>
<li>文末添加推荐文章列表</li>
<li>博客迁移</li>
<li>添加备案信息</li>
<li>添加打赏功能</li>
</ul>
<a id="more"></a>
<h3 id="自定义-url"><a href="#自定义-url" class="headerlink" title="自定义 url"></a>自定义 url</h3><p>关于 url 的格式，建议在博客刚上线的时候就确定好，因为多说评论以及访客数据都是和 url 绑定的，每一次换 url 都意味着之前的多说评论数据和访问数据都会清空，我的的数据已经被清空过两次了，第一次是把 url 从中文更换为 英文，第二次就是这次，我将 url 的格式从 <code>domain/year/month/title</code> 换成了 <code>domain/title</code>，更简洁，也更容易理解链接的内容。</p>
<h4 id="更改方式"><a href="#更改方式" class="headerlink" title="更改方式"></a>更改方式</h4><p>在 Hexo 的配置文件 <code>_config.yml</code> 中<br>更改 <code>permalink:</code> 配置选项为 <code>permalink: :title/</code></p>
<p>关于 Permalinks 更多参数 可以参考官方文档 <a href="//hexo.io/zh-cn/docs/permalinks.html">Permalinks(永久链接)</a></p>
<h3 id="文末添加版权说明（Next-主题）"><a href="#文末添加版权说明（Next-主题）" class="headerlink" title="文末添加版权说明（Next  主题）"></a>文末添加版权说明（Next  主题）</h3><p>最近看后台数据的时候，发现一篇文章被 latex 社区收录了，挺高兴的，只是文章被修改了一些内容，于是想在每篇文末添加一个版权说明，方法很简单。</p>
<h4 id="更改方式-1"><a href="#更改方式-1" class="headerlink" title="更改方式"></a>更改方式</h4><p>首先在 <code>/hexo/themes/next/layout/_macro/post.swig</code> 文件，修改 <code>&lt;footer class=&quot;post-footer&quot;&gt; &lt;/footer&gt;</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">&lt;footer class=&quot;post-footer&quot;&gt;</span><br><span class="line"></span><br><span class="line">    &#123;# 添加版权信息 #&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% if not is_index %&#125;</span><br><span class="line">        &lt;div class=&quot;copyright&quot; style=&quot;clear:both;&quot;&gt;</span><br><span class="line">           &lt;h3&gt;文档信息&lt;/h3&gt;</span><br><span class="line">           &lt;p&gt;&lt;span&gt;文章作者：&lt;/span&gt;&lt;a href=&quot;//lijundong.com&quot; title=&quot;李俊冬的网络日志&quot;&gt;李俊冬&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">           &lt;p&gt;&lt;span&gt;发表时间：&lt;/span&gt;&#123;&#123; post.date.format(&quot;YYYY-M-D-HH:MM&quot;) &#125;&#125;&lt;/p&gt;</span><br><span class="line">           &lt;p&gt;&lt;span&gt;文章标题：&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot;&gt;&#123;&#123; post.title &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">           &lt;p&gt;&lt;span&gt;原文链接：&lt;/span&gt;&lt;a href=&quot;&#123;&#123; url_for(post.path) &#125;&#125;&quot; title=&quot;&#123;&#123; post.title &#125;&#125;&quot;&gt;&#123;&#123; post.permalink &#125;&#125;&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">           &lt;p&gt;&lt;span&gt;版权声明：&lt;/span&gt;&lt;i class=&quot;fa fa-creative-commons&quot;&gt;&lt;/i&gt; &lt;a rel=&quot;license&quot; href=&quot;//creativecommons.org/licenses/by-nc-nd/3.0/deed.zh&quot; title=&quot;自由转载-非商用-非衍生-保持署名 (创意共享3.0许可证)&quot;&gt;自由转载-非商用-非衍生-保持署名（创意共享3.0许可证）&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">           &lt;p&gt;&lt;strong&gt;为方便溯源，避免陈旧错误知识的误导，转载请保留以上信息&lt;/strong&gt;&lt;/p&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;# 文末的标签 #&#125;</span><br><span class="line"></span><br><span class="line">    &#123;% if post.tags and post.tags.length and not is_index %&#125;</span><br><span class="line">        &lt;div class=&quot;post-tags&quot;&gt;</span><br><span class="line">          &#123;% for tag in post.tags %&#125;</span><br><span class="line">            &lt;a href=&quot;&#123;&#123; url_for(tag.path) &#125;&#125;&quot; rel=&quot;tag&quot;&gt;#&#123;&#123; tag.name &#125;&#125;&lt;/a&gt;</span><br><span class="line">          &#123;% endfor %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    </span><br><span class="line">         &#123;# 使用 list_posts 添加了文章列表 #&#125;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;posts-recommend&quot;&gt;</span><br><span class="line">            &lt;h3&gt;更多文章&lt;/h3&gt;</span><br><span class="line">               &#123;&#123; list_posts() &#125;&#125;  </span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"></span><br><span class="line">    &#123;# 此处是前后文章导航，因为上面添加了推荐文章列表，我把这一块注释了 #&#125;</span><br><span class="line"></span><br><span class="line">    &#123;# &#123;% if not is_index and (post.prev or post.next) and not navlessPost %&#125;</span><br><span class="line">        &lt;div class=&quot;post-nav&quot;&gt;</span><br><span class="line">          &lt;div class=&quot;post-nav-next post-nav-item&quot;&gt;</span><br><span class="line">            &#123;% if post.next %&#125;</span><br><span class="line">              &lt;a href=&quot;&#123;&#123; url_for(post.next.path) &#125;&#125;&quot; rel=&quot;next&quot; title=&quot;&#123;&#123; post.next.title &#125;&#125;&quot;&gt;</span><br><span class="line">                &lt;i class=&quot;fa fa-chevron-left&quot;&gt;&lt;/i&gt; &#123;&#123; post.next.title &#125;&#125;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line"></span><br><span class="line">        &lt;div class=&quot;post-nav-prev post-nav-item&quot;&gt;</span><br><span class="line">            &#123;% if post.prev %&#125;</span><br><span class="line">              &lt;a href=&quot;&#123;&#123; url_for(post.prev.path) &#125;&#125;&quot; rel=&quot;prev&quot; title=&quot;&#123;&#123; post.prev.title &#125;&#125;&quot;&gt;</span><br><span class="line">                &#123;&#123;post.prev.title&#125;&#125; &lt;i class=&quot;fa fa-chevron-right&quot;&gt;&lt;/i&gt;</span><br><span class="line">              &lt;/a&gt;</span><br><span class="line">            &#123;% endif %&#125;</span><br><span class="line">          &lt;/div&gt;</span><br><span class="line">        &lt;/div&gt;</span><br><span class="line">    &#123;% endif %&#125; #&#125;</span><br><span class="line">  &#123;% set isLast = loop.index % page.per_page === 0 %&#125;</span><br><span class="line">  &#123;% if is_index and not isLast %&#125;</span><br><span class="line">    &lt;div class=&quot;post-eof&quot;&gt;&lt;/div&gt;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">&lt;/footer&gt;</span><br></pre></td></tr></table></figure>
<h3 id="文末添加推荐文章列表"><a href="#文末添加推荐文章列表" class="headerlink" title="文末添加推荐文章列表"></a>文末添加推荐文章列表</h3><p>我将文末的前后文章导航页去除，通过 <code>list_posts()</code> 方法添加了最近的文章列表</p>
<p>具体代码如下，完整代码可参见上一条完整代码<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=&quot;posts-recommend&quot;&gt;</span><br><span class="line">    &lt;h3&gt;更多文章&lt;/h3&gt;</span><br><span class="line">    &#123;&#123; list_posts() &#125;&#125;  </span><br><span class="line">&lt;/div&gt;</span><br></pre></td></tr></table></figure></p>
<p>关于 <code>list_posts()</code> 的用法，更多用法可参照官方文档 <a href="//hexo.io/zh-cn/docs/helpers.html#list-posts">list_posts</a></p>
<h3 id="博客迁移"><a href="#博客迁移" class="headerlink" title="博客迁移"></a>博客迁移</h3><h4 id="粗暴复制"><a href="#粗暴复制" class="headerlink" title="粗暴复制"></a>粗暴复制</h4><p>如果你更滑了新的电脑，迁移 hexo 的博客很简单，我的方式是直接复制 hexo 博客目录(不包含 node_modules 和 public 目录)，在新的电脑中执行 <code>npm install hexo-cli -g</code> 安装 hexo，在博客目录下执行 <code>npm install</code> （package.json 中包含所有的依赖信息），如果 node 版本不一致执行 <code>npm rebuild</code> 命令重新编译。git 的相关操作在这里不再赘述。</p>
<h4 id="优雅的云备份"><a href="#优雅的云备份" class="headerlink" title="优雅的云备份"></a>优雅的云备份</h4><p>复制太过简单粗暴，有更优雅的方式，就是当作 git 项目托管在平台上，如果不想作为 public 项目托管的话，可以选择 github 的付费托管或者国内的 coding 平台进行托管。</p>
<p>如果你的主题是 clone 的平台上的开源项目，主题本身就存在版本控制，那么需要知道知道 <a href="//git-scm.com/book/zh/v2/Git-%E5%B7%A5%E5%85%B7-%E5%AD%90%E6%A8%A1%E5%9D%97">Git 工具-子模块</a>。</p>
<h3 id="添加备案信息"><a href="#添加备案信息" class="headerlink" title="添加备案信息"></a>添加备案信息</h3><p>我用的是 NEXT 的主题，直接选择修改 <code>themes&gt;next&gt;layout &gt;_partials&gt;footer.swig</code>，追加以下信息，div 中包裹的是备案信息。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;width:100%;height:50"</span>&gt;</span></span><br><span class="line">蜀ICP备16024716号-1</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="添加打赏功能"><a href="#添加打赏功能" class="headerlink" title="添加打赏功能"></a>添加打赏功能</h3><p>在 NEXT 主题配置文件中，添加打赏配置，分别是微信和支付宝的支付二维码</p>
<figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">reward_comment:</span> 鸡腿还是可乐 ？</span><br><span class="line"><span class="symbol">wechatpay:</span> <span class="comment">//source.lijundong.com/17-2-13/59734441-file_1486916997049_2842.png</span></span><br><span class="line"><span class="symbol">alipay:</span> <span class="comment">//source.lijundong.com/17-2-13/74686190-file_1486916997175_15cd8.png</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> hexo </tag>
            
            <tag> next </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[小记 - Hexo 部署到阿里云服务器]]></title>
      <url>http://lijundong.com/note-hexo-deploy-on-server/</url>
      <content type="html"><![CDATA[<p>前几天把 hexo blog 迁移到阿里云服务器，全程看别人的文章，每篇文章描述的方式不尽相同，加之软件环境的不同，再加之我的理解能力短板，中间走了好几次弯路，配完之后，对整体过程加深了理解，之后又重新看了 <code>git hook</code> 的文档，结合配置过程，这里做一次小记。<br><a id="more"></a></p>
<blockquote>
<p><strong>注：</strong></p>
<ul>
<li>因为是迁移，所以这篇笔记不会介绍 Hexo 相关用法。</li>
<li>网上详细的教程非常多，这里细节不做详述，只会总结整体流程以及过程中遇到的坑</li>
</ul>
</blockquote>
<p>之前使用 Hexo 部署静态博客到 Github 或者 coding，也没有细究实现原理，但是一直在折腾，后来看到了下面这张图，这是从 <code>hexo d -g</code> 命令一直到浏览器访问到博客页面的整个流程的架构图。<br>在部署之前看懂这张图，部署过程会十分流畅。</p>
<p><img src="//source.lijundong.com/16-12-19/68486025-file_1482077506840_3562.png" alt=""></p>
<h3 id="流程架构"><a href="#流程架构" class="headerlink" title="流程架构"></a>流程架构</h3><ul>
<li>Hexo 文件结构下，<code>\source</code> 存放所有 <code>markdown</code> 原文件，我们写的文章 存放在 <code>\source\_post</code> 目录下</li>
<li><code>hexo generate</code> 命令将 <code>\source</code> 下的 <code>markdown</code> 文件编译为 <code>html</code> 文件存放到 <code>\public</code> 目录下，并且根据时间、tag、category 等生成了索引页面。</li>
<li><code>hexo deploy</code> 命令将把 <code>\public</code> 目录下内容推到服务器。</li>
<li>现在博文已经在服务器了，只不过是在仓库里，我们将内容 <code>checkout</code> 或者 <code>clone</code> 到某个可以通过 <code>nginx</code> 访问的目录下，例如 <code>\var\www</code>(如无 <code>www</code>，可以新建)，<strong>注意：不要放在用户文录下</strong></li>
<li>通过 <code>nginx</code> 或者其他服务器，将静态站点暴露出去，到这里，所有的核心工作已经完成了</li>
</ul>
<h3 id="DIY"><a href="#DIY" class="headerlink" title="DIY"></a>DIY</h3><p>如果需要 DIY，可以分以下三步走</p>
<ul>
<li>搭建 Git 服务器：中英文链接在文末，可能需要花点时间</li>
<li>编写 <code>post-receive</code> 脚本：中英文链接在文末，这一步，可以简单粗暴</li>
<li>配置 <code>nginx</code>：配置 <code>nginx</code> 服务器，这个也很简单</li>
</ul>
<h3 id="仅供参考"><a href="#仅供参考" class="headerlink" title="仅供参考"></a>仅供参考</h3><p>关于 Git 服务器，可以参考 Git 官网文档，或者是廖雪峰先生的教程，做到正常推拉即可。</p>
<p>关于 <code>git hooks</code>，昨天写的小记 <a href="//lijundong.com/2016/12/16/git-hooks/">Git Hooks</a>，可以了解下<br>上面我说这一步可以简单粗暴，下面是我的服务器上的 <code>post-receive</code> 脚本，我把代码 从仓库直接 <code>clone</code> 到 <code>/var/www/hexo</code> 目录下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line">unset GIT_DIR</span><br><span class="line">cd /var/www/hexo</span><br><span class="line">git pull origin master</span><br></pre></td></tr></table></figure>
<p>关于 <code>nginx</code> 配置</p>
<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">server</span>  &#123;</span><br><span class="line">    <span class="comment"># 指定端口</span></span><br><span class="line">    <span class="attribute">listen</span> <span class="number">80</span>;</span><br><span class="line">    <span class="comment"># 绑定域名</span></span><br><span class="line">    <span class="attribute">server_name</span> localhost www.lijundong.com lijundong.com;</span><br><span class="line">    <span class="attribute">access_log</span> /var/log/nginx/domain1.access.log;</span><br><span class="line">    <span class="comment"># 入口文件</span></span><br><span class="line">    <span class="attribute">index</span> index.html index.htm;</span><br><span class="line">    <span class="comment"># 博客路径</span></span><br><span class="line">    <span class="attribute">root</span>  /var/www/hexo;</span><br><span class="line">    <span class="attribute">error_page</span>   <span class="number">404</span>   /<span class="number">404</span>.html;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p>教程虽好，且看且学习，知其然，更应知其所以然</p>
<p>晚安！</p>
<p>参考:</p>
<ul>
<li><a href="//segmentfault.com/a/1190000005723321">架构图</a></li>
<li><a href="//www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137583770360579bc4b458f044ce7afed3df579123eca000">搭建Git服务器 - 廖雪峰</a></li>
<li><a href="//git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server">Git on the Server - Setting Up the Server</a></li>
<li><a href="//github.com/geeeeeeeeek/git-recipes/wiki/5.4-Git%E9%92%A9%E5%AD%90%EF%BC%9A%E8%87%AA%E5%AE%9A%E4%B9%89%E4%BD%A0%E7%9A%84%E5%B7%A5%E4%BD%9C%E6%B5%81">5.4 Git钩子：自定义你的工作流</a></li>
<li><a href="//git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">8.3 Customizing Git - Git Hooks</a></li>
<li><a href="//lijundong.com/2016/12/16/git-hooks/">Git Hooks</a></li>
<li><a href="//lijundong.com/2016/10/12/nginx-conficure-domains-to-servers/">Nginx 配置多个Node服务的域名</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 问题解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> hexo </tag>
            
            <tag> 阿里云 </tag>
            
            <tag> hook </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Git Hooks]]></title>
      <url>http://lijundong.com/git-hooks/</url>
      <content type="html"><![CDATA[<p><code>Git Hooks</code> 是 Git 提供的允许用户自定义的脚本，这些脚本会在特定条件下被触发，我们可以通过自定义脚本来定制 Git。<br>之前迁移博客到阿里云，<code>Git Hooks</code> 就是非常重要的一部分，我在服务器上使用的 Hook 类型是 <code>post-receive</code>，今天把相关部分官方的文档重新看了下，这篇笔记是在官方文档的基础上进行演绎的。<br><a id="more"></a></p>
<h3 id="安装-Hooks"><a href="#安装-Hooks" class="headerlink" title="安装 Hooks"></a>安装 Hooks</h3><p>多数情况下，所有的 hook 放在 <code>.git/hooks</code> 目录下，当我们执行 <code>git init</code> 时，Git 就会将一些示例脚本填充在 <code>.git/hooks</code> 目录下，这些示例脚本命名以 <code>.sample</code> 后缀，默认不执行，如果想执行这些脚本，可以重命名(去掉 <code>.sample</code> 后缀)，也可以自定义脚本，保存在 <code>.git/hooks</code> 目录下，<strong>并且给予脚本执行权限</strong>。</p>
<p><strong>需要注意的是，Hook  不随项目的克隆而进行复制，也不受版本控制的影响。</strong></p>
<p>Hook 根据使用场景可以分为 客户端(本地) Hooks 和服务端 Hooks。不同使用场景下，根据不同触发条件又分为若干类。</p>
<h3 id="客户端-本地-Hook"><a href="#客户端-本地-Hook" class="headerlink" title="客户端(本地) Hook"></a>客户端(本地) Hook</h3><h4 id="pre-commit"><a href="#pre-commit" class="headerlink" title="pre-commit"></a>pre-commit</h4><p>在 <code>git commit</code> 命令之后，这个脚本会首先运行，用来检查提交的快照，检查有没有遗漏，或者检查一些自定义的选项(例如检查代码格式，检查空格等)，当脚本返回非 0 值时，则中断 <code>commit</code>。<br>你也可以通过 <code>git commit --no-verify</code> 命令提交来跳过这个过程。</p>
<p>参数： 无</p>
<h4 id="prepare-commit-msg"><a href="#prepare-commit-msg" class="headerlink" title="prepare-commit-msg"></a>prepare-commit-msg</h4><p>在 <code>commit</code> 过程中需要编辑 <code>commit message</code>，这个脚本会在默认 <code>commit message</code> 生成之后，在你看到编辑器之前运行，通过这个脚本可以修改默认的 <code>commit message</code>。</p>
<p>参数：</p>
<ul>
<li>默认 <code>commit message</code> 文件路劲</li>
<li>提交类型</li>
<li>commit SHA-1(可选)</li>
</ul>
<h4 id="commit-msg"><a href="#commit-msg" class="headerlink" title="commit-msg"></a>commit-msg</h4><p>这个脚本可以用来检验用户编辑的 <code>commit message</code>。可以用来检查 <code>commit message</code> 是否合乎规范。</p>
<p>参数：</p>
<ul>
<li>存放用户编写的 <code>commit message</code> 的临时文件的路劲</li>
</ul>
<h4 id="pre-rebase"><a href="#pre-rebase" class="headerlink" title="pre-rebase"></a>pre-rebase</h4><p>这个脚本会在 <code>git rebase</code> 命令之前运行，在返回非 0 值时，会中断操作。<br>你可以通过这个脚本来禁用 <code>rebase</code>，示例如下</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/sh</span><br><span class="line"># disallow rebasing any commits</span><br><span class="line">echo &quot;pre-rebase: Rebasing is disallowed.&quot;</span><br><span class="line">exit 1</span><br></pre></td></tr></table></figure>
<h3 id="服务端-Hook"><a href="#服务端-Hook" class="headerlink" title="服务端 Hook"></a>服务端 Hook</h3><p>服务端的 Hook 允许我们在 <code>git push</code> 的不同阶段进行操作。</p>
<h4 id="pre-receive"><a href="#pre-receive" class="headerlink" title="pre-receive"></a>pre-receive</h4><p>客户端 push 过来的内容，必须通过这个脚本的检查来判断接受与否。</p>
<h4 id="update"><a href="#update" class="headerlink" title="update"></a>update</h4><p>这个脚本在代码更新之前执行。<br><code>update</code> 和 <code>pre-receive</code> 很相似，不同的是，如果我们想把代码推到不同分支，那么 <code>pre-receive</code> 只会执行一次，而 <code>update</code> 在每个分支更新之前都会执行一次。</p>
<h4 id="post-receive"><a href="#post-receive" class="headerlink" title="post-receive"></a>post-receive</h4><p><code>post-receive</code> 脚本在所有流程完成之后被触发，前几天迁移博客时才用到，服务器代码库合并了我的 <code>push</code> 后，通过 <code>post-receive</code> 脚本将仓库 <code>clone</code> 到我的博客目录下，以达到更新效果。</p>
<p>参考:</p>
<ul>
<li><a href="//git-scm.com/book/en/v2/Customizing-Git-Git-Hooks">Customizing Git - Git Hooks</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[测试 - Hexo 部署到阿里云]]></title>
      <url>http://lijundong.com/deploy-hexo-blog-on-server/</url>
      <content type="html"><![CDATA[<blockquote>
<p>测试 git push 之后 hook 触发没有</p>
</blockquote>
<p>Hexo 最开始部署在 Github，因为速度太慢，访问性太差，而且偶尔还被 DDOS，为了缩短加载时间，转到了 Coding 上，今天把它迁到了阿里云上。</p>
<p>我是测试的分割线</p>
<hr>
<p>hook 生效，push 上去即可更新<br>生活又开始有希望起来</p>
<a id="more"></a>
<blockquote>
<p>PS：Coding 正在变得越来越好，提供的服务也越来越强大，工程师八哥半夜还在回复 Bug，每一次更新都会带来惊喜。</p>
</blockquote>
<p>迁移到 Coding 之后，便捷提高了，只不过在给 <code>Coidng Page</code> 绑定自定义域名时出现了问题，绑定域名之后，通过自定义域名访问时，通过 <code>http</code> 方式，链接会被重置，必须手动 <code>https</code> 或者通过代理访问……这还怎么玩</p>
<p>为了对比，我借了胜祥同学的二级域名绑定了一次，正常访问，只可能是域名的问题了</p>
<p>问阿里云的工程师，得到的答复是服务器那边的问题，问 Coding 的工程师，他们也一头雾水，最后的结论是 <code>可能被墙了？</code></p>
<p>买过域名之后一直没备案，后来被屏蔽了，备案之后屏蔽解除了，不知道这个问题跟那次屏蔽有无关联</p>
<p>不想再被这样的问题困扰，自己动手，丰衣足食，思来想去还是直接放服务器上。</p>
]]></content>
      
        <categories>
            
            <category> 问题解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> git </tag>
            
            <tag> hexo </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SublimeText 配置 LaTeX 编辑器]]></title>
      <url>http://lijundong.com/start-latex-and-configure-latext-editor-with-sublime/</url>
      <content type="html"><![CDATA[<p>上一篇 <a href="//jundong.coding.me/2016/11/17/novel-crawler-by-Nodejs/">Node.js 实现简单小说爬虫</a>，文末处理 Markdown 文件时，因为 Pandoc 对中文支持度不好，折腾了一会没解决，退而求其次选择用 Chrome 打印功能把 Markdown 文件转成 PDF。折腾不出来肯定要继续折腾呀，最近抽空在 Ubuntu 配置了下，终于支持了中文文档转换，但是用的 LaTeX 模板是在网上找的，想自己写一个，顺便了解下 LaTeX。<br>工欲善其事，必先利其器。这里笔记下 SublimeTeXt3 下用 TeXlive 配置 LaTeX 编辑环境。<br><a id="more"></a></p>
<h3 id="系统-amp-软件-版本"><a href="#系统-amp-软件-版本" class="headerlink" title="系统 &amp; 软件 版本"></a>系统 &amp; 软件 版本</h3><ul>
<li>windows 10</li>
<li><a href="//www.sublimetext.com/3">Sublime Text3</a></li>
<li><a href="//mirror.hust.edu.cn/CTAN/systems/texlive/Images/">TeX Live 2016</a></li>
</ul>
<h3 id="关于-TeX、LaTeX、TeX-Live"><a href="#关于-TeX、LaTeX、TeX-Live" class="headerlink" title="关于 TeX、LaTeX、TeX Live"></a>关于 TeX、LaTeX、TeX Live</h3><h4 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h4><p><strong>专有名词，注意名词大小写</strong><br><strong>TeX：</strong>美国计算机教授高德纳 (Donald Ervin Knuth) 为了排版他的著作 『The Art of Computer Programming』(TAOCP) 编写的功能强大的排版软件。<br><strong>LaTeX：</strong>美国计算机科学家莱斯利·兰伯特为了准备他的著作 『The Great American Concurrency Book』基于 TeX 开发的宏，详见<a href="//zh.wikipedia.org/wiki/LaTeX">Wiki</a><br><strong>TeX Live：</strong>是由国际 TEX 用户组整理和发布的TEX软件发行套装，详见<a href="//zh.wikipedia.org/wiki/TeX_Live">wiki</a></p>
<h4 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h4><h5 id="公式编辑"><a href="#公式编辑" class="headerlink" title="公式编辑"></a>公式编辑</h5><ul>
<li>在线：<a href="//www.codecogs.com/latex/eqneditor.php?lang=zh-cn">在线 LaTeX 公式编辑器</a></li>
<li>Office套件：在 office 套件里，通过 <a href="//www.dessci.com/en/products/mathtype/">MathType</a> 可以很方便地编辑公式</li>
<li>LaTeX：通过 LaTeX 语法输入公式</li>
</ul>
<h5 id="排版"><a href="#排版" class="headerlink" title="排版"></a>排版</h5><p>公式编辑只是 LaTeX 功能中的一项，排版才能体现出它的强大的功能，具体效果可以参见下面的 demo。<br><img src="//source.lijundong.com/public/16-11-24/95505961.jpg" alt=""></p>
<h3 id="配置-LaTeX-编辑器"><a href="#配置-LaTeX-编辑器" class="headerlink" title="配置 LaTeX 编辑器"></a>配置 LaTeX 编辑器</h3><p>使用 LaTeX 进行排版的过程即，<strong>编辑完 TeX 文件，通过 TeX Live 将 LaTeX 文件编译成 PDF 文件</strong><br>为了操作方便，通过配置 Sublime 的插件 <code>LaTeXTools</code>，可快捷调用(快捷键：<code>Ctrl + B</code>) Tex Live 来编译文件，高效率编辑。 </p>
<p><strong>可选：</strong>高效到底，通过配置 sumatraPDF ，可在 PDF 生成后 自动在 sumatraPDF 中打开，实现实时预览的效果。</p>
<h4 id="安装-TeXlive"><a href="#安装-TeXlive" class="headerlink" title="安装 TeXlive"></a>安装 TeXlive</h4><p><strong>ISO 镜像下载地址：</strong><a href="//mirror.hust.edu.cn/CTAN/systems/texlive/Images/">TeX Live 2016</a><br>下载完成后，加载镜像，进入文件点击 <code>install-tl-windows.bat</code>(直接安装) 或者 <code>install-tl-advanced.bat</code>(提供可选项) 开始安装。</p>
<p>等待中……</p>
<p>安装完成后，还需要一步，<strong>将 LaTeX 执行文件的路径加入系统环境变量</strong><br>我在本机的路径为 <code>C:\texlive\2016\bin\win32</code>，加入系统环境变量后，可通过在 命令提示符(CMD) 执行 <code>latex</code> 命令检查，<strong>注：可能需要重启电脑</strong>。</p>
<h4 id="安装-sumatraPDF-可选"><a href="#安装-sumatraPDF-可选" class="headerlink" title="安装 sumatraPDF (可选)"></a>安装 sumatraPDF (可选)</h4><p>关于 Sumatra PDF：Sumatra PDF is a free PDF, eBook (ePub, Mobi), XPS, DjVu, CHM, Comic Book (CBZ and CBR) reader for Windows.</p>
<p>下载地址：<a href="//www.sumatrapdfreader.org/download-free-pdf-viewer.html">Sumatra PDF </a></p>
<p>添加路径到系统环境变量：同 TeX Live 一样，为了能在 CMD 中通过命令执行程序，需要将 Sumatra PDF 执行文件的路径添加到系统环境变量，通过在 CMD 中执行命令检测配置是否成功。<strong>注：可能需要重启电脑</strong></p>
<h4 id="Sublime-安装-LaTeXtools-插件"><a href="#Sublime-安装-LaTeXtools-插件" class="headerlink" title="Sublime 安装 LaTeXtools 插件"></a>Sublime 安装 LaTeXtools 插件</h4><h5 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h5><p>如果对于 Sublime Text 不熟悉的同学，可以参见 <a href="//jundong.coding.me/2016/03/17/SublimeText-extension-recommand/">SublimeText 插件推荐</a><br>通过 Package Control 安装插件 <code>LaTeXTools</code></p>
<h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><p>配置文件路径：<br><code>Preference &gt; Package Setting &gt; LaTeXTools &gt; Setting-User</code></p>
<p>配置以下参数<br><code>texpath</code>：TeX Live 可执行文件的路径(即添加到环境变量中的路径)<br><code>distro</code>：修改为 <code>texlive</code><br><code>sumtra</code>：sumatraPDF 可执行文件的路径(即添加到环境变量中的路径)</p>
<figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"windows"</span>: &#123;</span><br><span class="line">    <span class="string">"texpath"</span> : <span class="string">"C:\\texlive\\2016\\bin\\win32"</span>,</span><br><span class="line">    <span class="string">"distro"</span> : <span class="string">"texlive"</span>,</span><br><span class="line">    <span class="string">"sumatra"</span>: <span class="string">"C:\\Program Files\\SumatraPDF"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h5 id="配置-sumatraPDF-反向搜索"><a href="#配置-sumatraPDF-反向搜索" class="headerlink" title="配置 sumatraPDF 反向搜索"></a>配置 sumatraPDF 反向搜索</h5><p>路径为 SublimeText 的可执行文件路劲，如下示例<br><code>sumatrapdf.exe -inverse-search &quot;\&quot;C:\Program Files\Sublime Text 3\sublime_text.exe\&quot; \&quot;%f:%l\&quot;&quot;</code></p>
<h3 id="LaTeX-上手"><a href="#LaTeX-上手" class="headerlink" title="LaTeX 上手"></a>LaTeX 上手</h3><p>所有配置都完成了，下面可以测试成果了<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">\documentclass[UTF8]&#123;ctexart&#125;</span><br><span class="line">\title&#123;SublimeText 配置 LaTeX 编辑器&#125;</span><br><span class="line">\author&#123;Leeon&#125;</span><br><span class="line">\date&#123;\today&#125;</span><br><span class="line">\usepackage&#123;graphicx&#125;</span><br><span class="line">\usepackage&#123;geometry&#125;</span><br><span class="line">\geometry&#123;papersize=&#123;21cm,29.7cm&#125;&#125;</span><br><span class="line">\geometry&#123;left=2.5cm,right=2.5cm,top=3cm,bottom=3cm&#125;</span><br><span class="line">\begin&#123;document&#125;</span><br><span class="line">\maketitle</span><br><span class="line">\tableofcontents</span><br><span class="line">\section&#123;系统 \&amp; 软件 版本&#125;</span><br><span class="line">\begin&#123;center&#125;</span><br><span class="line">\includegraphics[width = .4\textwidth]&#123;boat.jpg&#125;</span><br><span class="line">\end&#123;center&#125;</span><br><span class="line">\section&#123;名词解释&#125;</span><br><span class="line">专有名词，注意名词大小写</span><br><span class="line">TeX：美国计算机教授高德纳 (Donald Ervin Knuth) 为了排版他的著作 『The Art of Computer Programming』(TAOCP) 编写的功能强大的排版软件。</span><br><span class="line">LaTeX：美国计算机科学家莱斯利·兰伯特为了准备他的著作 『The Great American Concurrency Book』基于 TeX 开发的宏，详见Wiki</span><br><span class="line">TeX Live：是由国际 TEX 用户组整理和发布的TEX软件发行套装，详见wiki</span><br><span class="line">\section&#123;使用场景&#125;</span><br><span class="line">\subsection&#123;公式编辑&#125;</span><br><span class="line">\subsection&#123;排版&#125;</span><br><span class="line">\section&#123;配置 LaTeX 编辑器&#125;</span><br><span class="line">\subsection&#123;安装 TeXlive&#125;</span><br><span class="line">\subsection&#123;安装 sumatraPDF (可选)&#125;</span><br><span class="line">\subsection&#123;Sublime 安装 LaTeXtools 插件&#125;</span><br><span class="line">\subsubsection&#123;安装&#125;</span><br><span class="line">\subsubsection&#123;配置&#125;</span><br><span class="line">\end&#123;document&#125;</span><br></pre></td></tr></table></figure></p>
<p>编译效果：</p>
<p><img src="//source.lijundong.com/public/16-11-24/95505961.jpg" alt=""></p>
<hr>
<p>知道 LaTeX 是大一高数课，林军老师的 PPT 的公式都是用 MathType 编辑，用过一段时间，高数结课后没再接触，之后在王垠的<a href="//www.yinwang.org/blog-cn/2014/01/04/authority">博客</a>里，看到他提到一些关于 TeX 的观点，最后却只记得他拿了 Donald Knuth 的支票，觉得此人厉害。再次和 TeX 擦肩而过……<br>还好这次花了时间去了解，让我看到一个新的维度世界，感觉很开心</p>
<p>Better late than never</p>
<hr>
<p><em>参考：</em></p>
<ul>
<li><a href="//th0.me/1737.html">TeXLive + Sublime TeXt 3 + LaTeXTools 环境配置</a></li>
<li><a href="//liam0205.me/2014/09/08/LaTeX-introduction/">一份其实很短的 LaTeX 入门文档</a></li>
<li><a href="//attach3.bdwm.net/attach/boards/MathTools/M.1364651898.A/TeX_intro_talk.pdf">LaTeX 入门</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> LaTeX </tag>
            
            <tag> sublime </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node.js 实现简单小说爬虫]]></title>
      <url>http://lijundong.com/novel-crawler-by-Nodejs/</url>
      <content type="html"><![CDATA[<p>最近因为剧荒，老大追了爱奇艺的一部网剧，由丁墨的同名小说《美人为馅》改编，目前已经放出两季，虽然整部剧槽点满满，但是老大看得不亦乐乎，并且在看完第二季之后跟我要小说资源，直接要奔原著去看结局……<br>随手搜了下，都是在线资源，下载的话需要登录，注册登录好麻烦，写个爬虫玩玩也好，于是动手用 node 写了一个，这里做下笔记<br><a id="more"></a></p>
<h3 id="工作流程"><a href="#工作流程" class="headerlink" title="工作流程"></a>工作流程</h3><ul>
<li>获取 URLs 列表(请求资源 <code>request</code> 模块)</li>
<li>根据 URLs 列表获取相关页面源码(可能遇到页面编码问题，<code>iconv-lite</code> 模块)</li>
<li>源码解析，获取小说信息( <code>cheerio</code> 模块)</li>
<li>保存小说信息到 Markdown 文件，并且加适当修饰以及章节信息(写文件 <code>fs</code>、同步请求资源 <code>sync-request</code> 模块)</li>
<li>Markdown 转 PDF (使用 Pandoc 或者 Chrome 的打印功能)</li>
</ul>
<h3 id="获取-URLs"><a href="#获取-URLs" class="headerlink" title="获取 URLs"></a>获取 URLs</h3><p>根据小说的导航页，获取小说所有章节的 URL，并且以 JSON 数组的方式存储。</p>
<ul>
<li>首选通过 <code>http.get()</code> 方法获取页面源码</li>
<li>获取到源码，打印发现中文乱码，查看发现 <code>charset = &#39;gbk&#39;</code>，需要进行转码</li>
<li>使用 <code>iconv-lite</code> 模块进行转码，中文显示正常后开始解析源码，获取需要的 URL，为了更方便地解析，需要引进 <code>cheerio</code> 模块，<code>cheerio</code> 可以理解为运行在后台的 jQuery，用法与 jQuery 也十分相似，熟悉 jQuery 的同学可以很快的上手</li>
<li>将源码加载进 <code>cheerio</code>，分析了源码后得知所有章节信息都存于被 <code>div</code> 包裹的 <code>a</code> 标签中，通过 <code>cheerio</code> 取出符合条件的 <code>a</code> 标签组，进行遍历，获取章节的 title 和 URL，保存为对象，存进数组，(<strong>因为链接中存储的  URL 不完整，所以存储时需要补齐</strong>)</li>
<li>将对象数组序列化，写进 <code>list.json</code> 文件</li>
</ul>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">"cheerio"</span>)</span><br><span class="line"><span class="keyword">var</span> iconv = <span class="built_in">require</span>(<span class="string">"iconv-lite"</span>)</span><br><span class="line"><span class="keyword">var</span> url = <span class="string">'//www.17fa.com/files/article/html/90/90747/index.html'</span></span><br><span class="line">http.get(url, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;  <span class="comment">//资源请求</span></span><br><span class="line">    <span class="keyword">var</span> chunks = []</span><br><span class="line">    res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">        chunks.push(chunk)</span><br><span class="line">    &#125;)</span><br><span class="line">    res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> html = iconv.decode(Buffer.concat(chunks), <span class="string">'gb2312'</span>) <span class="comment">//转码操作</span></span><br><span class="line">        <span class="keyword">var</span> $ = cheerio.load(html, &#123;</span><br><span class="line">            decodeEntities: <span class="literal">false</span></span><br><span class="line">        &#125;)</span><br><span class="line">        <span class="keyword">var</span> content = $(<span class="string">"tbody"</span>)</span><br><span class="line">        <span class="keyword">var</span> links = []</span><br><span class="line">        $(<span class="string">'div'</span>).children(<span class="string">'a'</span>).each(<span class="function"><span class="keyword">function</span>(<span class="params">i, elem</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> link = <span class="keyword">new</span> <span class="built_in">Object</span>()</span><br><span class="line">            link.title = $(<span class="keyword">this</span>).text()</span><br><span class="line">            link.link = <span class="string">'//www.17fa.com/files/article/html/90/90747/'</span> + $(<span class="keyword">this</span>).attr(<span class="string">'href'</span>) <span class="comment">//补齐 URL 信息</span></span><br><span class="line">            <span class="keyword">if</span> (i &gt; <span class="number">5</span>) &#123;</span><br><span class="line">                links.push(link)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        fs.writeFile(<span class="string">"list.json"</span>, <span class="built_in">JSON</span>.stringify(links), <span class="function"><span class="keyword">function</span>(<span class="params">err</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (!err) &#123;</span><br><span class="line">                <span class="built_in">console</span>.log(<span class="string">"写文件成功"</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"网页访问出错"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<p>获取的列表示例</p>
<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[&#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"3 法医司白"</span>,</span><br><span class="line">    <span class="attr">"link"</span>: <span class="string">"//www.17fa.com/files/article/html/90/90747/16548771.html"</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"4 第1个梦 "</span>,</span><br><span class="line">    <span class="attr">"link"</span>: <span class="string">"//www.17fa.com/files/article/html/90/90747/16548772.html"</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"5 刑警韩沉 "</span>,</span><br><span class="line">    <span class="attr">"link"</span>: <span class="string">"//www.17fa.com/files/article/html/90/90747/16548773.html"</span></span><br><span class="line">&#125;, &#123;</span><br><span class="line">    <span class="attr">"title"</span>: <span class="string">"6 最初之战"</span>,</span><br><span class="line">    <span class="attr">"link"</span>: <span class="string">"//www.17fa.com/files/article/html/90/90747/16548774.html "</span></span><br><span class="line">&#125;]</span><br></pre></td></tr></table></figure>
<h3 id="获取数据"><a href="#获取数据" class="headerlink" title="获取数据"></a>获取数据</h3><p>有了 URLs 列表，接下来的工作就很机械了，遍历 URLs 列表请求资源，获取源码，解析源码，获取小说，写文件，<strong>但是</strong>，因为最终将所有的章节保存入一个文件，要保证章节的顺序，因此写文件需要 <strong>同步操作</strong>，实际上，我在编码的时候所有的操作都改成了同步方式</p>
<h4 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h4><p>通过解析读取的 <code>list.json</code> 文件，获取到 URLs 列表，遍历列表获取资源，因为需要确保章节的顺序，所以这里引进 <code>sync-request</code> 模块进行同步 request 请求资源，请求资源后照例转码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">"cheerio"</span>)</span><br><span class="line"><span class="keyword">var</span> iconv = <span class="built_in">require</span>(<span class="string">"iconv-lite"</span>)</span><br><span class="line"><span class="keyword">var</span> request = <span class="built_in">require</span>(<span class="string">'sync-request'</span>)</span><br><span class="line"><span class="keyword">var</span> urlList = <span class="built_in">JSON</span>.parse(fs.readFileSync(<span class="string">'list.json'</span>, <span class="string">'utf8'</span>))</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getContent</span>(<span class="params">chapter</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res = request(<span class="string">'GET'</span>,chapter.link)</span><br><span class="line">    <span class="keyword">var</span> html = iconv.decode(res.body, <span class="string">'gb2312'</span>) <span class="comment">//获取源码</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; urlList.length; i++) &#123;</span><br><span class="line">    getContent(urlList[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="解析源码，获取小说"><a href="#解析源码，获取小说" class="headerlink" title="解析源码，获取小说"></a>解析源码，获取小说</h4><p>还是通过 <code>cheerio</code> 模块获取小说内容，避免影响观感，写操作之前去除内容中的的 html 标签<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getContent</span>(<span class="params">chapter</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res = request(<span class="string">'GET'</span>,chapter.link)</span><br><span class="line">    <span class="keyword">var</span> html = iconv.decode(res.body, <span class="string">'gb2312'</span>)</span><br><span class="line">    <span class="keyword">var</span> $ = cheerio.load(html, &#123;</span><br><span class="line">        decodeEntities: <span class="literal">false</span></span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">var</span> content = ($(<span class="string">"div#r1c"</span>).text()).replace(<span class="regexp">/\&amp;nbsp;/g</span>, <span class="string">''</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="保存小说"><a href="#保存小说" class="headerlink" title="保存小说"></a>保存小说</h4><p>写操作也需要同步操作，因此使用了同步写函数 <code>fs.writeFileSync()</code> 和 同步添加函数 <code>fs.appendFileSync()</code>，第一次写使用写函数，之后的内容都是进行 append 操作，<strong>为了改善阅读体验，每个章节前添加标题</strong><br><strong>也可以在内容前添加 拍 [TOC]，作为导航链接</strong></p>
<p><img src="//source.lijundong.com/public/16-11-18/1946587.jpg" style="border-radius: 0.5rem;border:0;"></p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> http = <span class="built_in">require</span>(<span class="string">"http"</span>)</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">"fs"</span>)</span><br><span class="line"><span class="keyword">var</span> cheerio = <span class="built_in">require</span>(<span class="string">"cheerio"</span>)</span><br><span class="line"><span class="keyword">var</span> iconv = <span class="built_in">require</span>(<span class="string">"iconv-lite"</span>)</span><br><span class="line"><span class="keyword">var</span> path = <span class="built_in">require</span>(<span class="string">'path'</span>)</span><br><span class="line"><span class="keyword">var</span> urlList = <span class="built_in">JSON</span>.parse(fs.readFileSync(<span class="string">'list.json'</span>, <span class="string">'utf8'</span>))</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getContent</span>(<span class="params">chapter</span>) </span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(chapter.link)</span><br><span class="line">    http.get(chapter.link, <span class="function"><span class="keyword">function</span>(<span class="params">res</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> chunks = []</span><br><span class="line">        res.on(<span class="string">'data'</span>, <span class="function"><span class="keyword">function</span>(<span class="params">chunk</span>) </span>&#123;</span><br><span class="line">            chunks.push(chunk)</span><br><span class="line">        &#125;)</span><br><span class="line">        res.on(<span class="string">'end'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> html = iconv.decode(Buffer.concat(chunks), <span class="string">'gb2312'</span>)</span><br><span class="line">            <span class="keyword">var</span> $ = cheerio.load(html, &#123;</span><br><span class="line">                decodeEntities: <span class="literal">false</span></span><br><span class="line">            &#125;)</span><br><span class="line">            <span class="keyword">var</span> content = ($(<span class="string">"div#r1c"</span>).text()).replace(<span class="regexp">/\&amp;nbsp;/g</span>, <span class="string">''</span>)</span><br><span class="line">            <span class="keyword">if</span> (fs.existsSync(<span class="string">'美人为馅.md'</span>)) &#123;</span><br><span class="line">                fs.appendFileSync(<span class="string">'美人为馅.md'</span>, <span class="string">'### '</span> + chapter.title)</span><br><span class="line">                fs.appendFileSync(<span class="string">'美人为馅.md'</span>, content)</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                fs.writeFileSync(<span class="string">'美人为馅.md'</span>, <span class="string">'### '</span> + chapter.title)</span><br><span class="line">                fs.appendFileSync(<span class="string">'美人为馅.md'</span>, content)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">    &#125;).on(<span class="string">'error'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"爬取"</span> + chapter.link + <span class="string">"链接出错！"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; urlList.length; i++) &#123;</span><br><span class="line">    <span class="built_in">console</span>.log(urlList[i])</span><br><span class="line">    getContent(urlList[i])</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="Markdown-转-PDF"><a href="#Markdown-转-PDF" class="headerlink" title="Markdown 转 PDF"></a>Markdown 转 PDF</h3><p>我将小说保存在 Markdown 文件中，为了提升阅读体验，可以将 Markdown 文件转换成 PDF 文件，目前我较为喜欢的两种方式，通过 Chrome 的打印功能 以及 pandoc 转换</p>
<h4 id="Chrome-打印"><a href="#Chrome-打印" class="headerlink" title="Chrome 打印"></a>Chrome 打印</h4><p>SublimeText 有个插件 <code>markdown preview</code> ，可通过 <code>Alt + m</code> 快捷键在 Chrome 中预览 Markdown，在 Chrome 页面中右键，选择打印，调整好参数后，选择另存为 PDF，简单，粗暴，深得我心<br><strong>打印效果：</strong><br><img src="//source.lijundong.com/public/16-11-18/97144351.jpg" alt=""></p>
<h4 id="pandoc-转换"><a href="#pandoc-转换" class="headerlink" title="pandoc 转换"></a>pandoc 转换</h4><p>pandoc 是十分强大的文件格式转换工具，可以将 Markdown 文件转换成多种格式，今晚在 windows10 下折腾了半天，始终检索不到 pdflatex，关于 pandoc，后面会专门写一篇总结。 </p>
<p>PDF 已经发给老大了，现在正在看</p>
<h3 id="关于python、node、爬虫"><a href="#关于python、node、爬虫" class="headerlink" title="关于python、node、爬虫"></a>关于python、node、爬虫</h3><p>在之前很长的一段时间里，很想用 Python，很想写爬虫，更想用 Python 写爬虫，甚至成为了心里的一块执念，随着接触的知识更全面，执念也逐渐淡去，少了很多“想”，遇事想着多去动手，实践出真知。</p>
<hr>
<p><em>talk is cheap, show me your code</em></p>
]]></content>
      
        <categories>
            
            <category> node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> node </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> 小说 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[前端开发自动化之 Gulp]]></title>
      <url>http://lijundong.com/develop-automatic-gulp-set/</url>
      <content type="html"><![CDATA[<p>越来越意识到开发的规范化的重要性，以及自动化带来的高效，前端开发环境自动化构建的技能是必须要 get 的，于是最近用了一个 demo 完整的跑了一遍 Gulp 的前端开发自动化，体验很棒，这里记录下。<br>努力向规范看齐，向大牛看齐，多去了解，多去接触，视野开阔才能看到更远的风景，会有更多的可能。<br><a id="more"></a></p>
<h3 id="工具使用"><a href="#工具使用" class="headerlink" title="工具使用"></a>工具使用</h3><p>技术的进击的过程相似于打怪升级买装备，初级拿把小米步枪就可以制霸方圆，升级之后遇到高手才发现没几把 AK 都不好意思跟人打招呼，再升级之后，发现二营长的意大利炮还是要有的，哈哈。<br>学习前端以来都是自己一个人折腾，学的不系统，做的项目也都是小打小闹，一直没接触到自动化，第一次看介绍 Grunt 的文章时，因为应用水平太低，反复看了三遍才稍微理解开发环境自动化，但是一直没机会应用，这次做个笔记先，关于使用 grunt、gulp还是 webpack，我的观点是，你在纠结的时候，我已经开始上代码了……</p>
<h3 id="文件目录结构"><a href="#文件目录结构" class="headerlink" title="文件目录结构"></a>文件目录结构</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">|-/dist</span></span><br><span class="line"><span class="string">|-/src</span></span><br><span class="line"><span class="string">|--`css</span></span><br><span class="line"><span class="string">|--`images</span></span><br><span class="line"><span class="string">|--`js</span></span><br><span class="line"><span class="string">|--`less</span></span><br><span class="line"><span class="string">|-gulpfile.js</span></span><br><span class="line"><span class="string">|-package.json</span></span><br></pre></td></tr></table></figure>
<h3 id="Gulp"><a href="#Gulp" class="headerlink" title="Gulp"></a>Gulp</h3><p>技术选型的时候，不求最新最炫，我考虑的首要因素是合适，之所以选择 gulp，首先是上手较 grunt 简单，而且插件已经很丰富了，而且目前我应用的场景没必要使用 webpack。<br>Gulp 以及所用到的插件的安装都是通过 npm 。</p>
<h3 id="gulpfile-js-配置"><a href="#gulpfile-js-配置" class="headerlink" title="gulpfile.js 配置"></a>gulpfile.js 配置</h3><p>类似于 package.json，gulpfile.js 是gulp的配置文件，在文件中引入插件，以及自定义指令。</p>
<h4 id="gulp-插件"><a href="#gulp-插件" class="headerlink" title="gulp 插件"></a>gulp 插件</h4><p>gulp 丰富的插件可以满足目前开发环境中遇到的大部分需求，我这里列了几个插件，只是目前需要的，有新需求时再补充，如果你想找插件，直接去 <a href="//npmjs.com/">npm 官网</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> gulp = <span class="built_in">require</span>(<span class="string">"gulp"</span>)</span><br><span class="line"><span class="comment">// 编译 less</span></span><br><span class="line"><span class="keyword">var</span> less = <span class="built_in">require</span>(<span class="string">"gulp-less"</span>)</span><br><span class="line"><span class="comment">// 压缩 css 代码</span></span><br><span class="line"><span class="keyword">var</span> minifycss = <span class="built_in">require</span>(<span class="string">"gulp-clean-css"</span>)</span><br><span class="line"><span class="comment">// 压缩 js 代码</span></span><br><span class="line"><span class="keyword">var</span> uglify = <span class="built_in">require</span>(<span class="string">"gulp-uglify"</span>)</span><br><span class="line"><span class="comment">// 合并文件</span></span><br><span class="line"><span class="keyword">var</span> concat = <span class="built_in">require</span>(<span class="string">"gulp-concat"</span>)</span><br><span class="line"><span class="comment">// 神器，浏览器自动刷新</span></span><br><span class="line"><span class="keyword">var</span> browserSync = <span class="built_in">require</span>(<span class="string">"browser-sync"</span>).create()</span><br><span class="line"><span class="keyword">var</span> reload = browserSync.reload;</span><br></pre></td></tr></table></figure></p>
<h4 id="配置开发环境-dev"><a href="#配置开发环境-dev" class="headerlink" title="配置开发环境  dev"></a>配置开发环境  dev</h4><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// css:dev 命令 将 /src 中的 css 移动到 /dist 并刷新页面</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'css:dev'</span>, function() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">gulp</span><span class="selector-class">.src</span>(<span class="string">'src/css/*.css'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/css'</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(reload(&#123;</span><br><span class="line">            <span class="attribute">stream</span>: true</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// less:dev 命令 编译 less，移动到 /dist 并刷新页面</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'less:dev'</span>, function() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">gulp</span><span class="selector-class">.src</span>(<span class="string">'src/less/*.less'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(less())</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/css'</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(reload(&#123;</span><br><span class="line">            <span class="attribute">stream</span>: true</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// js:dev 命令 移动 js 并刷新页面</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'js:dev'</span>, function() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">gulp</span><span class="selector-class">.src</span>(<span class="string">'src/js/*.js'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/js'</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(reload(&#123;</span><br><span class="line">            <span class="attribute">stream</span>: true</span><br><span class="line">        &#125;))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// dev 命令，执行 js:dev less:dev css:dev 并启动 browserSync 监听 /src 下的 js、less、css代码</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'dev'</span>, [<span class="string">'js:dev'</span>, <span class="string">'less:dev'</span>, <span class="string">'css:dev'</span>], function() &#123;</span><br><span class="line">    <span class="selector-tag">browserSync</span><span class="selector-class">.init</span>(&#123;</span><br><span class="line">        <span class="attribute">server</span>: &#123;</span><br><span class="line">            <span class="attribute">baseDir</span>: <span class="string">'/'</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attribute">notify</span>: false</span><br><span class="line">    &#125;)</span><br><span class="line">    gulp<span class="selector-class">.watch</span>(<span class="string">'src/js/*.js'</span>, [<span class="string">'js:dev'</span>])</span><br><span class="line">    <span class="selector-tag">gulp</span><span class="selector-class">.watch</span>(<span class="string">'src/less/*.less'</span>, [<span class="string">'less:dev'</span>])</span><br><span class="line">    <span class="selector-tag">gulp</span><span class="selector-class">.watch</span>(<span class="string">'src/css/*.css'</span>, [<span class="string">'css:dev'</span>])</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>
<h4 id="打包配置"><a href="#打包配置" class="headerlink" title="打包配置"></a>打包配置</h4><p>打包上线时，可以将多个文件压缩(模板、css、css)、合并(css、js)，减少请求</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// css 压缩合并</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'css'</span>, function() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">gulp</span><span class="selector-class">.src</span>(<span class="string">'src/css/*.css'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(autoprefixer())</span><br><span class="line">        <span class="selector-class">.pipe</span>(minifycss())</span><br><span class="line">        <span class="selector-class">.pipe</span>(concat(<span class="string">"all.min.css"</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/css'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// less 编译、压缩</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'less'</span>, function() &#123;</span><br><span class="line">    <span class="selector-tag">return</span> <span class="selector-tag">gulp</span><span class="selector-class">.src</span>(<span class="string">'src/less/*.less'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(less())</span><br><span class="line">        <span class="selector-class">.pipe</span>(minifycss())</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/css'</span>))</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// js 压缩 合并</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'js'</span>, function() &#123;</span><br><span class="line">    return gulp<span class="selector-class">.src</span>(<span class="string">'src/js/*.js'</span>)</span><br><span class="line">        <span class="selector-class">.pipe</span>(uglify())</span><br><span class="line">        <span class="selector-class">.pipe</span>(concat(<span class="string">"all.min.js"</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(gulp.dest(<span class="string">'dist/static/js'</span>))</span><br><span class="line">        <span class="selector-class">.pipe</span>(uglify())</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">// 一键打包</span></span><br><span class="line"><span class="selector-tag">gulp</span><span class="selector-class">.task</span>(<span class="string">'build'</span>, [<span class="string">'css'</span>, <span class="string">'less'</span>, <span class="string">'js'</span>])</span><br></pre></td></tr></table></figure>
<h3 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h3><p><code>gulp dev</code> <strong>开发环境</strong>，gulp 监听 /src 下的修改，更新数据，刷新浏览器，查看预览<br>功能开发结束，<strong>打包</strong><br><code>gulp build</code> 打包，编译，压缩文件<br><strong>上线</strong></p>
<p>参考:</p>
<ul>
<li><a href="//www.jianshu.com/p/cc1cb9a5650c">入门：十分钟自动化构建</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 开发工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> gulp </tag>
            
            <tag> 前端开发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[解决 Google 重定向，体验 Google 本味]]></title>
      <url>http://lijundong.com/google-no-country-redirect-disabled/</url>
      <content type="html"><![CDATA[<p>由于不可抗力的缘故，每过一段时间，Google 就会重新被拿出来说一次，上一次说的是入门之法，关于 VPN 和 Shadowsocks 的一些很基础的东西。<br>最近小飞机换了更快的香港的服务器，体验非常棒，但是在使用 Google 时，Google 为了提供更好的本地搜索体验，<code>google.com</code> 会自动重定向到 <code>google.com.hk</code> ，可惜这些体验只有身在香港的服务器才能体验，而身在天朝的我还需要去考虑 <code>google country redirect disable</code>。<br><a id="more"></a><br>想要体验原汁原味的 Google(google.com)，下面的方案是我用过的较方便的方案。<br><strong>欢迎更正及补充</strong></p>
<h3 id="Chrome-扩展"><a href="#Chrome-扩展" class="headerlink" title="Chrome 扩展"></a>Chrome 扩展</h3><p>Chrone 商店有一款禁止重定向的扩展 <a href="//chrome.google.com/webstore/detail/nocountryredirect-ncr/ciboebddidackjicoeoiigdnbmchkdll?hl=en">NoCountryRedirect (NCR)</a><br>这款插件是将重定向后的 <code>google.com.hk</code> 再重定向到 <code>google.com</code>，虽然有效，但是多次重定向导致页面相应变慢，体验不太好，装完体验两分钟就卸了<br>优点：安装方便<br>缺点：导致 Google 访问速度变得很慢</p>
<h3 id="手动-google-com-ncr"><a href="#手动-google-com-ncr" class="headerlink" title="手动 google.com/ncr"></a>手动 google.com/ncr</h3><p>可以通过手动 ncr(no country redirect) 来强制禁止重定向，我将这个 url 设置了书签。</p>
<h3 id="设置默认搜索引擎"><a href="#设置默认搜索引擎" class="headerlink" title="设置默认搜索引擎"></a>设置默认搜索引擎</h3><p>Chrome –&gt; 设置 -&gt; 搜索 -&gt; 管理搜索引擎 –&gt; 其他搜索引擎<br>拉到最下，有一个“添加新的搜索引擎”，参数如下</p>
<blockquote>
<p>名字：google.com<br>关键字: Google-ncr<br>url: //www.google.com/search?q=%s</p>
</blockquote>
<p>配置完设置为默认搜索引擎，完成</p>
<p><em>人生苦短，我用 Google</em></p>
<hr>
<p>新的 MBP 一周后发布，等了大半年，终于等来了，下面的事情就是存钱了，Fighting！</p>
<p><em>人生苦短，我用 Mac</em></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> google </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[升级笔记本 CPU]]></title>
      <url>http://lijundong.com/update-laptop-cpu/</url>
      <content type="html"><![CDATA[<p>大二在小组的时候，身边几个伙伴相继换了固态，并且极力怂恿我也换，高呼固态大法好，时常拿十秒内的开机速度来做碾压，当时对于硬盘读写性能没有直观感受，觉得开机慢点也没所谓。<br>后面做的事多起来，任务开得多，Chrome 经常几十个 Tab 同时开，导致磁盘开机就爆红，鼠标动动都困难，更别提编码了，这时候才意识到笔记本需要升级，于是加装了固态，随即内存就成了瓶颈，又把内存加装到 8G，这之后相安无事过了很久。但该来的总是要来的，满频只有 1.8GHz 的赛扬终于满足不了正常的开发需要，这就换了它。<br><a id="more"></a></p>
<h3 id="ThinkPad-E531-配置"><a href="#ThinkPad-E531-配置" class="headerlink" title="ThinkPad E531 配置"></a>ThinkPad E531 配置</h3><p>现在用的电脑的是 ThinkPad E531，是高考后暑假和跃峰在合肥电脑城入的，两个小白在那被坑了不少钱，跃峰比我惨一些，他买电脑的那家铺子在某个夜深人静时分，人去摊空……<br>我入的 E531 应该是低配版，处理器是<code>Celeron® Processor 1000M 
(2M Cache, 1.80 GHz)</code>，500G 机械，4GB 内存，核显。这个配置决定了大学里的我跟游戏彻底绝缘。<br>升级过三次，加装了 <code>Samsung 850 EVO 120G</code> 的固态，加上支架，￥420 的开销，加装的内存是花 ￥80 从秦望那入的二手 4GB 三星。现在用的处理器因为是 <code>HM 77</code> 的主板，最多只能上三代的处理器，在淘宝上找了好几家才找到，考虑到散热的问题，最后选了 <code>i5-3320M @ 2.6GHz</code> 最高可以睿频到 3.2GHz，换上之后世界彻底变的和谐了，又可以愉快的编码了。<br>这里记录下过程中的一些<strong>需要提前考虑的事项</strong>。</p>
<h3 id="笔记本的-CPU-是否支持升级？"><a href="#笔记本的-CPU-是否支持升级？" class="headerlink" title="笔记本的 CPU 是否支持升级？"></a>笔记本的 CPU 是否支持升级？</h3><blockquote>
<p>可以确定的是封装方式为PGA方式的处理器是可以升级的，BGA封装是直接焊在主板上面的，所以不可更换。大部分超极本为了获得更可观的厚度和更优秀的散热表现都采用了BGA封装方式的低压处理器，所以是不可更换的。从命名方式上直观地来看，以字母M以及QM、MQ、MX等结尾的处理器是可更换的，以字母U、Y以及HQ结尾的处理器是不可更换的。</p>
</blockquote>
<h3 id="CPU-和主板的兼容性"><a href="#CPU-和主板的兼容性" class="headerlink" title="CPU 和主板的兼容性"></a>CPU 和主板的兼容性</h3><p>选择 CPU 之前需要确定现有主板兼容的 CPU 型号。</p>
<h3 id="CPU-参数如何看"><a href="#CPU-参数如何看" class="headerlink" title="CPU 参数如何看"></a>CPU 参数如何看</h3><p>以 Intel 三代移动式处理器作例子<br><img src="//www.intel.cn/content/dam/www/public/cn/zh/images/illustrations/RWD/processor-number-core-i7-3770k-3920xm-rwd.png/_jcr_content/renditions/intel.web.480.270.png" style="border:0"><br><strong>关于数字</strong>：<br>第一位代表第几代CPU，一般越大，架构更优。i7-4770K &gt; i7-3770K<br>第二位代表处理器等级，数字越大，性能越好。i7-4810mq &gt; i7-4710mq<br>第三位代表核显，可忽略不比<br>第四位代表功耗可忽略不比</p>
<p><strong>关于后缀</strong>: </p>
<table>
<thead>
<tr>
<th>字母后缀</th>
<th>描述</th>
<th>举例</th>
</tr>
</thead>
<tbody>
<tr>
<td>M</td>
<td>移动式</td>
<td>i7-3520M</td>
</tr>
<tr>
<td>QM</td>
<td>四核移动式</td>
<td>i7-3820QM</td>
</tr>
<tr>
<td>U</td>
<td>超低功耗</td>
<td>i7-3667U</td>
</tr>
<tr>
<td>Y</td>
<td>极低功耗</td>
<td>i7-3689Y</td>
</tr>
</tbody>
</table>
<p>更详细内容可以去 <a href="//www.intel.cn/content/www/cn/zh/processors/processor-numbers.html#">Intel 官网</a> 获取</p>
<h3 id="安装注意"><a href="#安装注意" class="headerlink" title="安装注意"></a>安装注意</h3><p>安装的时候除了手残带来的问题外，需要注意导热硅胶的选择与涂抹，这关乎 CPU 的散热，<strong>很重要</strong>，淘宝和京东上二十几可以淘一个靠谱的，如果自己上手不放心，可以花十块找维修人员，分分钟解决，快捷省心。</p>
<hr>
<p>开销不到 1K 来升级这台电脑很超值，提升了开发的幸福感。效率更高，这应该是最后一次升级这个笔记本，努力赚钱买 MBP 才是王道，讲真，ThinkPad 的键盘真心好用。</p>
<p>参考:</p>
<ul>
<li><a href="//www.pcpop.com/doc/1/1025/1025099_all.shtml">繁琐但不困难 笔记本升级CPU实战教程</a></li>
<li><a href="//www.intel.cn/content/www/cn/zh/processors/processor-numbers.html">关于英特尔® 处理器编号</a></li>
<li><a href="//www.zhihu.com/question/21366606">intel处理器型号是怎么命名的？</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> cpu </tag>
            
            <tag> 笔记本 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Nginx 配置多个 Node 服务的域名]]></title>
      <url>http://lijundong.com/nginx-conficure-domains-to-servers/</url>
      <content type="html"><![CDATA[<p>最近用 Node 写的两个小项目都需要上线，项目跑在阿里云上，给了不同的端口，平时在各自的端口上，相安无事，但是要挂在微信公号上就需要域名，IP只有一个，两个域名势必要搭起来，我资历尚浅，肯定劝不动他俩，不看僧面看佛面，只好请来神器 Nginx 主持公道。这里做个笔记，欢迎补充指正。<br><a id="more"></a></p>
<h3 id="Domains-2-Servers-？"><a href="#Domains-2-Servers-？" class="headerlink" title="Domains-2-Servers ？"></a>Domains-2-Servers ？</h3><p>多个 Domain 需要对应多个 Node 服务，然而只有一个 IP，这还怎么谈？矛盾尖锐到无法解决的时候就需要中间人介入，和气生财嘛，Nginx 在中间人这个位置做的得心应手，擅长的领域有以下几点</p>
<ul>
<li>页面服务器</li>
<li>负载均衡</li>
<li>web 缓存加速</li>
<li>反向代理</li>
</ul>
<p>这起纠纷需要用到反向代理根据请求的 URL 将请求转到不同的服务器，以达到多个服务和谐共处的环境</p>
<h3 id="Nginx-安装-amp-常用命令"><a href="#Nginx-安装-amp-常用命令" class="headerlink" title="Nginx 安装 &amp; 常用命令"></a>Nginx 安装 &amp; 常用命令</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><p>我比较懒，用 yum 安装，快捷方便</p>
<h4 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h4><blockquote>
<ul>
<li>nginx -s stop    快速关闭</li>
<li>nginx -s quit     优雅地关闭</li>
<li>nginx -s reopen   重新打开日志</li>
<li>nginx -s reload   平滑重启</li>
<li>nginx -t          启动前测试</li>
</ul>
</blockquote>
<p>如果用包管理器进行的安装，也可以通过 service 来操作 Nginx </p>
<blockquote>
<ul>
<li>service nginx start</li>
<li>service nginx stop</li>
<li>service nginx restart</li>
<li>service nginx reload</li>
</ul>
</blockquote>
<h3 id="Nginx-配置文件"><a href="#Nginx-配置文件" class="headerlink" title="Nginx 配置文件"></a>Nginx 配置文件</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">系统: <span class="selector-tag">CentOS</span> 7  </span><br><span class="line"><span class="selector-tag">Nginx</span>: 1<span class="selector-class">.10</span><span class="selector-class">.1</span></span><br></pre></td></tr></table></figure>
<h4 id="检查-nginx-conf"><a href="#检查-nginx-conf" class="headerlink" title="检查 nginx.conf"></a>检查 nginx.conf</h4><p>进入 <code>/etc/nginx/</code> 路径下，路径下的 <code>nginx.conf</code> 是 Nginx 的配置文件，还有 <code>/conf.d</code> 文件夹存放的是 Server 的设置(<strong>注</strong>：这里的 <code>/conf.d</code> 在较早的版本里是 <code>/sites-available</code>)</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//nginx.conf 文件末尾对 /conf.d 中配置文件的应用，如果这一行被注释了，请把注释去除</span></span><br><span class="line"><span class="keyword">include</span> <span class="regexp">/etc/</span>nginx<span class="regexp">/conf.d/</span>*.conf</span><br><span class="line"></span><br><span class="line"><span class="comment">//如果是 /sites-available</span></span><br><span class="line"><span class="keyword">include</span> <span class="regexp">/etc/</span>nginx<span class="regexp">/sites-available/</span>*.conf</span><br></pre></td></tr></table></figure>
<h4 id="新建-Server-配置文件"><a href="#新建-Server-配置文件" class="headerlink" title="新建 Server 配置文件"></a>新建 Server 配置文件</h4><p>配置文件确认没有问题了，现在需要在 <code>/conf.d</code> 目录下配置服务器和对应的域名，我这里新建两个文件 <code>lushi.conf</code> 和 <code>mark.conf</code> (文件名随意，注意是 <code>.conf</code> 文件)以对应我需要配置的两个域名，分别的配置如下<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//lushi.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name lushi.lijundong.com;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/domain1.access.<span class="keyword">log</span>;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass    <span class="comment">//127.0.0.1:3000/;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//mark.conf</span></span><br><span class="line">server &#123;</span><br><span class="line">    listen 80;</span><br><span class="line">    server_name <span class="keyword">mark</span>.lijundong.com;</span><br><span class="line">    access_log /<span class="keyword">var</span>/<span class="keyword">log</span>/nginx/domain1.access.<span class="keyword">log</span>;</span><br><span class="line">    location / &#123;</span><br><span class="line">        proxy_pass    <span class="comment">//127.0.0.1:3100/;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="重载配置文件"><a href="#重载配置文件" class="headerlink" title="重载配置文件"></a>重载配置文件</h4><p>之前介绍的命令在这里就可以用了，<code>nginx -s reload</code> 重载配置文件，现在访问配置好的两个域名，又回到了相安无事的年代</p>
<p>参考:</p>
<ul>
<li><a href="//stackoverflow.com/questions/5009324/node-js-nginx-what-now">Node.js + Nginx - What now?</a></li>
<li><a href="//www.nginx.com/resources/wiki/start/topics/tutorials/commandline/">Nginx</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 服务器 </tag>
            
            <tag> nginx </tag>
            
            <tag> 域名 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[EJS渲染模板]]></title>
      <url>http://lijundong.com/embeded-javascript-templates/</url>
      <content type="html"><![CDATA[<p>这段时间一直在使用 Express 框架，虽然官方推荐 Pug 作为模板引擎，但我还是对 EJS 更感冒，官方也提供了 <code>Express -e</code> 的选择，由于之前没有认真看文档，导致了前段时间遇到的一个渲染问题，纠结了很久才得以解决，这里笔记下 EJS 的常用方法，算作一次梳理，欢迎补充指正。<br><a id="more"></a></p>
<h3 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h3><ul>
<li><code>&lt;%=</code>: 转义输出</li>
<li><code>&lt;%-</code>: 不转义输出(即输出源码)</li>
<li><code>&lt;%#</code>: 评论注释</li>
<li><code>&lt;%</code>: 输出 JS</li>
<li><code>&lt;%_</code>: 输出 JS 并且删除标签之前所有的空格</li>
<li><code>%&gt;</code>: 正常闭标签</li>
<li><code>-%&gt;</code>: 移除标签后的换行符</li>
<li><code>_%&gt;</code>: 移除便签后的所有的空格</li>
</ul>
<h3 id="实例对比"><a href="#实例对比" class="headerlink" title="实例对比"></a>实例对比</h3><p><strong>EJS</strong><br><figure class="highlight mojolicious"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, <span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">- myHtml </span><span class="xml"><span class="tag">%&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, <span class="tag">&lt;<span class="name">%=</span></span></span><span class="perl"> myHtml </span><span class="xml"><span class="tag">%&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">%</span></span></span><span class="perl"><span class="comment"># comment </span></span><span class="xml"><span class="tag">%&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, <span class="tag">&lt;<span class="name">%</span></span></span><span class="perl">- myMaliciousHtml </span><span class="xml"><span class="tag">%&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>Hello, <span class="tag">&lt;<span class="name">%=</span></span></span><span class="perl"> myMaliciousHtml </span><span class="xml"><span class="tag">%&gt;</span>.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p><strong>Locals</strong><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  "myHtml": "<span class="tag">&lt;<span class="name">strong</span>&gt;</span>Leeon<span class="tag">&lt;/<span class="name">strong</span>&gt;</span>"</span><br><span class="line">, "myMaliciousHtml": "<span class="tag">&lt;/<span class="name">p</span>&gt;</span><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"><span class="built_in">document</span>.write()</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span><span class="tag">&lt;<span class="name">p</span>&gt;</span>"</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>HTML</strong><br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="params">&lt;p&gt;</span>Hello, <span class="params">&lt;strong&gt;</span>Leeon<span class="params">&lt;/strong&gt;</span>.<span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;p&gt;</span>Hello, <span class="variable">&amp;lt</span>;strong<span class="variable">&amp;gt</span>;Leeon<span class="variable">&amp;lt</span>;/strong<span class="variable">&amp;gt</span>;.<span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;p&gt;</span><span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;p&gt;</span>Hello, <span class="params">&lt;/p&gt;</span><span class="params">&lt;script&gt;</span>document.write()<span class="params">&lt;/script&gt;</span><span class="params">&lt;p&gt;</span>.<span class="params">&lt;/p&gt;</span></span><br><span class="line"><span class="params">&lt;p&gt;</span>Hello, <span class="variable">&amp;lt</span>;/p<span class="variable">&amp;gt</span>;<span class="variable">&amp;lt</span>;script<span class="variable">&amp;gt</span>;document.write()<span class="variable">&amp;lt</span>;/script<span class="variable">&amp;gt</span>;<span class="variable">&amp;lt</span>;p<span class="variable">&amp;gt</span>;.<span class="params">&lt;/p&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>参考：</p>
<ul>
<li><a href="//github.com/mde/ejs/blob/master/docs/syntax.md">官方文档</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ejs </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[虚拟按键手机页面高度自适应]]></title>
      <url>http://lijundong.com/huawei-phone-browser-height-self-adapt/</url>
      <content type="html"><![CDATA[<p>华为系手机、谷歌亲儿子 Nexus 系列等配备的都是虚拟按键，虚拟按键唤出与隐藏会导致页面的高度变化，如果没有对内容高度进行适应，会出现页面内容被覆盖，或者页面空出一段留白，实验室用华为的同学挺多的，包括我，所以难免在调试页面的时候遇到这个问题，做个笔记先，欢迎补充指正。<br><a id="more"></a></p>
<p>其实原理很简单，要达到的效果是底部 Tab 随着虚拟按键的变化而适应。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tab</span>&#123;</span><br><span class="line">    <span class="attribute">position</span>: fixed;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 自适应 </tag>
            
            <tag> 移动开发 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Input 的 accept 属性以及 MIME 参考]]></title>
      <url>http://lijundong.com/accept-in-input-and-mime-intro/</url>
      <content type="html"><![CDATA[<p>最近在做上传文件模块时，对 input 的 accept 属性做了些了解，以及与其关联的 MIME，之前也了解过，只是没做理解，导致如今再看到竟然没有半点印象，其实就是个因特网标准，这次做下笔记，欢迎指正。</p>
<a id="more"></a>
<h3 id="关于-accept"><a href="#关于-accept" class="headerlink" title="关于 accept"></a>关于 accept</h3><p>当 <code>input</code> 的 <code>type</code> 定义为 <code>file</code> 时，<code>accpet</code> 属性给客户端传递一种信息，哪些文件格式是可被接受的，在进行文件选择时，客户端只会匹配可接受格式的文件供选择，给用户提供了很大的方便。</p>
<p>用法：<br><code>&lt;input accept=&quot;value&quot;&gt;</code><br>value 是逗号隔开的 MIME 类型列表。</p>
<p>举例：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>匹配所有图片格式、视频格式、音频文件、文本格式<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">"image/*,video/*,audio/*,text/*"</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>匹配 xls xlsx 两种表格文件<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"file"</span> <span class="attr">accept</span>=<span class="string">".xlsx,.xls"</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h3 id="关于-MIME"><a href="#关于-MIME" class="headerlink" title="关于 MIME"></a>关于 MIME</h3><p>MIME 是什么？一句话描述，MIME (Multipurpose Internet Mail Extensions) 是描述消息内容类型的因特网标准。</p>
<p>没了？没了。</p>
<p>类型包括 application(pdf\doc\xls\ppt……)、image(jpg\png\gif……)、audio(mp3\mid\wav\bom……)、video(avi\movie\mpg……)、text(css\html\c\h……)、x-world(flr\wrl\wrz……)等</p>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> mime </tag>
            
            <tag> input </tag>
            
            <tag> accept </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用速查表集合]]></title>
      <url>http://lijundong.com/sheets-collections/</url>
      <content type="html"><![CDATA[<blockquote class="blockquote-center">这个资源合集包含的是我用着不错的常用速查表<br>方便有需要的同学查找<br>持续更新<br>以后可能会有更多的集合<br>Chrome 扩展？<br>开发小工具？<br>你说呢？</blockquote>

<a id="more"></a>
<h3 id="Linux-命令速查"><a href="#Linux-命令速查" class="headerlink" title="Linux 命令速查"></a>Linux 命令速查</h3><p><img src="//source.lijundong.com/16-8-23/3279812.jpg" alt=""><br><a href="//i.linuxtoy.org/files/pdf/fwunixref.pdf">PDF 下载</a></p>
<h3 id="Vim-命令速查"><a href="#Vim-命令速查" class="headerlink" title="Vim 命令速查"></a>Vim 命令速查</h3><p><img src="//source.lijundong.com/16-8-23/89959675.jpg" alt=""><br><a href="//jrmiii.com/attachments/Vim.pdf">PDF 下载</a></p>
<h3 id="Git-命令速查"><a href="#Git-命令速查" class="headerlink" title="Git 命令速查"></a>Git 命令速查</h3><p><img src="//source.lijundong.com/16-8-23/44995875.jpg" alt=""><br><a href="//www.git-tower.com/blog/git-cheat-sheet-cn">PDF 下载</a></p>
<h3 id="正则速查"><a href="#正则速查" class="headerlink" title="正则速查"></a>正则速查</h3><p><img src="//source.lijundong.com/16-8-23/94278931.jpg" alt=""><br><a href="//plcdn.qiniudn.com/wp-content/uploads/2011/12/regular-expressions-cheat-sheet-v2.pdf">PDF 下载</a></p>
<blockquote class="blockquote-center">欢迎补充！</blockquote>



]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> git </tag>
            
            <tag> linux </tag>
            
            <tag> vim </tag>
            
            <tag> 正则 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Node将Excel数据解析为Json]]></title>
      <url>http://lijundong.com/xlsx-to-json-by-json/</url>
      <content type="html"><![CDATA[<p>试想这样一种情况，一个不熟悉技术的人需要在网站中展示他存在 Excel 里的数据，数据量很大，人工操作很繁琐，且容易出错，如果要做到用户友好，程序的任务是读入 Excel，解析，以正确的格式存入数据库。<br>在 Java 环境下，可以用 <code>Apache POI</code> 来操作 office 全家桶的读写，我不熟悉Java，所以这篇文章就记录下用 NodeJS 解析 Excel(xlsx 格式)数据为Json格式。<br><a id="more"></a></p>
<h3 id="node-xlsx"><a href="#node-xlsx" class="headerlink" title="node-xlsx"></a>node-xlsx</h3><p>这篇文章是建立在 <code>node-xlsx</code> 的基础上的，你可以在 <a href="//github.com/mgcrea/node-xlsx">github</a> 以及 <a href="//www.npmjs.com/package/node-xlsx">npm</a> 获取到包。<br>用法如下：</p>
<h4 id="xlsx-gt-Json"><a href="#xlsx-gt-Json" class="headerlink" title="xlsx -&gt; Json"></a>xlsx -&gt; Json</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xlsx = <span class="built_in">require</span>(<span class="string">'node-xlsx'</span>).default; </span><br><span class="line"><span class="comment">//Or import xlsx from 'node-xlsx';</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Parse a buffer</span></span><br><span class="line"><span class="keyword">const</span> workSheetsFromBuffer = xlsx.parse(fs.readFileSync(<span class="string">`<span class="subst">$&#123;__dirname&#125;</span>/myFile.xlsx`</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">// Parse a file</span></span><br><span class="line"><span class="keyword">const</span> workSheetsFromFile = xlsx.parse(<span class="string">`<span class="subst">$&#123;__dirname&#125;</span>/myFile.xlsx`</span>);</span><br></pre></td></tr></table></figure>
<h4 id="Json-gt-xlsx"><a href="#Json-gt-xlsx" class="headerlink" title="Json -&gt; xlsx"></a>Json -&gt; xlsx</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> xlsx = <span class="built_in">require</span>(<span class="string">'node-xlsx'</span>).default;</span><br><span class="line"><span class="comment">// Or import xlsx from 'node-xlsx';</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> data = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">null</span>, <span class="string">'sheetjs'</span>], [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2014-02-19T14:30Z'</span>), <span class="string">'0.3'</span>], [<span class="string">'baz'</span>, <span class="literal">null</span>, <span class="string">'qux'</span>]];</span><br><span class="line"><span class="keyword">var</span> buffer = xlsx.build([&#123;name: <span class="string">"mySheetName"</span>, data: data&#125;]); <span class="comment">// Returns a buffer</span></span><br></pre></td></tr></table></figure>
<h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="Excel-转-Json"><a href="#Excel-转-Json" class="headerlink" title="Excel 转 Json"></a>Excel 转 Json</h4><figure class="highlight qml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">var</span> xlsx = <span class="built_in">require</span>(<span class="string">"node-xlsx"</span>); </span><br><span class="line"><span class="built_in">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>); </span><br><span class="line"><span class="built_in">var</span> <span class="built_in">list</span> = xlsx.parse(<span class="string">"demo.xlsx"</span>); </span><br><span class="line"><span class="built_in">console</span>.log(<span class="built_in">JSON</span>.stringify(<span class="built_in">list</span>)); </span><br><span class="line"><span class="comment">//console.log(list); </span></span><br><span class="line">writeFile(<span class="string">"xlsx2json.json"</span>,<span class="built_in">JSON</span>.stringify(<span class="built_in">list</span>)); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeFile</span>(<span class="params">fileName,data</span>) </span>&#123; </span><br><span class="line">  fs.writeFile(fileName,data,<span class="string">'utf-8'</span>,complete);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">complete</span>(<span class="params">err</span>) </span>&#123; </span><br><span class="line">      <span class="keyword">if</span>(!err) &#123; </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"文件生成成功"</span>); </span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>demo.xlsx 内容如下<br><img src="//source.lijundong.com/16-8-22/88488524.jpg" alt="demo.xlsx"><br>生成的 Json 格式如下<br><img src="//source.lijundong.com/16-8-22/74481753.jpg" alt="xlsx2json"></p>
<h4 id="Json-转-Excel"><a href="#Json-转-Excel" class="headerlink" title="Json 转 Excel"></a>Json 转 Excel</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> xlsx = <span class="built_in">require</span>(<span class="string">'node-xlsx'</span>);</span><br><span class="line"><span class="keyword">var</span> fs = <span class="built_in">require</span>(<span class="string">'fs'</span>);</span><br><span class="line"><span class="keyword">const</span> data = [[<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>], [<span class="literal">true</span>, <span class="literal">false</span>, <span class="literal">null</span>, <span class="string">'sheetjs'</span>], [<span class="string">'foo'</span>, <span class="string">'bar'</span>, <span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">'2014-02-19T14:30Z'</span>), <span class="string">'0.3'</span>], [<span class="string">'baz'</span>, <span class="literal">null</span>, <span class="string">'qux'</span>]];</span><br><span class="line"><span class="keyword">var</span> buffer = xlsx.build([&#123;name:<span class="string">"mySheetName"</span>, data: data&#125;]); <span class="comment">// Returns a buffer</span></span><br><span class="line">writeFile(<span class="string">"all.xlsx"</span>,buffer); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">writeFile</span>(<span class="params">fileName,data</span>) </span>&#123; </span><br><span class="line">  fs.writeFile(fileName,data,<span class="string">'utf-8'</span>,complete);</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">complete</span>(<span class="params">err</span>) </span>&#123; </span><br><span class="line">      <span class="keyword">if</span>(!err) &#123; </span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">"文件生成成功"</span>); </span><br><span class="line">      &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>demo.json 格式如下<br><img src="//source.lijundong.com/16-8-22/31515580.jpg" alt="xlsx2json"><br>json2xlsx.xlsx 内容如下<br><img src="//source.lijundong.com/16-8-22/44196162.jpg" alt="demo.xlsx"></p>
<p>通过上面的例子可以看出，Excel 的一行对应着一条 Json 数据，然而这种方式并不适合数据库与 Excel 之间的转换，所以需要对 Json 内容作转换。</p>
]]></content>
      
        <categories>
            
            <category> node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> node </tag>
            
            <tag> excel </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Html仿手机时钟选项框]]></title>
      <url>http://lijundong.com/html-make-clock-select/</url>
      <content type="html"><![CDATA[<p>手机里的闹钟设置时会让选择具体在星期几工作，选择的方式因机而异，今天要聊的是手机提供七个点，点亮你需要的时间。如果用前端的方法实现，怎么做简洁，如何对复选框变形，看了很多别人的demo，都没有达到我的预期，我需要将选项内容作为点选的按钮，这就需要让两者“合二为一”，内容的样式随着<code>checkbox</code>的状态改变，这里应该有思路了。<br><a id="more"></a></p>
<h3 id="页面框架"><a href="#页面框架" class="headerlink" title="页面框架"></a>页面框架</h3><p>对列表稍加修改，li元素横向排列，列表中加入<code>checkbox</code>以及<code>label</code>，出来的效果就是最常见的复选框。</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"day-select"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"sun"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sun"</span>&gt;</span>日<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"mon"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"mon"</span>&gt;</span>一<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"tue"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"tue"</span>&gt;</span>二<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"wed"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"wed"</span>&gt;</span>三<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"thu"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"thu"</span>&gt;</span>四<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"fri"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"fri"</span>&gt;</span>五<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>    </span><br><span class="line">        <span class="tag">&lt;<span class="name">input</span> <span class="attr">name</span>=<span class="string">"box"</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">id</span>=<span class="string">"sat"</span>  /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">"sat"</span>&gt;</span>六<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">html</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">16px</span>;</span><br><span class="line">    <span class="attribute">font-family</span>: 微软雅黑;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.day-select</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">1rem</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">4rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.day-select</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">2rem</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>出来的效果<br><img src="//source.lijundong.com/16-8-5/78915169.jpg" alt=""></p>
<h3 id="复选框整容"><a href="#复选框整容" class="headerlink" title="复选框整容"></a>复选框整容</h3><h4 id="消除checkbox默认样式"><a href="#消除checkbox默认样式" class="headerlink" title="消除checkbox默认样式"></a>消除<code>checkbox</code>默认样式</h4><p><code>checkbox</code>在浏览器的默认样式对我们会造成干扰，所以首先就是去除<code>checkbox</code>默认样式。<br>这里需要用到CSS3中的appearance属性，通过赋值<code>none</code>去除默认样式。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="checkbox"]</span>&#123;</span><br><span class="line">    <span class="attribute">-webkit-appearance</span>: none; </span><br><span class="line">    <span class="attribute">-moz-appearance</span>: none;</span><br><span class="line">    <span class="attribute">appearance</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>这样看起来就清爽很多的嘛<br><img src="//source.lijundong.com/16-8-5/41302294.jpg" alt=""></p>
<h4 id="添加按钮样式"><a href="#添加按钮样式" class="headerlink" title="添加按钮样式"></a>添加按钮样式</h4><p>在<code>checkbox</code>状态改变时，改变<code>label</code>样式，这里我在<code>checkbox</code>状态为<code>checked</code>时给<code>label</code>外加一圆边，没选定时，不设样式。<br>这里需要用到CSS选择器的兄弟节点，<code>input</code>和<code>label</code>是相邻的兄弟元素，用<code>+</code>连接。<br><strong>注：因为字体长宽不等，我加了padding进行调整，使出来的圆效果更好些。</strong><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="checkbox"]</span><span class="selector-pseudo">:checked</span> + <span class="selector-tag">label</span> ,</span><br><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[type="checkbox"]</span><span class="selector-pseudo">:active</span> + <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#EEE</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#2AC9DE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>很好，现在预想的效果已经出来了<br><img src="//source.lijundong.com/16-8-5/18725183.jpg" alt=""><br>只不过因为<code>padding</code>变化，元素之间会挤压，可以在元素未选定时将边框画好，颜色设为背景色，选定时只需要更改边框颜色，如下。<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span>[type=<span class="string">"checkbox"</span>] + <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">3px</span> solid <span class="number">#EEE</span>;</span><br><span class="line">    <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">5px</span> <span class="number">10px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">input</span>[type=<span class="string">"checkbox"</span>]:checked + <span class="selector-tag">label</span> ,</span><br><span class="line"><span class="selector-tag">input</span>[type=<span class="string">"checkbox"</span>]:active + <span class="selector-tag">label</span> &#123;</span><br><span class="line">    <span class="attribute">border-color</span>: <span class="number">#2AC9DE</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>完工！<br><img src="//source.lijundong.com/16-8-5/54383466.jpg" alt=""></p>
<h3 id="详情显示"><a href="#详情显示" class="headerlink" title="详情显示"></a>详情显示</h3><p>上一幅图中，点选日期，页面会出现相应的日期，这个也很简单，预设一个日期详情列表，并且设置为不可见，jquery监听所有的<code>checkbox</code>状态，给相应的详情设置为可见，完工。<br>html<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"day-info"</span> <span class="attr">id</span>=<span class="string">"dayInfo"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周日<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周一<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周二<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周三<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周四<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周五<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>周六<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>css<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.day-info</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: .<span class="number">8rem</span>;</span><br><span class="line">    <span class="attribute">margin-left</span>: <span class="number">8rem</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.day-info</span> <span class="selector-tag">li</span>&#123;</span><br><span class="line">    <span class="attribute">list-style</span>: none;</span><br><span class="line">    <span class="attribute">float</span>: left;</span><br><span class="line">    <span class="attribute">margin-right</span>: <span class="number">2rem</span>;</span><br><span class="line">    <span class="attribute">visibility</span>:hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>javascript<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">'input[name^="box"]'</span>).click(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">var</span> checklist=<span class="built_in">document</span>.getElementsByName(<span class="string">"box"</span>);</span><br><span class="line">    <span class="built_in">console</span>.log(checklist);</span><br><span class="line">    <span class="keyword">var</span> infolist=<span class="built_in">document</span>.getElementById(<span class="string">"dayInfo"</span>).children;</span><br><span class="line">    <span class="built_in">console</span>.log(infolist);</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> i=<span class="number">0</span>;i&lt;checklist.length;i++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(checklist[i].checked==<span class="literal">true</span>)&#123;</span><br><span class="line">            infolist[i].style.visibility=<span class="string">"visible"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            infolist[i].style.visibility=<span class="string">"hidden"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>参考:</p>
<ul>
<li><a href="//www.w3cplus.com/css3/css-secrets/custom-checkboxes.html">CSS秘密花园： 自定义复选框</a> </li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信公号Node开发「贰」之express]]></title>
      <url>http://lijundong.com/wechat-node-2th-express/</url>
      <content type="html"><![CDATA[<p>笔记下关于express项目文件结构与对应的功能，以及初始化的app.js的结构注释。<br><a id="more"></a></p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">-——bin   //存放www文件，包含着项目启动命令</span><br><span class="line"></span>|<span class="string">-——node_modules   //存放npm安装到本地的依赖项，依赖包声明在package.json</span><br><span class="line"></span>|<span class="string">-——public         //存放静态资源，图片、js文件、样式文件</span><br><span class="line"></span>|<span class="string">    </span>|<span class="string">-——images</span><br><span class="line"></span>|<span class="string">    </span>|<span class="string">-——javascripts</span><br><span class="line"></span>|<span class="string">    </span>|<span class="string">-——stylesheets</span><br><span class="line"></span>|<span class="string">-——routes //存放路由文件</span><br><span class="line"></span>|<span class="string">-——views  //模板文件，默认使用jade，如果用ejs，则用`express -e &lt;项目名&gt;`初始化</span><br><span class="line"></span>|<span class="string">-——app.js //入口文件</span><br><span class="line"></span>|<span class="string">-——package.json //npm依赖配置文件，`npm install`命令安装</span></span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> node </tag>
            
            <tag> 微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Coding page与Github page博客部署及域名绑定]]></title>
      <url>http://lijundong.com/coding-page-github-page-deploy-dns/</url>
      <content type="html"><![CDATA[<p>从前天开始，博客访问不了，以为是Github又抽风了，但周围托管在Github上的博客都正常访问，遂把代理开全局，竟然正常访问，有种不祥的预感，域名不会别墙了吧……</p>
<p>2016/8/28更新</p>
<p>域名被屏蔽，可能是没有备案的原因……，最近正在办备案。</p>
<p>哎！好好说话，你别打我啊，WOC，别打脸……</p>
<a id="more"></a>
<p>去<a href="//www.checkgfw.com/">checkgfw</a>查了下，就出现了这篇文章的题图，不管测的权威性多大，反正挺郁闷的。唉，苦闷！<br>之前一直用的DNSPod做DNS解析，前端时间转到了阿里云，域名是万网买的，心想自家孩子速度可能快些，谁曾想没过多久就出了这档子事(虽然没有多大关联性)，非常不爽，又转回DNSPod，添加解析后等待是最痛苦的，最痛苦的是等来的是继续无法连接，折腾了一晚上还是选择把博客放在国内，在Coding上创建项目，添加公钥，上传项目，开启Page服务，部署，熟悉的界面再次出现异常亲切，好了，现在只要添加一条DNS解析就齐活。</p>
<h3 id="Coding-Page部署博客"><a href="#Coding-Page部署博客" class="headerlink" title="Coding Page部署博客"></a>Coding Page部署博客</h3><p>无论是在Github还是在Coding上部署博客，过程都类似(<strong>注:以下统一用yourname代表项目名</strong>)</p>
<ul>
<li>注册Coding/Github </li>
<li>建立项目，项目名与用户名相同</li>
<li>如果使用SSH，请将本地公钥添加到Coding/Github(可使用<code>ssh -T git@github.com</code>检测是否添加成功)</li>
<li><p>本地建立Hexo项目(hexo init)，在根目录下配置文件_config.yml中配置远程仓库地址以及分支(注意属性与值之间的空格)，下面是我的配置(我同时推到Github和Coding上，同时部署，这样做之前需要在项目的source目录下添加<code>staticfile</code>文件)</p>
<figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git</span><br><span class="line">  <span class="attribute">repo</span>: </span><br><span class="line">      <span class="attribute">coding</span>: git<span class="variable">@git</span>.coding.<span class="attribute">net</span>:jundong/jundong.git,master</span><br><span class="line">      <span class="attribute">github</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:lijundong/lijundong.github.io.git,master</span><br></pre></td></tr></table></figure>
</li>
<li><p><code>hexo g -d</code>生成博客并推到远程仓库，稍等片刻，访问<code>yourname.coding.me</code>/<code>yourname.github.io</code>，可以看到部署成功</p>
</li>
<li>博客部署完，绑定自定义域名，通过DNS解析，将自定义域名指向<code>yourname.coding.me</code>/<code>yourname.github.io</code>，区别在于添加CNAMe的方式，<ul>
<li>Github需要在项目根目录下添加<code>CNAME</code>文件，文件中加上需要绑定的域名如<code>lijundong.com</code></li>
<li>Coding绑定的方式是在项目的Pages服务下添加域名绑定</li>
</ul>
</li>
<li>添加DNS解析，这里两者仍有区别<ul>
<li>Github绑定<code>yourname.github.io</code>，访问<code>yourname.github.io</code>会定向到自定义域名</li>
<li>Coding绑定<code>pages.coding.me</code>(<strong>此处踩过坑</strong>)，访问<code>yourname.coding.me</code>不会重定向<br><img src="//source.lijundong.com/16-7-30/77087768.jpg" alt=""></li>
</ul>
</li>
<li><strong>更换DNS解析服务器时，别忘了在域名提供商出更改DNS服务器(此处踩过坑)</strong></li>
</ul>
<hr>
<p>那么，我的域名到底被墙了没？</p>
<p>2016/8/28更新</p>
<p>域名被屏蔽，可能是没有备案的原因……，最近正在办备案。</p>
<p>哎！好好说话，你别打我啊，WOC，别打脸……</p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> dns </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[表单提交]]></title>
      <url>http://lijundong.com/jquery-prevent-form-sbumit/</url>
      <content type="html"><![CDATA[<p>用户在填写表单时，常出现遗漏或者不符合规范的填写，解决这些问题需要在 <code>input</code> 处添加筛选条件，例如 email 或者password，或者是在提交前进行信息确认，如不符合提交条件，应该组织表单的提交，今天正好遇到了这个问题，借机会做一个关于表单的笔记。<br><a id="more"></a></p>
<h3 id="阻止表单提交"><a href="#阻止表单提交" class="headerlink" title="阻止表单提交"></a>阻止表单提交</h3><p>在表单提交之前，对信息进行校验，判断是否符合提交条件，如果不符合，及时阻止表单的默认提交行为。<br>表单代码如下:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">form</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"usrname"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span>=<span class="string">"passwd"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"submit"</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h4 id="通过jQuery"><a href="#通过jQuery" class="headerlink" title="通过jQuery"></a>通过jQuery</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">"form"</span>).submit(<span class="function"><span class="keyword">function</span>(<span class="params">e</span>)</span>&#123;</span><br><span class="line">  <span class="keyword">if</span>( error )&#123;</span><br><span class="line">    e.preventDefault();</span><br><span class="line">    alert(<span class="string">"请检查表单"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 前端 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 表单 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信公号Node开发「壹」之操作MongoDB(上)]]></title>
      <url>http://lijundong.com/wechat-node-1th-MongoDB/</url>
      <content type="html"><![CDATA[<p>项目中用mongoose操作MongoDB，非关系型数据库MongoDB的结构以及语法与常用的关系型数据库相差很大，这里记录了MongoDB结构以及操作数据库的方法和一些增删改查实例。<br><a id="more"></a></p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><p>关于MongoDB的结构，官方文档给出了下面的参考</p>
<table>
<thead>
<tr>
<th>SQL</th>
<th>MongoDB</th>
</tr>
</thead>
<tbody>
<tr>
<td>database</td>
<td>database</td>
</tr>
<tr>
<td>table</td>
<td>collection</td>
</tr>
<tr>
<td>row</td>
<td>document or BSON document</td>
</tr>
<tr>
<td>column</td>
<td>field</td>
</tr>
<tr>
<td>index</td>
<td>index</td>
</tr>
<tr>
<td>primary key</td>
<td>primary key(默认自动设置为<code>_id</code>)</td>
</tr>
</tbody>
</table>
<p><strong>注：</strong><code>_id</code>是在插入一条新的document时，系统自动生成的一个由时间、主机名、PID(进程ID)、INC(自增计数器)组合转换而成的24位字符串。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><p>现MongoDB内容如下<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">-- info         //dbs</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- users    //collection</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- logs</span><br><span class="line"></span>|</span><br><span class="line">|<span class="string">-- test</span></span><br></pre></td></tr></table></figure></p>
<p>进入MongoDB操作界面，默认进入test数据库。<br>操作及数据库<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示所有数据库</span></span><br><span class="line">show dbs             </span><br><span class="line"><span class="comment">//显示操作数据库的帮助</span></span><br><span class="line"><span class="keyword">db</span>.<span class="keyword">help</span>()            </span><br><span class="line"><span class="comment">//进入info数据库，如果没有则创建一个info数据库，所以这也是创建命令</span></span><br><span class="line"><span class="keyword">use</span> infos</span><br><span class="line"><span class="comment">//显示当前所在的数据库，默认是test数据库           </span></span><br><span class="line"><span class="keyword">db</span>       </span><br><span class="line"><span class="comment">//删除当前数据库的所有记录，如果没有选定，默认删除test</span></span><br><span class="line"><span class="keyword">db</span>.dropDatabase()</span><br></pre></td></tr></table></figure></p>
<p>操作集合<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//显示当前数据库中所有集合</span></span><br><span class="line">show collections     </span><br><span class="line"></span><br><span class="line"><span class="comment">//创建新集合records</span></span><br><span class="line">db<span class="selector-class">.records</span><span class="selector-class">.insert</span>(&#123;name:<span class="string">"leeon"</span>,<span class="selector-tag">time</span>:new Date(),age:<span class="number">12</span>&#125;)</span><br><span class="line">db.createCollection(<span class="string">"records"</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入记录</span></span><br><span class="line">db<span class="selector-class">.records</span><span class="selector-class">.insert</span>(&#123;name:<span class="string">"pine"</span>,<span class="selector-tag">time</span>:new Date(),age:<span class="number">12</span>&#125;)</span><br><span class="line">db<span class="selector-class">.records</span><span class="selector-class">.save</span>(&#123;name:<span class="string">"pine"</span>,<span class="selector-tag">time</span>:new Date(),age:<span class="number">12</span>&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除集合records的所有记录</span></span><br><span class="line">db<span class="selector-class">.records</span><span class="selector-class">.remove</span>(&#123;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//更新，name为leeon的记录age更新为20</span></span><br><span class="line">db<span class="selector-class">.records</span><span class="selector-class">.update</span>(&#123;name:<span class="string">"leeon"</span>&#125;,&#123;<span class="variable">$set</span>:&#123;age:<span class="number">20</span>&#125;&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询所有记录</span></span><br><span class="line">db<span class="selector-class">.users</span><span class="selector-class">.find</span>()</span><br></pre></td></tr></table></figure></p>
<h3 id="常用操作符"><a href="#常用操作符" class="headerlink" title="常用操作符"></a>常用操作符</h3><p><strong>$ne</strong><br>语法：{field: {$ne: value} }<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查找users集合中，age!=20的记录</span></span><br><span class="line">db<span class="selector-class">.users</span><span class="selector-class">.find</span>(&#123;age:&#123;<span class="variable">$ne</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></p>
<p><strong>$and</strong><br>语法：{ $and: [{ <expression1> }, { <expression2> } , … , {<expressionn> } ]}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下name!=leeon&amp;&amp;age=20的记录</span></span><br><span class="line">db<span class="selector-class">.users</span><span class="selector-class">.find</span>(&#123;<span class="variable">$and</span>:[&#123;name:&#123;<span class="variable">$ne</span>:<span class="string">"leeon"</span>&#125;&#125;,&#123;age:<span class="number">20</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></expressionn></expression2></expression1></p>
<p><strong>$or</strong><br>语法：{ $or: [{ <expression1> }, { <expression2> }, … , { <expressionn> }]}<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下name!=leeon||age=20的记录</span></span><br><span class="line">db<span class="selector-class">.users</span><span class="selector-class">.find</span>(&#123;<span class="variable">$or</span>:[&#123;name:&#123;<span class="variable">$ne</span>:<span class="string">"leeon"</span>&#125;&#125;,&#123;age:<span class="number">20</span>&#125;]&#125;)</span><br></pre></td></tr></table></figure></expressionn></expression2></expression1></p>
<p><strong>$lt</strong><br>语法：{field: {$lt: value} }<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下age&lt;20的记录</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123;$<span class="attribute">lt</span>:&#123;<span class="attribute">age</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></p>
<p><strong>$lte</strong><br>语法：{ field: { $lte: value} }<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下age&lt;=20的记录</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123;$<span class="attribute">lte</span>:&#123;<span class="attribute">age</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></p>
<p><strong>$gt</strong><br>语法：{field: {$gt: value} }<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下age&gt;20的记录</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123;$<span class="attribute">gt</span>:&#123;<span class="attribute">age</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></p>
<p><strong>$gte</strong><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//查询users集合下age&gt;=20的记录</span></span><br><span class="line"><span class="selector-tag">db</span><span class="selector-class">.find</span>(&#123;$<span class="attribute">gte</span>:&#123;<span class="attribute">age</span>:<span class="number">20</span>&#125;&#125;)</span><br></pre></td></tr></table></figure></p>
<p><strong>注：save和insert的区别主要在于，新记录中指定的<code>_id</code>在集合中已存在，save会对原纪录进行覆盖，而insert不会操作，如果<code>_id</code>没有指定，则没有区别，都是进行插入</strong><br>例子:<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">db.users.find()</span><br><span class="line">//&#123;<span class="string">"_id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"leeon"</span>,<span class="string">"age"</span>:<span class="number">23</span>&#125;</span><br><span class="line">db.users.<span class="keyword">insert</span>(&#123;<span class="string">"_id"</span>:<span class="number">1</span>,name:<span class="string">"li"</span>,age:<span class="number">12</span>&#125;)</span><br><span class="line">//&#123;<span class="string">"_id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"leeon"</span>,<span class="string">"age"</span>:<span class="number">23</span>&#125;</span><br><span class="line">db.users.save(&#123;<span class="string">"_id"</span>:<span class="number">1</span>,name:<span class="string">"li"</span>,age:<span class="number">12</span>&#125;)</span><br><span class="line">//&#123;<span class="string">"_id"</span>:<span class="number">1</span>,<span class="string">"name"</span>:<span class="string">"li"</span>,<span class="string">"age"</span>:<span class="number">12</span>&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mongodb </tag>
            
            <tag> node </tag>
            
            <tag> 微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[BOM 之 location 对象]]></title>
      <url>http://lijundong.com/location-of-bom/</url>
      <content type="html"><![CDATA[<p>再次看到BOM的location，涉及到URL的组成，做个总结，记个笔记先。<br><a id="more"></a></p>
<h3 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h3><p>举个栗子：<br>现有一url：<code>//lijundong.com:80/blog?name=bom#function</code><br>对应属性如下：</p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
<th>例子</th>
</tr>
</thead>
<tbody>
<tr>
<td>hash</td>
<td>返回URL中的hash，即锚，若无，返回””</td>
<td>“#function”</td>
</tr>
<tr>
<td>host</td>
<td>返回服务器名与端口(若有)</td>
<td>“www.lijundong.com:80”</td>
</tr>
<tr>
<td>hostname</td>
<td>返回不带端口的服务器名</td>
<td>“www.lijundong.com”</td>
</tr>
<tr>
<td>href</td>
<td>返回当前页面的完整URL</td>
<td>“//lijundong.com:80/blog?name=bom#function”</td>
</tr>
<tr>
<td>pathname</td>
<td>返回URL中的目录或者文件名</td>
<td>“/blog”</td>
</tr>
<tr>
<td>port</td>
<td>返回端口号，若无，返回””</td>
<td>“80”</td>
</tr>
<tr>
<td>protocol</td>
<td>返回使用的协议，常用http或https</td>
<td>“https:”</td>
</tr>
<tr>
<td>search</td>
<td>返回页面的查询字符串</td>
<td>“?name=bom”</td>
</tr>
</tbody>
</table>
<h3 id="位置操作"><a href="#位置操作" class="headerlink" title="位置操作"></a>位置操作</h3><h4 id="assign"><a href="#assign" class="headerlink" title="assign()"></a>assign()</h4><p>通过传递新的URL打开页面<br><code>location.assign(&quot;//www.lijundong.com&quot;);</code><br>值得一提的是通过修改<code>location.href</code>或<code>window.location</code>为新的URL，也会调用<code>assign()</code>，所以下面的三种方式效果是完全相同的。<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">location.assign(<span class="string">"//www.lijundong.com"</span>);</span><br><span class="line"><span class="built_in">window</span>.location=<span class="string">"//www.lijundong.com"</span>;</span><br><span class="line">location.href=<span class="string">"//www.lijundong.com"</span>;</span><br></pre></td></tr></table></figure></p>
<p><code>location.href</code>可以被修改，同理可以通过修改上面介绍的其他属性改变URL<br><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//对"//lijundong.com:80/blog?name=bom#function"修改</span></span><br><span class="line">location.hash=<span class="string">"#dom"</span>;</span><br><span class="line">location.search=<span class="string">"?name=dom"</span>;</span><br><span class="line">loaction.hostname=<span class="string">"www.leeon.com"</span>;</span><br><span class="line">location.pathname=<span class="string">"/web"</span>;</span><br><span class="line">location.port=<span class="string">"8080"</span>;</span><br></pre></td></tr></table></figure></p>
<h4 id="replace"><a href="#replace" class="headerlink" title="replace()"></a>replace()</h4><p>通过上面的方式修改URL，浏览器的历史记录中会生成一条记录，用户可通过浏览器的back按钮回退，<code>replace()</code>方式可禁止这种情况。<br><code>location.replace(&quot;www.google.com&quot;);//用户回退不到www.lijundong.com</code></p>
<h4 id="reload"><a href="#reload" class="headerlink" title="reload()"></a>reload()</h4><p><code>reload()</code>可能是我们最熟悉的功能，重新加载，这个方法调用时是有参数的。</p>
<ul>
<li><code>location.reload();//可能从缓存加载</code><br>如果不传递参数，页面将会以最有效的方式加载，即页面从上次请求以来没有修改，页面会从浏览器缓存中重新加载</li>
<li><code>location.reload(true);//从服务器加载</code><br>传递参数true,强制页面从服务器加载</li>
</ul>
<p>以上。</p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> bom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[批量处理PPT图片]]></title>
      <url>http://lijundong.com/Batch%20Process-PPT-images/</url>
      <content type="html"><![CDATA[<blockquote>
<p>能自动化的事情绝不手动</p>
</blockquote>
<hr>
<h3 id="需求"><a href="#需求" class="headerlink" title="需求"></a>需求</h3><p>老大最近在看高数复习视频，想把配套的PPT打印出来，边看视频边做题，到打印店才发现PPT上的内容全是内容为白色背景透明的png，打印店老板不给打印黑色背景，毕竟太费墨，老大急了，鉴于文首的原则，把U盘丢给我“我不管，你给我解决！”<br><a id="more"></a></p>
<h3 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h3><ul>
<li>条件：<br>目前有两章PPT，后面可能还有几十章，每一章有都在30+页，每页内容只有一张内容为白色背景透明的图片。</li>
<li>目标：<br>将图片分离出来，白色内容转黑色，最后将所有内容集合在word文档中。</li>
<li>思路：<br>获取图片<br>图片转色<br>图片集成到word<br>嗯，就这么简单</li>
</ul>
<h3 id="手动自动化"><a href="#手动自动化" class="headerlink" title="手动自动化"></a>手动自动化</h3><h4 id="获取图片"><a href="#获取图片" class="headerlink" title="获取图片"></a>获取图片</h4><p>鉴于文首的原则，手动去挨个复制的都是傻伯夷，我不想当傻伯夷，必须得自动获取批量图片，而且还得编号，Google了一番，从PPT中批量导出原图的方法如下：</p>
<blockquote>
<p>PPT另存为.pptx，修改扩展名为.rar，解压，在/ppt/media中可以看见PPT中的所有图片<br><strong>注：如果扩名未显示，请在文件夹的查看选项中勾选文件扩展名，再更改扩展名。</strong></p>
</blockquote>
<p><img src="//source.lijundong.com/16-7-18/50475127.jpg" alt="获取到图片"></p>
<h4 id="图片转色"><a href="#图片转色" class="headerlink" title="图片转色"></a>图片转色</h4><p>图片取到了，转色我开始想先把图片保存成黑色背景的jpg，用美图秀秀一类的软件进行颜色翻转，但太费力，不符合文首的原则，还是得召唤出PS，只见广袤的01荒漠中，一位身披斗篷的剑客径直走来，“我的剑就是你的剑”，囧……</p>
<blockquote>
<p><strong>颜色反转：</strong>在PS中打开png，快捷键<code>Ctrl + i</code>,颜色反转，保存即可。效率很高，但是基于自动化原则，接下来的机械动作就交给PS吧。<br><strong>批量处理：</strong></p>
<ul>
<li>录制动作：先打开一个待处理文件，窗口&gt;动作&gt;创建新动作(Alt+F9)，开始录制动作，<code>Ctrl + i</code>，文件&gt;存储为Web所用格式&gt;格式选择JPEG&gt;完成&gt;结束录制。</li>
<li>批量处理：文件&gt;自动&gt;批处理,选择源目录(存放原图)以及目标目录(存放修改后的图片)，点击OK，PS开始挥舞着利剑一张张处理图片，不消片刻，处理完了。</li>
</ul>
</blockquote>
<p><img src="//source.lijundong.com/16-7-18/1807031.jpg" alt="图片处理结束"></p>
<h3 id="word集成"><a href="#word集成" class="headerlink" title="word集成"></a>word集成</h3><p>肯定不能一张张图粘进去啊，不愿做傻伯夷，试试下面这个方法，</p>
<blockquote>
<p>全选图片，指针拖动第一张，放进word，图片按顺序依次排好，嗯，完美！</p>
</blockquote>
<p>晚饭后，老大看到打印好的讲义，很满意，“小李啊，很好！来来来，我这里还有几十章讲义”，我“……”</p>
]]></content>
      
        <categories>
            
            <category> 问题解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ppt </tag>
            
            <tag> photoshop </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[再谈setTimeout与setInterval]]></title>
      <url>http://lijundong.com/talk-setTimeout-setInterval-2th/</url>
      <content type="html"><![CDATA[<p>刚接触javascript时对定时器进行过总结，但也只是停留在函数的用法。最近在看「JavaScript高级程序设计」，再次看到相关的内容，涉及到事件循环[Event Loop]，才对这两个方法的调用原理有清晰的认识，做个笔记先。<a id="more"></a></p>
<h3 id="任务队列"><a href="#任务队列" class="headerlink" title="任务队列"></a>任务队列</h3><p>JavaScript是单线程语言，一段时间内只能执行一段代码。为了控制要执行的代码，出现了JavaScript执行栈，这些任务按照他们被添加在执行栈中的顺序依次执行。前一个任务结束，才会执行下一个任务，如果没有执行完，那么下一个任务必须一直等着，但是这种方式在一些情况下会造成CPU闲置(例如IO设备慢，但是CPU却一直干等着)，造成资源浪费。于是将任务分为同步任务与异步任务，同步任务进入主线程，而异步任务则先进入任务队列进行等待。等待执行栈的所有任务执行完毕，任务队列中的任务才能进入主线程，排队执行。setTimeout()与setInterval()则是属于异步任务，需要先进入任务队列。</p>
<h3 id="定时器执行"><a href="#定时器执行" class="headerlink" title="定时器执行"></a>定时器执行</h3><p>setTimeout()与setInterval()调用的本质都是相同的，区别在于setTimeout()只调用一次，而setInterval()是按照指定的时间重复调用，两个方法在被调用之后会返回一个ID，这个ID是计划执行代码的唯一标识符，可以用来取消调用。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="number">1</span>);</span><br><span class="line">    &#125;,<span class="number">1000</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="number">2</span>);</span><br></pre></td></tr></table></figure></p>
<blockquote>
<p>代码运行的过程:<br>setTimeout()开始计时<br>console.log(2);进入主线程，因为没有阻塞，直接执行<br>执行结束，主线程空了，查询任务队列，因为时间还没到1000ms，任务队列为空，事件循环继续<br>达到1000ms，setTimeout()的回调函数被抛进任务队列，任务队列被再次查询时，console.log(1);进入主线程,执行。</p>
</blockquote>
<p>所以setInterval()和setTimeout()都无法保证绝对的”准时”，只会迟，不会早。</p>
<h3 id="特殊情况"><a href="#特殊情况" class="headerlink" title="特殊情况"></a>特殊情况</h3><p>setInterval()会重复调用，当上一次抛进任务队列的回调函数仍在排队，新添加的回调会被kill。</p>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在之前的学习中没能做到知其所以然，温故而知新，及时记下并且消化，共勉！</p>
<p>听说最近这个结尾很高冷。</p>
<p>以上。</p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> javascript </tag>
            
            <tag> 定时器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[自寻烦恼]]></title>
      <url>http://lijundong.com/troubleyourself/</url>
      <content type="html"><![CDATA[<p>正文之前，我在想，该把这篇文章分类在哪？当然，自寻烦恼本就是生活的一部分，或者于我而言生活本就是在自寻烦恼。<br><a id="more"></a><br>心情的状态只有两种，常态是傻大条的穷开心，非常态是长时间的压抑，外在表现为不说话。现在的状态是后种。开心的原因很简单，没有遇到问题或是遇到有解的问题，不说话的原因也简单，遇到自己无解的问题。<br>这两种状态一直伴随着我，从十三四岁的年纪，什么都不懂的年纪总是有很多烦恼，三天两头的压抑，那时的常态是压抑，紧张也是常态，作业没写完，紧张。考试成绩不理想，压抑。不被老师关注，压抑。常常将一些小事无限放大，吓唬自己，像一根快崩断的弦，最严重的一次是初二暑假，暑假作业一字没写，开学吓得都不敢去学校，开学测验那三天几乎没吃东西竟然还没倒，没崩断的原因大概是那时学会了写字发牢骚，压抑了就写出自己的感受，写完两页纸，通体清透，初三毕业时，已经写完了两大本。偶尔回家翻到那些笔记本，书壳都压不住满满的怨念，现在我希望少点，至少隔着屏幕不会闻到。<br>接着，初中毕了业，心理上对自己的认同感已经升到了高中生的状态，少了很多鸡毛蒜皮的小事，压抑的状态改成自习时看不下去书，压抑怎么办，写！写什么？我怎么知道，想写什么写什么，高中能清楚回忆的事情很少，唯一记得的是当时对于爱情思考了很多，毕业时，一天要发五条状态，并且乐此不疲，那样的状态一直延续到大一。<br>后来状态变成了五天发一条，接着是一个月一条，两个月……情绪的表达不再那么频繁，即便想表达，担心自己落入了矫情的行列，欲言又止。后来和朋友通电话，接着通电话的次数也越来越少了，于是彻底不说话了。<br>一直以来，我都是自寻烦恼，那些无解的问题并非外界的问题，只是我的问题，无解源于我十分在乎，我在意成绩，于是我每考不好就得压抑一下，我在意别人的眼光，于是我花心思去吸引别人的目光，暑假作业没写，那全是咎由自取，拖延症作祟，我曾认为没写作业这样羞耻的事情从此直接就烂在我的肚子里好了，但是现在看看，那又能算什么，我还是在六七年后自己把它写在了博客上。生活用六七年的时间教我厚着脸皮，TM到现在我都还只是学艺不精。现在想想，那些我在意的事基本都没有完整的结局，像极了流沙，太用力反而握不下。<br>那些因为十分在乎而用力过猛的事情，终究会变成无人在意的笑谈。<br>当然，我是在扯淡，我智商不够，处理不好手头的事情，却还自作聪明的一个人蒙头捣鼓，情商低也让身边的朋友越来越少。<br>我一直都是在自寻烦恼，我是个自私愚笨的人，烦恼却是，我不愿意承认这是事实。</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS源码安装NodeJS]]></title>
      <url>http://lijundong.com/centos-install-node/</url>
      <content type="html"><![CDATA[<p>之前在Linux服务器上安装程序都是用的包管理器，但由于这种方式处在鄙视链末端，常遭黄彪的诟病，遂记录一篇在 CentOS 上源码安装 NodeJS。<br><a id="more"></a></p>
<h3 id="获取源码"><a href="#获取源码" class="headerlink" title="获取源码"></a>获取源码</h3><p>在<a href="//nodejs.org/en/download/">NodeJS官网</a>下载源码，如果不需要体验最新特性，推荐下载LTS（long term support）版本，当前版本为4.5.0</p>
<p><code>wget //nodejs.org/dist/v4.5.0/node-v4.5.0.tar.gz</code></p>
<h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><p>解压源码包并进入解压后文件夹<br><code>tar xzvf node-v* &amp;&amp; cd node-v*</code></p>
<h3 id="编译-amp-amp-安装"><a href="#编译-amp-amp-安装" class="headerlink" title="编译 &amp;&amp; 安装"></a>编译 &amp;&amp; 安装</h3><p><code>./configure    //生成makefile</code></p>
<p><strong>注：</strong>如果系统没有安装gcc，需要通过以下命令安装gcc<br><code>sudo yum install gcc gcc-c++</code></p>
<p><code>make    //编译</code><br><code>sudo make install    //安装</code><br><code>node -v    //查看版本号</code><br><code>v4.5.0     //安装完成</code></p>
<h3 id="结语"><a href="#结语" class="headerlink" title="结语"></a>结语</h3><p>之前也想过使用源码安装，但是意识上认为解压、编译、安装过程会很复杂，然而真正操作一遍之后，完全不是那回事，我认为的困难只是我的大脑懒于接受新知识所找出来的借口，如果不突破这些障碍、懒惰，我会错过很多好玩的东西，光是想想都觉得可惜。</p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> node </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[微信公号Node开发「零」之项目建立]]></title>
      <url>http://lijundong.com/wechat-node-0th/</url>
      <content type="html"><![CDATA[<p>前段时间帮忙做一个微信后台开发，并且用了Node + Mongo，做一次实践，后面又添加了一些功能，整个项目开始变得系统，做了一段时间，对于整个系统的把握变得清晰，Node的使用也有了些思路，过程中遇到很多问题，虽然最后项目作废了，但是笔记还是要做的，这里就记录下开发中遇到的问题。<br><a id="more"></a></p>
<h3 id="NodeJS"><a href="#NodeJS" class="headerlink" title="NodeJS"></a>NodeJS</h3><p>首先需要理清楚，Node不是一门新的语言，使用的语法是JavaScript的核心语法，而Node只是JS代码运行环境。<br>参考下图(作者<a href="//twitter.com/BusyRich/status/494959181871316992">@BusyRich</a>)可以更清晰的理解Node的运行过程。</p>
<p><img src="//source.lijundong.com/16-7-22/12502005-Bt5ywJrIEAAKJQt.jpg-large" alt="Node运行"></p>
<p>运行过程如下:</p>
<blockquote>
<ul>
<li>V8引擎解析JavaScript脚本</li>
<li>解析后的代码调用Node API</li>
<li>libuv负责Node API的执行。它将不同的任务分配给不同的线程，形成一个Event Loop，以异步方式将任务的执行结果返回给V8引擎。</li>
<li>v8引擎再将结果返回给用户。</li>
</ul>
</blockquote>
<p>之前在<a href="//www.lijundong.com/2016/07/15/%E5%86%8D%E8%B0%88setTimeout%E4%B8%8EsetInterval/">再谈setTimeout与setInterval</a>中讨论过JavaScript中的Event Loop，Node中的Event Loop机制有机会可以看下。</p>
<p>所以对于前端开发者来说，上手NodeJS会比较容易些，运行方式也简单</p>
<ul>
<li>一是在终端下打开Node运行环境<code>node</code>命令，输入<code>console.log(&quot;hello node&quot;);</code>回车即可看到<code>hello node</code>，</li>
<li>二是新建example.js，内容为<code>console.log(&quot;hello node&quot;);</code>，在终端下<code>node example.js</code>命令执行JS文件，<code>hello node</code>再次出现。<br>熟悉python的同学是不是觉得与python的运行方式撞脸了。</li>
</ul>
<p>言归正传，回到项目上，这里用Express + MongoDB组合。</p>
<h3 id="Express"><a href="#Express" class="headerlink" title="Express"></a>Express</h3><p>Express默认使用Jade作为前端模板，但在建立项目时，提供选择ejs的参数，我习惯使用ejs，所以现在创建项目，wechatGame。<br><code>express -e wechatGame</code><br>项目创建完成后，该目录下出现<code>/wechatGame</code>目录，结构如下<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">|<span class="string">-- app.js          //主文件</span><br><span class="line"></span>|<span class="string">-- bin             //启动文件</span><br><span class="line"></span>|<span class="string">   `-- www</span><br><span class="line"></span>|<span class="string">-- package.json    //配置文件</span><br><span class="line"></span>|<span class="string">-- public          //公共文件</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- images</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- javascripts</span><br><span class="line"></span>|<span class="string">   `-- stylesheets</span><br><span class="line"></span>|<span class="string">       `-- style.css</span><br><span class="line"></span>|<span class="string">-- routes          //路由</span><br><span class="line"></span>|<span class="string">   </span>|<span class="string">-- index.js</span><br><span class="line"></span>|<span class="string">   `-- users.js</span><br><span class="line">`-- views           //页面</span><br><span class="line">    </span>|<span class="string">-- error.ejs</span><br><span class="line">    `-- index.ejs</span></span><br></pre></td></tr></table></figure></p>
<p>项目建好，接着安装所需的依赖，编辑package.json，除了已有的包，还需要添加操作MongoDB的包，我选用了mongoose，所以最终的packa.json内容如下<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">  <span class="string">"name"</span>: <span class="string">"wechatGame"</span>,</span><br><span class="line">  <span class="string">"version"</span>: <span class="string">"0.0.0"</span>,</span><br><span class="line">  <span class="string">"private"</span>: <span class="literal">true</span>,</span><br><span class="line">  <span class="string">"scripts"</span>: &#123;</span><br><span class="line">    <span class="string">"start"</span>: <span class="string">"node ./bin/www"</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="string">"dependencies"</span>: &#123;</span><br><span class="line">    <span class="string">"body-parser"</span>: <span class="string">"~1.15.1"</span>,</span><br><span class="line">    <span class="string">"cookie-parser"</span>: <span class="string">"~1.4.3"</span>,</span><br><span class="line">    <span class="string">"debug"</span>: <span class="string">"~2.2.0"</span>,</span><br><span class="line">    <span class="string">"ejs"</span>: <span class="string">"~2.4.1"</span>,</span><br><span class="line">    <span class="string">"express"</span>: <span class="string">"~4.13.4"</span>,</span><br><span class="line">    <span class="string">"morgan"</span>: <span class="string">"~1.7.0"</span>,</span><br><span class="line">    <span class="string">"serve-favicon"</span>: <span class="string">"~2.3.0"</span>,</span><br><span class="line">    <span class="string">"mongoose"</span>: <span class="string">"~4.4.15"</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在项目目录下安装<br><code>npm install</code><br>安装完成，启动项目，express4.0之后，启动方式由<code>node app.js</code>变成<code>npm start</code>。<br>我用的是4.13.4，所以<code>npm start</code>启动服务器</p>
<p>打开浏览器，访问<code>localhost:3000</code></p>
<p>hello express</p>
<hr>
<p>觉得不能把理解的东西讲得透彻，面面俱到，迟迟不敢下手，写了删，删了写，关于写作还有很多东西需要学习，行文思路清晰，文字表达精炼，这些都是需要不断的写来锻炼的。<br>Anyway,done is better than perfect!</p>
<p>参考：</p>
<ul>
<li><p><a href="//www.ruanyifeng.com/blog/2014/10/event-loop.html">JavaScript 运行机制详解：再谈Event Loop</a></p>
</li>
<li></li>
</ul>
]]></content>
      
        <categories>
            
            <category> node </category>
            
        </categories>
        
        
        <tags>
            
            <tag> node </tag>
            
            <tag> 微信 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[node.js 中 __dirname 与 ./ 的区别]]></title>
      <url>http://lijundong.com/node-js-dirname-difference/</url>
      <content type="html"><![CDATA[<p>‘./‘指向的目录是执行脚本时所在的当前目录，’__dirname’指向的目录是执行的脚本所保存的目录。<br><a id="more"></a><br>举个例子：<br>现在我的文件目录结构是<br><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/dir1</span><br><span class="line">    /dir2</span><br><span class="line">        <span class="built_in">path</span>.js</span><br></pre></td></tr></table></figure></p>
<p>path.js的内容是<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> path=<span class="built_in">require</span>(<span class="string">"path"</span>);</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" . ="</span>+path.resolve(<span class="string">"."</span>));</span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">" __dirname ="</span>+path.resolve(__dirname));</span><br></pre></td></tr></table></figure></p>
<p>在<code>/dir2</code>目录下运行<br><img src="//source.lijundong.com/16-6-18/88967313.jpg" alt=""></p>
<p>在<code>/dir1</code>目录下运行<br><img src="//source.lijundong.com/16-6-18/15613612.jpg" alt=""></p>
<p>参考：</p>
<ul>
<li><a href="//stackoverflow.com/questions/8131344/what-is-the-difference-between-dirname-and-in-node-js">What is the difference between __dirname and ./ in node.js(stackoverflow)</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> node </tag>
            
            <tag> path </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Tmux常用命令及快捷键]]></title>
      <url>http://lijundong.com/Tmux-common-comands-shortcuts/</url>
      <content type="html"><![CDATA[<p>用SSH远程登陆了服务器，起一个Node服务器，关闭了Putty窗口，Node服务也被关了，这还怎么愉快的玩耍，Google一下，晓得了窗口管理器的存在，可以通过Screen或者Tmux新建多个Session进行管理后台程序，Screen用了两天，Tmux用了半天，决定用Tmux，这里汇了一些常用的命令以及快捷键，方便查用。<br><a id="more"></a><br>这篇文章只是总结Tmux命令，不是教程，如果你想系统的学习下Tmux，推荐<a href="//www.kancloud.cn/kancloud/tmux/62459">《tmux: Productive Mouse-Free Development》(中文)</a>。</p>
<hr>
<h3 id="tmux命令"><a href="#tmux命令" class="headerlink" title="tmux命令"></a>tmux命令</h3><table>
<thead>
<tr>
<th>命令</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>tmux</code></td>
<td>创建session</td>
</tr>
<tr>
<td><code>tmux ls</code></td>
<td>列举所有session</td>
</tr>
<tr>
<td><code>tmux new -s session_name</code></td>
<td>创建一个名为session_name的session</td>
</tr>
<tr>
<td><code>tmux a -t session_name</code></td>
<td>重新连接分离的session</td>
</tr>
<tr>
<td><code>tmux kill-session -t session_name</code></td>
<td>创建session</td>
</tr>
</tbody>
</table>
<p>杀掉session还可以用<code>exit</code>，exit可以用在任何地方进行退出，用tmux新建了一个session，如果没有用exit退出，会一直存在后台。</p>
<h3 id="快捷键"><a href="#快捷键" class="headerlink" title="快捷键"></a>快捷键</h3><blockquote>
<p><strong>约定：</strong></p>
<ul>
<li>CTRL- b 表示“同时按下 CTRL 键和 b 键”。</li>
<li>CTRL- R 表示“同时按下 CTRL 键和 R 键（大写 R，你可能需要同时按下 SHIFT 键和 r 键，我不会在这些按键中特别说明需要按下 SHIFT 键）”。</li>
<li>CTRL- b d 表示“同时按下 CTRL 键和 b 键，<strong>然后松开它们</strong>，然后再按下 d 键”。</li>
<li>使用命令前缀，<strong>CTRL- b d 可以表示为 PREFIX d</strong>。</li>
</ul>
</blockquote>
<table>
<thead>
<tr>
<th>session快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>PREFIX k</code></td>
<td>杀掉session</td>
</tr>
<tr>
<td><code>PREFIX d</code></td>
<td>从一个session中分离，让其后台运行</td>
</tr>
<tr>
<td><code>PREFIX :</code></td>
<td>进入命令模式</td>
</tr>
<tr>
<td><code>PREFIX ?</code></td>
<td>获取快捷键列表</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>window快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>PREFIX c</code></td>
<td>在当前session中新建window</td>
</tr>
<tr>
<td><code>PREFIX &amp;</code></td>
<td>删除当前window(删除前确认)</td>
</tr>
<tr>
<td><code>PREFIX w</code></td>
<td>显示当前session中所有window的可选列表</td>
</tr>
<tr>
<td><code>PREFIX n</code></td>
<td>切换到下一个window</td>
</tr>
<tr>
<td><code>PREFIX p</code></td>
<td>切换到前一个window</td>
</tr>
<tr>
<td><code>PREFIX 0...9</code></td>
<td>根据窗口的编号选择窗口</td>
</tr>
<tr>
<td><code>PREFIX ,</code></td>
<td>重命名window</td>
</tr>
<tr>
<td><code>PREFIX f</code></td>
<td>通过window名在当前session中查找window</td>
</tr>
<tr>
<td><code>PREFIX l</code></td>
<td>在相邻window间切换</td>
</tr>
</tbody>
</table>
<table>
<thead>
<tr>
<th>pane快捷键</th>
<th>功能</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>PREFIX %</code></td>
<td>垂直二分当前窗口，创建pane</td>
</tr>
<tr>
<td><code>PREFIX &quot;</code></td>
<td>水平二分当前窗口，创建pane</td>
</tr>
<tr>
<td><code>PREFIX o</code></td>
<td>按顺序在当前窗口的pane之间切换</td>
</tr>
<tr>
<td><code>PREFIX ←↑↓→</code></td>
<td>上下左右选择pane</td>
</tr>
<tr>
<td><code>PREFIX x</code></td>
<td>关闭当前pane(关闭前确认)</td>
</tr>
<tr>
<td><code>PREFIX q</code></td>
<td>短暂地显示每个面板的编号</td>
</tr>
<tr>
<td><code>PREFIX {</code></td>
<td>将pane的序列向前提(循环) </td>
</tr>
<tr>
<td><code>PREFIX }</code></td>
<td>将pane的序列向后提(循环) </td>
</tr>
<tr>
<td><code>PREFIX 空格</code></td>
<td>更换当前窗口pane的排版 </td>
</tr>
<tr>
<td><code>PREFIX t</code></td>
<td>在pane中显示时间 </td>
</tr>
<tr>
<td><code>PREFIX :join-pane -t windowname</code></td>
<td>将pane合并到制定window</td>
</tr>
<tr>
<td><code>PREFIX !</code></td>
<td>将pane移至window</td>
</tr>
</tbody>
</table>
<p>参考:</p>
<ul>
<li><a href="//baiqiuyi.com/linux/tmux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html">tmux常用命令</a></li>
<li><a href="//www.kancloud.cn/kancloud/tmux">tmux: Productive Mouse-Free Development 中文版</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> putty </tag>
            
            <tag> tmux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CentOS安装MongoDB3.2X]]></title>
      <url>http://lijundong.com/Centos-Redhat-Fedora-install-MongoDB3-2X/</url>
      <content type="html"><![CDATA[<p>CentOS 7(64位)上使用yum安装MongoDB。</p>
<hr>
<a id="more"></a>
<h3 id="添加MongoDB的yum库"><a href="#添加MongoDB的yum库" class="headerlink" title="添加MongoDB的yum库"></a>添加MongoDB的yum库</h3><p>在<code>/etc/yum.repos.d/</code>目录下新建<code>mongodb.repo</code><br><code>vi /etc/yum.repos.d/mongodb.repo</code><br>内容为<br><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[MongoDB]</span></span><br><span class="line"><span class="attr">name</span>=MongoDB Repository</span><br><span class="line"><span class="attr">baseurl</span>=//repo.mongodb.org/yum/redhat/<span class="variable">$releasever</span>/mongodb-org/<span class="number">3.2</span>/x<span class="number">86_64</span>/</span><br><span class="line"><span class="attr">gpgcheck</span>=<span class="number">0</span></span><br><span class="line"><span class="attr">enabled</span>=<span class="number">1</span></span><br></pre></td></tr></table></figure></p>
<h3 id="安装MongoDB"><a href="#安装MongoDB" class="headerlink" title="安装MongoDB"></a>安装MongoDB</h3><p>安装命令<br><code># yum install mongodb-org</code></p>
<h3 id="启动MongoDB"><a href="#启动MongoDB" class="headerlink" title="启动MongoDB"></a>启动MongoDB</h3><p>使用mongodb-org-server提供的初始化脚本启动服务<br><code># /etc/init.d/mongod restart</code><br>设置开机启动MongoDB<br><code># chkconfig mongod on</code></p>
<h3 id="开始使用"><a href="#开始使用" class="headerlink" title="开始使用"></a>开始使用</h3><p>使用<code>mongo</code>命令进入命令行模式，可以放肆的玩耍了<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">test</span>@<span class="keyword">test</span>~]# mongo</span><br><span class="line">&gt;<span class="keyword">use</span> game</span><br><span class="line">&gt;<span class="keyword">db</span>.gameone.<span class="keyword">save</span>(&#123;name:<span class="string">"hello"</span>&#125;)</span><br><span class="line">&gt;<span class="keyword">db</span>.gameone.find()</span><br><span class="line">     &#123; <span class="string">"_id"</span> : ObjectId(<span class="string">"54fc2a4c71b56443ced99ba2"</span>), <span class="string">"name"</span> : <span class="string">"hello"</span> &#125;</span><br></pre></td></tr></table></figure></p>
<hr>
<h3 id="启动警告（2016-8-21更新）"><a href="#启动警告（2016-8-21更新）" class="headerlink" title="启动警告（2016.8.21更新）"></a>启动警告（2016.8.21更新）</h3><p>之前并没有出现这样的警告,这次在阿里云上安装之后，启动 <code>mongo</code> 之后出现下面的警告，这里贴上解决方案，希望有用，当然，最好的情况是你没有遇到这样的问题。</p>
<p><strong>警告一：</strong><br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2016</span><span class="number">-08</span><span class="number">-16</span><span class="string">T21:</span><span class="number">01</span>:<span class="number">15.526</span><span class="number">-0800</span> I CONTROL  [initandlisten] ** <span class="string">WARNING:</span> <span class="regexp">/sys/</span>kernel<span class="regexp">/mm/</span>transparent_hugepage/defrag is <span class="string">'always'</span>.</span><br><span class="line"><span class="number">2015</span><span class="number">-08</span><span class="number">-16</span><span class="string">T21:</span><span class="number">01</span>:<span class="number">15.526</span><span class="number">-0800</span> I CONTROL  [initandlisten] **        We suggest setting it to <span class="string">'never'</span></span><br></pre></td></tr></table></figure></p>
<p>解决方案：<br>编辑 <code>/etc/init.d/mongod</code> 文件，在 <code>echo -n $&quot;Starting mongod: &quot;</code> 前加入下面代码<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="_">-f</span> /sys/kernel/mm/transparent_hugepage/enabled; <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/enabled</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> <span class="_">-f</span> /sys/kernel/mm/transparent_hugepage/defrag; <span class="keyword">then</span></span><br><span class="line">   <span class="built_in">echo</span> never &gt; /sys/kernel/mm/transparent_hugepage/defrag</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure></p>
<p>重启 mongo 服务即可</p>
<p><strong>警告二：</strong><br><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">** WARNING: soft rlimits too low. rlimits <span class="built_in">set</span> <span class="built_in">to</span> <span class="number">4096</span> processes, <span class="number">65535</span> <span class="built_in">files</span>. Number <span class="keyword">of</span> processes should be <span class="keyword">at</span> least <span class="number">32767.5</span> : <span class="number">0.5</span> times <span class="built_in">number</span> <span class="keyword">of</span> <span class="built_in">files</span>.</span><br></pre></td></tr></table></figure></p>
<p>解决方案：<br>编辑 <code>/etc/security/limits.conf</code> 文件，在航末添加下面的代码<br><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mongod <span class="keyword">soft</span> nproc <span class="number">65535</span></span><br><span class="line">mongod hard nproc <span class="number">65535</span></span><br></pre></td></tr></table></figure></p>
<p>同上，修改之后需要重启 mongo 服务</p>
<p>参考：</p>
<ul>
<li><a href="//tecadmin.net/install-mongodb-on-centos-rhel-and-fedora/">How to Install MongoDB 3.2 on CentOS/RHEL &amp; Fedora</a></li>
<li><a href="//stackoverflow.com/questions/28911634/how-to-avoid-transparent-hugepage-defrag-warning-from-mongodb">How to avoid transparent_hugepage/defrag warning from mongodb?</a></li>
<li><a href="//www.canway.net/Original/shujuku/050310M2016.html">MongoDB的客户端工具mongo</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> mongodb </category>
            
        </categories>
        
        
        <tags>
            
            <tag> mongodb </tag>
            
            <tag> centos </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Putty登陆阿里云 Network error: Software caused connection abort]]></title>
      <url>http://lijundong.com/Putty-login-aliyun-Network-error-Software-caused-connection-abort/</url>
      <content type="html"><![CDATA[<h3 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h3><p><img src="//source.lijundong.com/16-6-17/26600917.jpg" alt=""><br>使用Putty登陆阿里云主机时出现”Network error: Software caused connection abort”。Google了很多方式都没能解决，Putty依旧不想跟我连接，并傲娇的扔回了”connection abort”，逼得我差点重置了系统。这时候，学长出现了，缓缓说道“可能是云盾给你拦截了”<strong>云盾！拦截了……囧</strong><br><a id="more"></a></p>
<h3 id="解决方案："><a href="#解决方案：" class="headerlink" title="解决方案："></a>解决方案：</h3><h4 id="Google的方案"><a href="#Google的方案" class="headerlink" title="Google的方案"></a>Google的方案</h4><p>Google上多半的解决方案是通过修改<code>/etc/ssh/sshd_config</code>文件。</p>
<ul>
<li>添加参数<code>TCPKeepAlive yes</code></li>
<li><code>ClientAliveInterval 0</code>中修改0为60</li>
</ul>
<p>然而这个方法并没能奏效。</p>
<h4 id="云盾设置登陆IP白名单"><a href="#云盾设置登陆IP白名单" class="headerlink" title="云盾设置登陆IP白名单:"></a>云盾设置登陆IP白名单:</h4><p>侧边栏&gt;产品与服务&gt;服务器安全(安骑士)&gt;<br>设置&gt;安全配置&gt;登陆安全&gt;登陆IP白名单&gt;<br>添加白名单生效的服务器&gt;白名单IP设置为<code>0.0.0.0</code>(防止IP改变)<br><img src="//source.lijundong.com/16-6-17/72508725.jpg" alt=""><br>使用Putty再次连接，成功。</p>
]]></content>
      
        <categories>
            
            <category> 问题解决 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> ssh </tag>
            
            <tag> 服务器 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Centos7安装Node以及更新]]></title>
      <url>http://lijundong.com/Centos7-install-nodejs-update/</url>
      <content type="html"><![CDATA[<p>这篇笔记下Centos7下，NodeJS的安装以及更新。<br><a id="more"></a></p>
<h3 id="安装node-amp-npm"><a href="#安装node-amp-npm" class="headerlink" title="安装node &amp; npm"></a>安装node &amp; npm</h3><p><strong>Yum安装</strong><br>使用yum安装，需要先启用EPEL repository<br><code># yum install epel-release</code></p>
<p>安装<strong>node</strong><br><code># yum install nodejs</code><br>查看是否安装成功<br><code># node -version</code></p>
<p>安装<strong>npm</strong><br><code># yum install npm</code><br>查看是否安装成功<br><code># npm -version</code></p>
<h3 id="安装express"><a href="#安装express" class="headerlink" title="安装express"></a>安装express</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> -g express</span><br><span class="line">npm <span class="keyword">install</span> -g express-generator</span><br></pre></td></tr></table></figure>
<p>查看是否安装成功<br><code>express -version</code></p>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p><strong>node</strong>更新</p>
<p>安装 n 模块<br><code>npm install -g n</code><br>通过 n 模块安升级到NodeJS最新稳定版<br><code>n stable</code></p>
<p>同时，可以变更到指定版本<br><code>n 0.10.26      //切换到版本 0.10.26</code></p>
<p><strong>npm</strong>更新<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">update</span>              <span class="comment">//升级当前目录下的项目的所有模块</span></span><br><span class="line">npm <span class="keyword">update</span> express      <span class="comment">//升级当前目录下的项目的指定模块</span></span><br><span class="line">npm <span class="keyword">update</span> -g express   <span class="comment">//升级全局安装的express模块</span></span><br></pre></td></tr></table></figure></p>
<p>参考:</p>
<ul>
<li><a href="//www.phpini.com/linux/rhel-centos-install-node-js">RHEL / CentOS 7 安裝 Node.js</a></li>
<li><a href="//blog.chinaunix.net/uid-14735472-id-5119134.html">安装Express-Centos7</a></li>
<li><a href="//cnbin.github.io/blog/2015/06/12/geng-xin-node-ban-ben/">更新 Node 版本</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> centos </tag>
            
            <tag> node </tag>
            
            <tag> npm </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SCP跨机远程拷贝]]></title>
      <url>http://lijundong.com/secure-copy/</url>
      <content type="html"><![CDATA[<p>在 windows 本地操作服务器，最初使用 putty + FileZilla，之后使用 Xshell + Xftp，之后看到黄彪同学直接在命令行( Linux 下)用 ssh 命令登陆服务器，vim 下操作，手指在键盘上下翻飞，好不潇洒，十分羡慕，无奈电脑性能太差，开虚拟机太卡，双系统并不想折腾，生产力太低，硬件跟不上，软件来凑，不得不赞叹<code>git for windows</code>功能之强大，让我在 windows 下可以用 Linux 命令完成大多数工作，这篇笔记下 windows 下使用 ssh 登陆远程服务器以及使用 scp 跨机远程拷贝。<br><a id="more"></a></p>
<h3 id="关于git-for-windows"><a href="#关于git-for-windows" class="headerlink" title="关于git for windows"></a>关于git for windows</h3><p><a href="//git-scm.com/downloads">Git-for-windows</a> 是方便 windows 用户使用 Git 开发出来的神器，基于 MINGW,可模拟 Linux 运行，支持大多数 Linux 指令，功能强大到 Git 只能作为附属功能了，我在上面开发项目、日常文件处理、以及用 vim 写这篇博客。</p>
<h3 id="ssh登陆"><a href="#ssh登陆" class="headerlink" title="ssh登陆"></a>ssh登陆</h3><p>ssh登陆远程服务器<br><code>ssh username@serverip    //在提示后输入密码</code><br>例如:<br><code>ssh root@121.42.194.214</code><br>输入密码成功登陆服务器，可以尽情操作了。</p>
<h3 id="scp跨机拷贝"><a href="#scp跨机拷贝" class="headerlink" title="scp跨机拷贝"></a>scp跨机拷贝</h3><blockquote>
<p>scp是secure copy的简写，用于在Linux下进行远程拷贝文件的命令，和它类似的命令有cp，不过cp只是在本机进行拷贝不能跨服务器，而且scp传输是加密的。当你服务器硬盘变为只读 read only system时，用scp可以帮你把文件移出来。</p>
<h4 id="命令格式"><a href="#命令格式" class="headerlink" title="命令格式"></a>命令格式</h4><p>scp [参数] [原路径] [目标路径]</p>
<h4 id="常见用法"><a href="#常见用法" class="headerlink" title="常见用法"></a>常见用法</h4><ol>
<li>上传本地文件(夹)到服务器</li>
</ol>
</blockquote>
<p>文件上传：<br><code>scp /path/filename username@serverip:path</code></p>
<p>文件夹上传:<br><code>scp -r /path/local_dir username@serverip:path</code></p>
<ol>
<li>服务器文件(文件)下载到本地</li>
</ol>
<p>文件下载:<br><code>scp username@serverip:path/file /path/local_dir</code></p>
<p>文件夹下载:<br><code>scp -r username@serverip:path/directory /path/local_dir</code></p>
<p>以上。</p>
<hr>
<p>参考：</p>
<ul>
<li><a href="//linuxtools-rst.readthedocs.io/zh_CN/latest/tool/scp.html">scp 跨机远程拷贝</a></li>
<li><a href="//www.zhihu.com/question/22137175">Cygwin 和MinGW 的区别与联系</a></li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> scp </tag>
            
            <tag> linux </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[可能错过的Windows便签]]></title>
      <url>http://lijundong.com/Windows-tips-you-may-ignore/</url>
      <content type="html"><![CDATA[<h3 id="记事本"><a href="#记事本" class="headerlink" title="记事本"></a>记事本</h3><p>一直以来记性都不好，最近更是常把前天和昨天弄混，所以一款易用性高的便签显得非常重要，常用的记录软件，Any.Do用来记录长期计划，sticky note记录突然想到的想法，锤子便签拿来装逼，最近开始用Windows自带的便签应用，才发现这个应用，不赖。</p>
<a id="more"></a>
<h3 id="推荐列表"><a href="#推荐列表" class="headerlink" title="推荐列表"></a>推荐列表</h3><h4 id="Any-Do"><a href="#Any-Do" class="headerlink" title="Any.Do"></a>Any.Do</h4><p>这是一款GTD(get things done)软件，免费试用，并且提供付费功能,界面做的简介大方，交互很棒。我用来记录最近需要做的事，因为有定时提醒功能，打开手机就能看见提醒，很实用，我在Chrome上下载了Any.Do的扩展，方便随时记录。<br><img src="//source.lijundong.com/16-4-17/61971142.jpg" alt=""><br>软件支持平台: Web/iOS/Android<br><img src="//source.lijundong.com/16-4-17/50114188.jpg" alt=""></p>
<h4 id="Sticky-Notes"><a href="#Sticky-Notes" class="headerlink" title="Sticky Notes"></a>Sticky Notes</h4><p>Sticky Notes是Chrome的一个便签扩展，点开就能记录，和Windows的便签很相似，非常简洁，我用来记录一些不重要的密码或者账号，以及临时的一些想实现的想法。<br><img src="//source.lijundong.com/16-4-17/81038650.jpg" alt=""></p>
<h4 id="印象笔记"><a href="#印象笔记" class="headerlink" title="印象笔记"></a>印象笔记</h4><p>印象笔记虽然很强大，但是并没有让我有很强的使用欲望，但是让我依然在用的原因是一款Chrome的扩展：<strong>悦读</strong>，在网页上浏览文章时，使用这个扩展，它会将无关内容关掉，只留下文章内容，可以获得非常棒的沉浸阅读体验，并且支持剪切，剪切后文章存进印象笔记。<br><img src="//source.lijundong.com/16-4-17/86424952.jpg" alt=""><br><strong>PS：刚才去Chrome应用商店已经搜不到这款插件了，从最初的独角兽公司走到人人唱衰的下场也挺悲剧的……</strong></p>
<h4 id="锤子便签"><a href="#锤子便签" class="headerlink" title="锤子便签"></a>锤子便签</h4><p>老罗公司出品，嗯，隔着屏幕都能感受到情怀的气息，O(∩_∩)O哈哈~。情怀先搁置一边，这款锤子便签，国内的便签应用无出其右，除了情怀，老罗会真实关心用户的真实需求并且用心把东西做出来，这是国内厂商一直鼓吹的，而只有老罗做到的。</p>
<blockquote>
<p>未来属于我们当中那些仍然愿意弄脏双手的少数分子</p>
</blockquote>
<h4 id="Windows便签"><a href="#Windows便签" class="headerlink" title="Windows便签"></a>Windows便签</h4><p>这是今天写这篇文章的目的，从有了自己的电脑，我就知道这个应用的存在，一直觉得易用性很差，所以一直没用，一天的工作目录常常记录在纸质便签，贴在显示器边角作为提醒，但是前天开始用到现在，我觉得我可以脱离纸质便签了。</p>
<p>总结了下便签常用快捷键<br><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Ctrl+N：新建一张便笺</span><br><span class="line">Ctrl+D：删除当前便笺</span><br><span class="line">Ctrl+E：居中对齐</span><br><span class="line">Ctrl+R：右对齐</span><br><span class="line">Ctrl+<span class="keyword">J：左对齐</span><br><span class="line"></span>Ctrl+I：斜体</span><br><span class="line">Ctrl+<span class="keyword">B：粗体</span><br><span class="line"></span>Ctrl+U：下划线</span><br><span class="line">Ctrl+T：删除线</span><br><span class="line">Ctrl+<span class="keyword">Shift+&gt;：加大选中文字的字号</span><br><span class="line"></span>Ctrl+<span class="keyword">Shift+&lt;：缩小选中文字的字号</span><br><span class="line"></span>Ctrl+<span class="keyword">Shift+L：在文字前添加项目符号和编号(反复按可循环切换)。编号包括数字、大小写字母、大小写罗马数字几种形式。</span><br><span class="line"></span>Ctrl+=：下标</span><br><span class="line">Ctrl+<span class="keyword">Shift+=：上标</span></span><br></pre></td></tr></table></figure></p>
<p>效果:<br><img src="//source.lijundong.com/16-4-17/63457553.jpg" alt=""></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具使用 </tag>
            
            <tag> 便签 </tag>
            
            <tag> windows </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IS开发(二):PHP&Mysql基础]]></title>
      <url>http://lijundong.com/information-system-PHP-Mysql/</url>
      <content type="html"><![CDATA[<p>信息系统的大作业选的是 <em>教室预约管理系统</em></p>
<h3 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h3><ul>
<li>用户 <strong>登录</strong>，分为 <strong>管理员</strong>与 <strong>普通用户</strong></li>
<li>用户 <strong>搜索</strong>、<strong>预约教室</strong>，以及 <strong>取消预约</strong></li>
<li>管理员对预约进行审核，可以 <strong>取消用户的预约</strong></li>
</ul>
<a id="more"></a>
<h3 id="设计："><a href="#设计：" class="headerlink" title="设计："></a>设计：</h3><ul>
<li>页面用HTML实现<ul>
<li>登陆界面<img src="//source.lijundong.com/16-4-16/45373635.jpg" alt=""></li>
<li>预约主界面<img src="//source.lijundong.com/16-4-16/30157285.jpg" alt=""></li>
<li>用户管理界面<img src="//source.lijundong.com/16-4-16/54712347.jpg" alt=""></li>
<li>搜索界面<img src="//source.lijundong.com/16-4-16/42062484.jpg" alt=""></li>
<li>后台管理<img src="//source.lijundong.com/16-4-16/48676591.jpg" alt=""></li>
</ul>
</li>
<li>数据库建三个表：<ul>
<li>用户表：ID、name、password、authority</li>
<li>教室表：Id、zone(west\east)、roomnum、size、adminID</li>
<li>预约表：ID、roomnum、username、ordertime</li>
</ul>
</li>
</ul>
<h3 id="如何交互"><a href="#如何交互" class="headerlink" title="如何交互"></a>如何交互</h3><p>页面有了，数据有了，如何把两者结合起来，与用户进行交互呢？因为没有接触过后台，所有很长一段时间里一直不得其解，学长听我说在做这个作业，撂下句“那个很easy”，留下我在风中凌乱了好久……，后来进行实现时，果真如他所言，比想象的容易很多。</p>
<h3 id="新手困惑"><a href="#新手困惑" class="headerlink" title="新手困惑"></a>新手困惑</h3><p>我在学习很多新的内容时，多数情况像是无头苍蝇，四处乱撞，因为理解不了当前所学的内容在这一门技术中承担的任务，从头开始学，效率低，效果还预见不了，例如这次的信息系统，两三天的时间就得完成，PHP的语法看一遍，复习下mysql的语法，然而看完语法之后该怎么做还是一头雾水，如果有人能带着自己从前到后用几分钟梳理下可能就不会这样了，而且单凭借Google+度娘，无法做到很短时间内对一门技术在宏观上进行详细的了解，大多数的博主写的文章是站在自己的角度，然而站在小白的角度，看到的信息可能会非常少，甚至与作者的立意相差甚远。</p>
<h3 id="新手课程"><a href="#新手课程" class="headerlink" title="新手课程"></a>新手课程</h3><p>如果你有这样的困扰，我建议你可以看一下慕课网的<a href="//www.imooc.com/learn/116">PHP和Mysql关系揭秘</a>，这个作者用一个文章发布系统很详细的阐述了PHP、Mysql、HTML如何结合，看完之后如果对于前后台的关系有更清楚的认识，请给作者点赞。</p>
<h3 id="访问数据库前"><a href="#访问数据库前" class="headerlink" title="访问数据库前"></a>访问数据库前</h3><ul>
<li>连接数据库<br>PHP内置了大量的Mysql函数，多数操作需要通过这些内置函数完成。访问数据库之前需要连接数据库，，你得告诉后台你的数据库的地址，以及用于登陆数据库的用户名与密码。<br><code>$con=mysqli_connect(HOST,USERNAME,PASSWORD);</code>，连接函数连接成功时会返回连接标识符，失败则返回false。</li>
<li>选择数据库<br>进入数据库，具体用哪个数据库呢，这时候选择需要使用的数据库，上一步的连接标识符在这一步就有作用了，选库的函数有两个参数：连接标志符、目标库名。<br><code>mysqli_select_db($con,&#39;roomis&#39;)</code></li>
<li>定义字符集<br>避免输出乱码，定义编码格式为UTF-8。<br><code>mysqli_query($con,&#39;set names utf8&#39;)</code></li>
</ul>
<h3 id="获取表单内容"><a href="#获取表单内容" class="headerlink" title="获取表单内容"></a>获取表单内容</h3><h4 id="表单输入"><a href="#表单输入" class="headerlink" title="表单输入"></a>表单输入</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">form</span> <span class="attr">role</span>=<span class="string">"form"</span> <span class="attr">class</span>=<span class="string">"col-md-12 "</span> <span class="attr">method</span>=<span class="string">"post"</span> <span class="attr">action</span>=<span class="string">"login.php"</span> <span class="attr">style</span>=<span class="string">"margin-top: 50px;"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"col-md-1 col-md-offset-4 text-center"</span> <span class="attr">style</span>=<span class="string">"line-height: 30px;font-size: 20px;"</span>&gt;</span> ID:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"text-center center-block col-md-2"</span><span class="attr">name</span>=<span class="string">"id"</span> <span class="attr">style</span>=<span class="string">"line-height: 30px;border-radius: 5px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">style</span>=<span class="string">"margin-top: 30px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"col-md-1 col-md-offset-4 text-center"</span>  <span class="attr">style</span>=<span class="string">"line-height: 30px;font-size: 20px;"</span>&gt;</span> 密码:<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">class</span>=<span class="string">"text-center center-block col-md-2"</span> <span class="attr">name</span>=<span class="string">"password"</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">style</span>=<span class="string">"line-height: 30px;border-radius: 5px;"</span>&gt;</span><span class="tag">&lt;/<span class="name">input</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span> <span class="attr">style</span>=<span class="string">"margin-top: 30px;"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span>  <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">class</span>=<span class="string">"col-md-2 col-md-offset-5 btn btn-default"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p>上面是登陆界面的表单代码，表单的<code>method</code>属性有两个属性<code>POST</code>，<code>GET</code>，这里使用<code>POST</code>属性。<code>action</code>指向PHP写的登陆程序，<strong>每个输入框都需要names属性，否则输入的内容后台会获取不到</strong>，</p>
<h4 id="后台获取"><a href="#后台获取" class="headerlink" title="后台获取"></a>后台获取</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">require_once</span>(<span class="string">'connect.php'</span>);</span><br><span class="line">$userid=$_POST[<span class="string">'id'</span>];</span><br><span class="line">$password=$_POST[<span class="string">'password'</span>];</span><br><span class="line">$selectuser=<span class="string">"select * from user where username = '$userid'"</span>;</span><br><span class="line">$query=mysqli_query($con,$selectuser);</span><br><span class="line"><span class="keyword">if</span>($query&amp;&amp;mysqli_num_rows($query))&#123;</span><br><span class="line">    $userinfo=mysqli_fetch_row($query);</span><br><span class="line">    <span class="keyword">if</span>(!strcmp($userinfo[<span class="number">2</span>],$password))&#123;</span><br><span class="line">        <span class="keyword">if</span>($userinfo[<span class="number">3</span>])&#123;</span><br><span class="line">            setcookie(<span class="string">"loginname"</span>,$userinfo[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">echo</span><span class="string">"&lt;script&gt;alert('登陆成功');window.location.href='user.php'; &lt;/script&gt;"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            setcookie(<span class="string">"loginname"</span>,$userinfo[<span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">echo</span><span class="string">"&lt;script&gt;alert('登陆成功');window.location.href='admin.php';&lt;/script&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span><span class="string">"&lt;script&gt;alert('密码错误');window.location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">"&lt;script&gt;alert('用户ID错误');window.location.href='index.php'&lt;/script&gt;"</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure>
<p>我把连库、选库、设置编码格式的代码放在了<code>connect.php</code>文件里，数据库操作之前都需要先进行引用。<br>表单提交的数据都保存在<code>$_POST[]</code>这个关联数组中，用<code>name</code>属性进行访问</p>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$selectuser=<span class="string">"select * from user where username = '$userid'"</span>;</span><br><span class="line">$query=mysqli_query($con,$selectuser);</span><br></pre></td></tr></table></figure>
<p>将Mysql语句放在$selectuser，通过PHP的内置函数<code>mysqli_query</code>执行。操作不同，函数返回值也不同。</p>
<ul>
<li>查询语句：<ul>
<li>成功：返回资源对象</li>
<li>失败：返回false</li>
</ul>
</li>
<li>增删改语句：<ul>
<li>成功：返回True</li>
<li>失败：返回false</li>
</ul>
</li>
</ul>
<figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysqli_query(connection,query,resultmode);</span><br><span class="line"></span><br><span class="line">参数：</span><br><span class="line">connection      <span class="comment">//必需。要使用的 MySQL 连接。即之前连库时传回的连接标识符</span></span><br><span class="line">query           <span class="comment">//必需，需要查询字符串。</span></span><br><span class="line">resultmode     </span><br><span class="line"><span class="comment">//可选，这里没填。一个常量。可以是下列值中的任意一个：</span></span><br><span class="line"> MYSQLI_USE_RESULT      <span class="comment">//如果需要检索大量数据，请使用这个</span></span><br><span class="line"> MYSQLI_STORE_RESULT    <span class="comment">//默认</span></span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 信息系统开发 </tag>
            
            <tag> wampserver </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[IS开发(一):Wampserver]]></title>
      <url>http://lijundong.com/information-system-Wampserver/</url>
      <content type="html"><![CDATA[<h2 id="信息系统开发"><a href="#信息系统开发" class="headerlink" title="信息系统开发"></a>信息系统开发</h2><p>这两天一直在做信息系统开发的大作业，需要用到后端环境，需要配置Apache、PHP、Mysql三个工具，大二配置过一次，很繁琐，而且容易出错，这时候你就会嘀咕了“我只是想做个安静的码农，完成系统开发的作业，并不是长期开发”，那有没有一个小白式安装的现成软件可以提供后端开发环境呢？这是Google就会把<a href="//www.wampserver.com/en/">wampserver</a>扔在你眼前。<br><a id="more"></a></p>
<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>Wampserver是法国人开发的一款软件，类似于LAMP(Linux、Apache、Mysql、PHP)，Wampserver就是Windows、Apache、Mysql、PHP集成安装环境。目前<a href="//www.wampserver.com/en/">官方</a>的版本是3.0(支持PHP7)。支持PHP扩展以及PHPMyadmin、SQLitemanager，可以跳过SQL语句直接管理数据。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>去<a href="//www.wampserver.com/en/">官网</a>下载安装程序，版本自选，下载之后点击安装，一路next。</p>
<ul>
<li>选择默认浏览工具：选择自己想用的浏览器，默认是IE。</li>
<li>Wampserver之后会尝试启动Apache网站伺服器，可能会被防火墙拦截并弹框警告，点选同意按钮对Apache伺服器进行授权。</li>
<li>出现PHP mail parameters时可以置之不理，next。</li>
<li>完成安装后开启Wampserver，测试安装是否成功。</li>
</ul>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><ul>
<li>左键单击Wampserver图标<br><img src="//source.lijundong.com/16-4-15/69491826.jpg" alt=""></li>
<li>localhost：浏览器就会打开<code>//localhost/</code>,如果看到的是预设的主页则表示安装成功，显示报错信息则代表出错。<img src="//source.lijundong.com/16-4-15/93554908.jpg" alt=""></li>
<li>PHPMyadmin：如果成功进入页面，代表Mysql已经正常工作，后面的工作中，我们将在这里建立数据库。<strong>默认用户名：root 密码为空</strong><br><img src="//source.lijundong.com/16-4-14%2F15544565.png" alt=""></li>
<li>www directory：页面默认目录，将PHP与HTML文件放在这里，默认主页名为index，即把一个写好的HTML文件或者PHP文件命名为index，放在该目录下，即可在<code>//localhost/</code>看到页面。</li>
<li>下面的Apache、PHP、Mysql是相关的配置，以及版本的选取。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 信息系统开发 </tag>
            
            <tag> wampserver </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Bootstrap初体验:鼠标hover时自动下拉菜单]]></title>
      <url>http://lijundong.com/Bootstrap-hover-toggle-menu/</url>
      <content type="html"><![CDATA[<h2 id="Bootstrap"><a href="#Bootstrap" class="headerlink" title="Bootstrap"></a>Bootstrap</h2><p>很早就想接触Bootstrap，一直在delay，寒假看过一次，不过那次是在网吧，朋友们在打lol，我却在装逼看代码(笑cry)，最后昏昏欲睡，没写实例，后来也就不了了之，最近需要写一个响应式的页面，加之这些天需要学习的必要性，终于开始看。</p>
<h2 id="初体验"><a href="#初体验" class="headerlink" title="初体验"></a>初体验</h2><p>Bootstrap的栅格系统很强大，通过对栅格的类的配置可以很轻松地实现响应式布局，这个会在后面的学习中，陆续总结。今天要说的是，鼠标hover时，菜单如何自动下拉。<br><a id="more"></a><br>上代码: 下面是实现下拉菜单的代码<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"col-md-12"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"nav navbar-nav "</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>学校概况<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>学校领导<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>现任领导<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>教学机构<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>信息工程学院<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>计算机科学与技术学院<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>管理机构<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>党群职能部门<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>行政职能部门<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>师资队伍<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>师资概况<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>外聘院士<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>教育教学<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>本科生教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>研究生教育<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>科学研究<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>平台<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>科技成果<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>招生就业<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>本科生招生<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>研究生招生<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>国际合作<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>基本概况<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>交流项目<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">"dropdown"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>走进西科<span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"caret"</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ul</span> <span class="attr">class</span>=<span class="string">"dropdown-menu"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>综合荣誉<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span>&gt;</span>校名<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>图书馆<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">li</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"#"</span> <span class="attr">class</span>=<span class="string">"dropdown-toggle"</span> <span class="attr">data-toggle</span>=<span class="string">"dropdown"</span> <span class="attr">role</span>=<span class="string">"button"</span></span><br><span class="line">               <span class="attr">aria-haspopup</span>=<span class="string">"true"</span> <span class="attr">aria-expanded</span>=<span class="string">"true"</span>&gt;</span>校友会<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><p>在<code>&lt;/body&gt;</code>前面加上下面的代码，即可实现鼠标hover时菜单自动下拉</p>
<figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">    $(<span class="string">'li.dropdown'</span>).mouseover(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">document</span>).width() &gt; <span class="number">767</span>)</span><br><span class="line">            $(<span class="keyword">this</span>).addClass(<span class="string">'open'</span>);</span><br><span class="line">    &#125;).mouseout(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ($(<span class="built_in">document</span>).width() &gt; <span class="number">767</span>)</span><br><span class="line">            $(<span class="keyword">this</span>).removeClass(<span class="string">'open'</span>);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="xml"><span class="tag">&lt;//<span class="attr">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure>
<h2 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h2><p><img src="//source.lijundong.com/16-4-1/38411741.jpg" alt="演示"></p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> bootstrap </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[但求好事]]></title>
      <url>http://lijundong.com/just-do-good-thing/</url>
      <content type="html"><![CDATA[<p>这首歌很棒，我更喜欢谭维维的版本</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=28935312&auto=0&height=66"></iframe>

<p>最近的生活过的好快，和室友聊天时经常把前天的事记成昨天，细想好久才能纠正，但大脑缓存就这么点大，光凭回忆不是长久之计，还得存进硬盘，拾起每天记事的习惯，五到十分钟记录这一天的收获或者流水账，上个学期连续写了三个月，现在偶尔翻看，挺好玩。<br><a id="more"></a></p>
<p>进入大学之后有三次选择，一次在大一暑假，一次在大二暑假，还有一次，仍在考虑的眼前，生活是一次次的选择，回望过去的两年，有得有失，有难忘和欢乐，难免的遗憾和悲伤。<br>一直很喜欢一句话“但求好事，莫问前程”，私以为这句话的境界该是，摒弃利益驱动，把一件事自己想做的事，做完整，做完美。好事求成，前程自来。<br>过去很长一段时间一直在挖坑，挖了这么久，也该填一填，把那些我想学的，想做的，着手去学，去做，跳出自己的<code>confort zone</code>。</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SublimeText 插件推荐]]></title>
      <url>http://lijundong.com/SublimeText-extension-recommend/</url>
      <content type="html"><![CDATA[<p>SublimeText3是我最喜欢的编辑器，如果你跟我争Vim或者Emacs，来来来，先出门打一架……<br>喜欢归因于它丰富的插件，ST2插件装多了启动会变得很慢，而ST3完全解决了这个问题，无论装多少插件，一律秒开，因为有朋友想装插件，在这里列举一些我个人很喜欢的，权当做分享。</p>
<a id="more"></a>
<h2 id="插件安装"><a href="#插件安装" class="headerlink" title="插件安装"></a>插件安装</h2><h3 id="Package-Control"><a href="#Package-Control" class="headerlink" title="Package Control"></a>Package Control</h3><p>Package Control可以非常方便的管理插件，<strong>打开 <code>Ctrl + ~</code>输入安装代码</strong>，安装代码:</p>
<p><strong>SublimeText2</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib2,os; pf=<span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); os.makedirs( ipp ) <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(ipp) <span class="keyword">else</span> <span class="keyword">None</span>; urllib2.install_opener( urllib2.build_opener( urllib2.ProxyHandler( ))); open( os.path.join( ipp, pf), <span class="string">'wb'</span> ).write( urllib2.urlopen( <span class="string">'//sublime.wbond.net/'</span> +pf.replace( <span class="string">' '</span>,<span class="string">'%20'</span> )).read()); print( <span class="string">'Please restart Sublime Text to finish installation'</span>)</span><br></pre></td></tr></table></figure></p>
<p><strong>SublimeText3</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request,os; pf = <span class="string">'Package Control.sublime-package'</span>; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); open(os.path.join(ipp, pf), <span class="string">'wb'</span>).write(urllib.request.urlopen( <span class="string">'//sublime.wbond.net/'</span> + pf.replace(<span class="string">' '</span>,<span class="string">'%20'</span>)).read())</span><br></pre></td></tr></table></figure></p>
<h3 id="插件安装-1"><a href="#插件安装-1" class="headerlink" title="插件安装"></a>插件安装</h3><p><strong><code>Ctrl + Shift + P</code>打开控制面板</strong></p>
<p><strong>注：关于插件的设置以及快捷键的设置：都可以通过控制面板进行搜索</strong></p>
<p><strong>输入<code>installPackage</code> 回车</strong><br><img src="//source.lijundong.com/16-3-17/81113868.jpg" alt=""></p>
<p><strong>输入插件名，回车安装</strong><br><img src="//source.lijundong.com/16-3-17/49212030.jpg" alt=""></p>
<p><strong>控制面板，选择<code>listPackage</code>可以看到已经安装的插件</strong></p>
<p><img src="//source.lijundong.com/16-3-17/33463949.jpg" alt=""><br><img src="//source.lijundong.com/16-3-17/76484603.jpg" alt=""></p>
<h2 id="插件"><a href="#插件" class="headerlink" title="插件"></a>插件</h2><h3 id="自动补全"><a href="#自动补全" class="headerlink" title="自动补全"></a>自动补全</h3><ul>
<li>Emmet: 前端开发神器，如果没听过，请出门左转 <a href="google.com">Google</a>，<strong>注意的是Emmet需要和PyV8这个插件才能工作，所以PyV8也需要装</strong></li>
<li>AutofileName: 提示文件名，并可以自动补全</li>
<li>Autoprefixer: CSS前缀自动补全</li>
<li>SublimeCodeIntel: 代码自动提示以及补全</li>
</ul>
<h3 id="高亮"><a href="#高亮" class="headerlink" title="高亮"></a>高亮</h3><p><strong>注：如果你的代码，sublime  原生不支持高亮，可以去 Package Control 中搜索安装</strong></p>
<ul>
<li>BracketHighlighter: 括号以及标签高亮，方便找到括号/标签的头与尾</li>
<li>Color Highlighter: 这个很好用，对CSS颜色代码进行高亮，如<code>#f00</code>会出现一条红色的下划线。</li>
<li>LESS: 对LESS代码进行高亮</li>
<li>如果你遇到无法高亮的代码，可以先设置文本格式，如果本机没有对应的高亮文本格式，可以去 <a href="//packagecontrol.io/">packageControl</a> 找一下</li>
</ul>
<h3 id="格式"><a href="#格式" class="headerlink" title="格式"></a>格式</h3><ul>
<li>CSScomb: 对CSS代码进行格式化</li>
<li>JsFormat: JS代码格式化</li>
<li>DocBlockr: 提供方便的代码注释格式</li>
<li>HTML-CSS-JS Prettify</li>
<li>HTML格式化: 试过很多HTML格式化的插件，但是效果并不好，后来才发现ST自己有个功能”reindent”,于是自己设置了快捷键，如下。<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123;<span class="attr">"keys"</span>: [<span class="string">"ctrl+shift+o"</span>], <span class="attr">"command"</span>: <span class="string">"reindent"</span> , <span class="attr">"args"</span>: &#123;<span class="attr">"single_line"</span>: <span class="literal">false</span>&#125;&#125;</span><br><span class="line">]</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="开发"><a href="#开发" class="headerlink" title="开发"></a>开发</h3><ul>
<li>Git: 可以直接在控制面板用Git，不过还是需要先学习下</li>
<li>ColorPicker: 取色插件</li>
<li>SFTP: 可以直接在 sublime 中传输文件</li>
<li>LiveReload: 我非常喜欢这个插件，配合Chrome的liveReload插件可以做到在编辑器保存文件Chrome立即刷新页面。<br>Chrome的插件安装之后，打开(点下图红圈圈，中心点变成黑色即意味打开)即可与ST配合使用。<br><img src="//source.lijundong.com/16-3-17/44002025.jpg" alt=""><br>除了写写页面用到这个插件，还有其他用途，我的Markdown预览到Chrome，打开liveReload，边写边看效果，还有Hexo打开调试时，打开liveReload，保存一次，页面刷新一次，省了很多不必要的麻烦，很方便。</li>
<li>View In Browser: 在浏览器预览HTMl文件，设置快捷键之后更方便。</li>
<li>Terminal: 在当前目录下打开 Terminal，可以自定义 Terminal 路径，我在 windows 下更偏好 <a href="//git-scm.com/download/">git-for-windows</a>，所以我把 <code>Termina-sublime-settings-User</code> 中的 Terminal 路径设置成如下。<figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"terminal"</span>: <span class="string">"C:\\Program Files\\Git\\git-bash.exe"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="Markdown"><a href="#Markdown" class="headerlink" title="Markdown"></a>Markdown</h3><ul>
<li>Markdown Preview: 在浏览器中预览Markdown文件。</li>
<li>Markdown Editing: Markdown编辑界面，语法高亮，写这篇文章的时候用的就在用。</li>
<li>极简图床: 这是Chrome插件，之前很苦恼Markdown的图片存哪合适，这个插件可以很好的解决这个问题，申请一个七牛免费2G空间，用这个插件存图片，很方便。</li>
</ul>
<h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><ul>
<li>Predawn</li>
<li>Theme-Flatland</li>
<li>Theme-Soda</li>
<li>Theme-itg.flat</li>
<li>Boxy Theme</li>
</ul>
<h3 id="分不了类的"><a href="#分不了类的" class="headerlink" title="分不了类的"></a>分不了类的</h3><ul>
<li>IMESupport: ST中文输入时，输入框不跟随的问题可以通过这个插件解决。</li>
</ul>
<h2 id="设置"><a href="#设置" class="headerlink" title="设置"></a>设置</h2><p><strong>Setting</strong><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attr">"caret_extra_width"</span>: <span class="number">1</span>,</span><br><span class="line">    <span class="attr">"font_options"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"no_round"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"font_size"</span>: <span class="number">12</span>,</span><br><span class="line">    <span class="attr">"highlight_line"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"ignored_packages"</span>:</span><br><span class="line">    [</span><br><span class="line">        <span class="string">"Markdown"</span>,</span><br><span class="line">        <span class="string">"Vintage"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">"itg_sidebar_tree_large"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"itg_small_tabs"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"original_color_scheme"</span>: <span class="string">"Packages/Color Scheme - Default/Monokai.tmTheme"</span>,</span><br><span class="line">    <span class="attr">"sidebar_large"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"tabs_small"</span>: <span class="literal">true</span>,</span><br><span class="line">    <span class="attr">"theme"</span>: <span class="string">"itg.flat.dark.sublime-theme"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><strong>Key Bindings</strong><br><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">[</span><br><span class="line">    &#123; <span class="attr">"keys"</span>: [<span class="string">"ctrl+shift+enter"</span>], <span class="attr">"command"</span>: <span class="string">"open_in_browser"</span> &#125;,</span><br><span class="line">    &#123; <span class="attr">"keys"</span>: [<span class="string">"ctrl+shift+s"</span>], <span class="attr">"command"</span>: <span class="string">"save_all"</span> &#125;,</span><br><span class="line">    &#123;<span class="attr">"keys"</span>: [<span class="string">"ctrl+shift+o"</span>], <span class="attr">"command"</span>: <span class="string">"reindent"</span> , <span class="attr">"args"</span>: &#123;<span class="attr">"single_line"</span>: <span class="literal">false</span>&#125;&#125;,</span><br><span class="line">    &#123;<span class="attr">"keys"</span>:[<span class="string">"alt+m"</span>],<span class="attr">"command"</span>:<span class="string">"markdown_preview"</span>&#125;</span><br><span class="line"></span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具使用 </tag>
            
            <tag> sublimetext </tag>
            
            <tag> 插件 </tag>
            
            <tag> 力所能及的分享 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[清除浮动]]></title>
      <url>http://lijundong.com/clear-float/</url>
      <content type="html"><![CDATA[<h2 id="为什么清除浮动"><a href="#为什么清除浮动" class="headerlink" title="为什么清除浮动"></a>为什么清除浮动</h2><p>因为float会脱离Normal_flow,布局是会出现问题，下面给一个例子。</p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">background-color</span>:<span class="number">#fc9</span>;<span class="attribute">color</span>:<span class="number">#f5f</span>;<span class="attribute">margin</span>:<span class="number">50px</span> auto;<span class="attribute">padding</span>:<span class="number">50px</span>;&#125;</span><br><span class="line"><span class="selector-class">.div1</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:red;<span class="attribute">float</span>:left;&#125;</span><br><span class="line"><span class="selector-class">.div2</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:blue;<span class="attribute">float</span>:left;&#125;</span><br><span class="line"><span class="selector-class">.div3</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:green;<span class="attribute">float</span>:left;&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>float1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>float2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>float3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<p><img src="//source.lijundong.com/16-3-11/66642323.jpg" alt="浮动未清除"><br>途中三个浮动上面的那条白线是整个outer的内容，height值为0，造成这样的原因是float已经脱离了文档流，这显然不是我们想要的，可能上面的内容不能很清楚的描述问题，下面在三个浮动元素后添加非浮动的div。<br><a id="more"></a><br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Document<span class="tag">&lt;/<span class="name">title</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">    <span class="selector-class">.outer</span>&#123;<span class="attribute">border</span>:<span class="number">1px</span> solid <span class="number">#ccc</span>;<span class="attribute">background-color</span>:<span class="number">#2ecc71</span>;<span class="attribute">color</span>:<span class="number">#fff</span>;<span class="attribute">margin</span>:<span class="number">50px</span> auto;<span class="attribute">padding</span>:<span class="number">50px</span>;&#125;</span><br><span class="line">    <span class="selector-class">.div1</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#fff</span>;<span class="attribute">color</span>:<span class="number">#000</span>;<span class="attribute">float</span>:left;<span class="attribute">opacity</span>:<span class="number">0.6</span>;&#125;</span><br><span class="line">    <span class="selector-class">.div2</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#34495e</span>;<span class="attribute">float</span>:left&#125;</span><br><span class="line">    <span class="selector-class">.div3</span>&#123;<span class="attribute">width</span>:<span class="number">80px</span>;<span class="attribute">height</span>:<span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#9b59b6</span>;<span class="attribute">float</span>:left&#125;</span><br><span class="line">    <span class="selector-class">.nofloat</span>&#123;<span class="attribute">height</span>:<span class="number">160px</span>;<span class="attribute">width</span>: <span class="number">80px</span>;<span class="attribute">background</span>:<span class="number">#2980b9</span>;&#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>透明float1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>float2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>float3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nofloat"</span>&gt;</span>被覆盖的no float<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="//source.lijundong.com/16-3-11/25720736.jpg" alt="没有清除浮动的排版"><br>未浮动元素撑起了outer，但是上半部却被浮动元素遮盖了。</p>
<h2 id="方法小结"><a href="#方法小结" class="headerlink" title="方法小结"></a>方法小结</h2><p>看了很多介绍清除浮动的文章，虽然标题是八种方式，实质只是把clear换着姿势用了而已。这里总结了两种情况。</p>
<h3 id="overflow-auto-hidden"><a href="#overflow-auto-hidden" class="headerlink" title="overflow:auto/hidden"></a>overflow:auto/hidden</h3><p>先看看效果<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- CSS --&gt;</span></span><br><span class="line">.outer-flow&#123;overflow:auto; &#125;//auto、hidden都可，auto对于SEO更友好</span><br><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer outer-flow"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>float1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>float2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>float3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="//source.lijundong.com/16-3-11/56232609.jpg" alt="auto使用效果"><br>这种权宜之计只能把浮动元素放在父元素中，若浮动元素后添加非浮动元素，仍会出现被覆盖的现象。所以需要更靠谱的方法。</p>
<h3 id="clear"><a href="#clear" class="headerlink" title="clear"></a>clear</h3><p>clear生来就是为了清除浮动的。</p>
<h4 id="认识clear"><a href="#认识clear" class="headerlink" title="认识clear"></a>认识clear</h4><p>今早看到这节内容时，心想clear就这几个参数，还需要注意什么？后来看了篇<a href="//www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html">文章</a>,才意识很多重要的细节我从未接触过，细思恐极。<br>盲点：</p>
<ul>
<li>clear是作用于元素自己，对两边的元素并没有影响，甲乙两个div左浮动，现在想让乙浮动到下一行。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:80px;width:80px;float:left;background:#1abc9c"</span>&gt;</span>甲<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:80px;width:80px;float:left;background:#3498db"</span>&gt;</span>乙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="//source.lijundong.com/16-3-11/62991421.jpg" alt="甲乙并列"><br>这时候在甲上用clear:right;是无用的，因为clear作用在甲上，甲右边有浮动元素，而甲却根本无法移动。效果是没效果。<br>但是乙说:“我可以动呀”<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:80px;width:80px;float:left;background:#1abc9c;"</span>&gt;</span>甲<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"height:80px;width:80px;float:left;background:#3498db;clear:left;"</span>&gt;</span>乙<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p><img src="//source.lijundong.com/16-3-11/70003120.jpg" alt=""></p>
<ul>
<li>第二个盲点是： div的顺序是HTML代码中div的顺序决定的。<strong>靠近页面边缘的一端是前，远离页面边缘的一端是后。</strong><br>即：<br><img src="//source.lijundong.com/16-3-11/22540140.jpg" alt=""></li>
</ul>
<figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span> style=<span class="string">"overflow: auto"</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float: left;background:#e67e22"</span>&gt;float1&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float: left;background:#34495e"</span>&gt;float2&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float: left;background:#9b59b6"</span>&gt;float3&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float:right;background:#e67e22"</span>&gt;float1&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float:right;background:#34495e"</span>&gt;float2&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">        &lt;<span class="keyword">div</span> style=<span class="string">"height: 80px;width:80px;float:right;background:#9b59b6"</span>&gt;float3&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>
<p><img src="//source.lijundong.com/16-3-11/9036738.jpg" alt=""></p>
<p>坑补完了，继续说清除浮动。</p>
<h3 id="clear清除浮动"><a href="#clear清除浮动" class="headerlink" title="clear清除浮动"></a>clear清除浮动</h3><p>使用{clear:both}进行清除:<br><img src="//source.lijundong.com/16-3-11/12296220.jpg" alt=""><br>想达到上面的效果，可以通过下面的方式</p>
<ul>
<li><p>:after伪元素：”:after” 伪元素可以在元素的内容之后插入新内容。那么就可以用这个方法在需要清除的位置插入{clear:both}，应用在本文例子上即:</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- CSS --&gt;</span></span><br><span class="line">.group:after&#123;clear:both;&#125;</span><br><span class="line"><span class="comment">&lt;!-- HTML --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer group"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>添加具有{clear:both;}属性的元素</p>
<ul>
<li><p>空元素:使用含有clear属性的空元素进行清除，这种方法用起来很烦，每次都需要添加这些无意义的语句。</p>
  <figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"outer"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div1"</span>&gt;</span>透明float1<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div2"</span>&gt;</span>float2<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"div3"</span>&gt;</span>float3<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 空div --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- br --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">br</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- hr --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">hr</span> <span class="attr">style</span>=<span class="string">"clear: both;"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"nofloat"</span>&gt;</span>没有被覆盖<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>非空元素:如果浮动元素后面还有还有元素，那么久可以省去空元素语句，直接在后面元素添加{clear:both;}</p>
  <figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"div1"</span>&gt;透明float1&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"div2"</span>&gt;float2&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"div3"</span>&gt;float3&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"nofloat"</span> style=<span class="string">"clear:both"</span>&gt;没有被覆盖&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure>
</li>
</ul>
</li>
</ul>
<p><em>写完去上课!</em></p>
<p>参考：//www.cnblogs.com/iyangyuan/archive/2013/03/27/2983813.html</p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> float </tag>
            
            <tag> clear </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Dell笔记本加装固态]]></title>
      <url>http://lijundong.com/Dell-laptop-add-ssd/</url>
      <content type="html"><![CDATA[<h2 id="加装SSD"><a href="#加装SSD" class="headerlink" title="加装SSD"></a>加装SSD</h2><p>老大这学期的课程需要装很多测试软件，那台32位系统的Dell inspiron 14本来就卡的不行，再装软件恐怕连开机都困难，想到此处，拍案而起，大呼道“我要加装SSD！”，加之最近发现用的是64位的i3，换系统更是刻不容缓了。昨天用了半个下午装完，因为第一次拆 Dell，这里总结几个需要注意的地方。<br><a id="more"></a></p>
<h2 id="主料"><a href="#主料" class="headerlink" title="主料"></a>主料</h2><ul>
<li>Dell inspiron 14:光驱、64位i3处理器</li>
<li>SSD、9.5mm硬盘托盘（笔记本一般用的都是9.5mm，以实际型号为考量）</li>
<li>改刀</li>
</ul>
<h2 id="操作流程"><a href="#操作流程" class="headerlink" title="操作流程"></a>操作流程</h2><p><a href="//wenku.baidu.com/link?url=fc_G0iLVSsx2CZqEI-EWjwE43lwFqTNeRoxxo3adS1jIL3ApfM8jRWFtHLRW7UK0ojGAIseW-w_5jasP3Usepk-0U9BeKW95Y19dT0Qsizy">图文教程在这里</a><br>跟着教程走到拆下机械硬盘的那一步即可，别傻乎乎还往后拆……</p>
<h2 id="Warning"><a href="#Warning" class="headerlink" title="Warning"></a>Warning</h2><ul>
<li><p>硬件</p>
<ol>
<li>注意内存条下面有颗固定键盘的螺钉，取键盘前先松掉</li>
<li>拆主面板时，除了胶圈下面的螺钉，光驱位置还有颗螺钉，松掉</li>
<li>拆主面板时，拔数据线前，先把电池开关推倒OFF</li>
<li>装固态硬盘时，接口须插紧，这很好检测，只要与电脑上的螺钉眼合上即可，机械硬盘塞进托盘时应确定塞紧，昨天因为没塞紧，致使开机检测不到机械硬盘，这会导致装系统变复杂。</li>
<li>合上主面板之前，记得接好数据线以及把电池开关推倒ON</li>
</ol>
</li>
<li><p>软件</p>
<ol>
<li>机械硬盘里有系统，这是为什么强调机械硬盘需要插紧，开机直接进系统。</li>
<li>32位系统换成64位系统，利用nt6_hdd_installer安装系统，这个工具使用使用后，会在开机时让你选择启动项，通常在系统安装完成之后仍存在，解决方法很简单，再运行一次软件，选择卸载即可。</li>
</ol>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> tips </tag>
            
            <tag> ssd </tag>
            
            <tag> dell </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[CSS 定位 & 文档流]]></title>
      <url>http://lijundong.com/normal-flow/</url>
      <content type="html"><![CDATA[<h2 id="文档流小计"><a href="#文档流小计" class="headerlink" title="文档流小计"></a>文档流小计</h2><p>页面CSS布局虽然写了很多，但多为无章法的拼凑，对这方面的知识掌握的不系统，导致遇到问题发虚，最近看JS权威指南时多次遇到文档流，所以在此做一个总结。<br><em>欢迎指正！</em><br><a id="more"></a></p>
<h2 id="定位方式"><a href="#定位方式" class="headerlink" title="定位方式"></a>定位方式</h2><ul>
<li>身处Normal flow：块级元素(块级格式)、行内元素(行内格式)、相对定位(relative)</li>
<li>脱离Normal flow：浮动定位(float)、绝对定位(absolute)、固定定位(fixed)</li>
</ul>
<h3 id="Normal-flow"><a href="#Normal-flow" class="headerlink" title="Normal flow"></a>Normal flow</h3><p>“normal flow”不明白为什么会被翻译成文档流，也有人叫普通流、正常流，本以为是很高深的内容，实际就是语言文本从左到右，从上到下显示，这是传统HTML文档的文本布局。</p>
<h3 id="脱离Normal-flow"><a href="#脱离Normal-flow" class="headerlink" title="脱离Normal flow"></a>脱离Normal flow</h3><h4 id="浮动"><a href="#浮动" class="headerlink" title="浮动"></a>浮动</h4><ul>
<li>float：<br>  属性值：left|right|none|inherit<br>  初始值：none<br>  应用元素：所有元素<br>  继承性：无<br>  特点：<ul>
<li>浮动定位是脱离normal_flow</li>
<li>包含块：浮动元素最近的块级祖先。</li>
<li>浮动元素会生成一个块级框（行内框）。</li>
<li>浮动的元素不会超过父元素框</li>
<li>浮动的元素左右不会重叠，会依情况另起一行进行浮动。</li>
<li>浮动元素不能比之前所有的浮动元素或者块级元素的顶部更高。</li>
</ul>
</li>
<li>说到float，自然不能落下clear。<br>  clear：<br>  属性值：left|right|both|none|inherit<br>  初始值：none<br>  应用于：块级元素<br>  继承性：无<br>  对于clear的理解开始以为是消除浮动，然而实际是，块级元素通过配置clear属性，选择两边是否可以存在浮动元素，left、right分别是元素左边、右边不允许存在，而both则是两边都不允许浮动元素存在。</li>
</ul>
<h4 id="absolute"><a href="#absolute" class="headerlink" title="absolute"></a>absolute</h4><ul>
<li><p>特点：</p>
<ul>
<li>定位时，从文档流中删除，相对于其包含块，其边界根据偏移属性（top，left）放置。</li>
<li>绝对定位元素可能覆盖其他元素，或者被其他元素覆盖。</li>
<li>绝对定位元素的包含块是最近的position值不为static的祖先元素，通常选择一个元素     （其position为relative并且没有偏移）作为绝对定位的包含块。</li>
<li>如若为确保body元素为其后代建立一个包含块，而不是让用户代理选择初始包含块，则可以进行如下声明<code>body{position:relative;}</code></li>
</ul>
</li>
<li><p>水平居中<br>元素水平居中：左右外边距设置为auto，left、width、right不是auto，此时左右外边距会设置成相等的值。</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:relative;width:10em;height:10em; border:1px solid;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position :absolute;right:1em;left:1em;width:5em;height:100%;background:#aff;  margin:0 auto;"</span>&gt;</span>水平居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="//source.lijundong.com/16-3-8/58206411.jpg" alt="水平居中"></p>
<ul>
<li>垂直居中<br>元素垂直居中：上下外边距设置为auto，top、height、bottom不是auto，此时上下外边距设置成相等的值。<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position:relative;width:10em;height:10em; border:1px solid;"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"position :absolute;left:0;width:100%;background:#aff; height:5em; bottom :0;top:0;margin:auto 0;"</span>&gt;</span>垂直居中<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<p><img src="//source.lijundong.com/16-3-8/29762873.jpg" alt="垂直居中"></p>
<h4 id="fixed"><a href="#fixed" class="headerlink" title="fixed"></a>fixed</h4><p>固定定位虽然与绝对定位很相似，只不过其包含块是视窗，元素进行固定定位之后，会从文档流中完全去除，不会有相对于文档中任何部分的位置，即定位之后完全保持不动。</p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> html </tag>
            
            <tag> css </tag>
            
            <tag> 文档流 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Sublime Text3配置命令行工具]]></title>
      <url>http://lijundong.com/Sublime-Text3-set-command-line/</url>
      <content type="html"><![CDATA[<h2 id="命令行启动"><a href="#命令行启动" class="headerlink" title="命令行启动"></a>命令行启动</h2><p>每次用命令行new一个新文件都得在文件夹里打开，很不方便，一直都在用Sublime，想在命令行里启动Sublime。<br><a id="more"></a></p>
<h2 id="Windows配置Subl命令"><a href="#Windows配置Subl命令" class="headerlink" title="Windows配置Subl命令"></a>Windows配置Subl命令</h2><ul>
<li><p>方法一：将SublimeText的安装路径添加到环境变量中，使用<code>sublime_text</code>命令打开文件。<br>但是<code>sublime_text</code>这个命令太长，可以用<code>doskey</code>命令创建宏：<br><code>doskey subl=&quot;C:\Program Files\Sublime Text 2\sublime_text.exe&quot;</code></p>
</li>
<li><p>方法二：在SublimeText的安装目录下包含一个<code>subl.exe</code>，将这个文件复制到<code>C:\Windows\System32</code>路径下，使用<code>subl</code>命令打开文件。</p>
</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> sublimetext </tag>
            
            <tag> 命令行 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[又是一年]]></title>
      <url>http://lijundong.com/year-again/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=17904888&auto=0&height=66"></iframe>


<p>明天上午离校，转眼又是一年。</p>
<p>月初看了很多年末总结和新年计划，想着不能免俗，理应写一篇捋一捋过去的一年，拖沓到现在。</p>
<blockquote>
<p>一年的时间，结识了HB，从硬件转到Web，完成了一次骑行，找到了一个很棒的实验室，一群有趣的人，跟了一位靠谱的boss。回顾这一年，大概就这些了。</p>
</blockquote>
<a id="more"></a>
<p>寥寥几句轻描淡写的盖过了过去这一年，不禁想起YouTube上一段很热的视频，五分钟讲完一个人的一生，对生活有着决定性因素得选择屈指可数，我们在毫无意识的情况下已经做出了很多影响一生的决定。</p>
<p>今年的节奏会加快，会有挫折坎坷，相信也会有惊喜，加油。</p>
<p><em>生活嘛，最重要的是要开心！</em></p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[管理你的Kindle]]></title>
      <url>http://lijundong.com/Kindle-content-manage/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=16823351&auto=0&height=66"></iframe>

<h2 id="关于kindle"><a href="#关于kindle" class="headerlink" title="关于kindle"></a>关于kindle</h2><p>常说的kindle默认指代kindle电子书阅读器，但亚马逊除了硬件阅读器，也做了全平台的软件应用，我可以用我的kindle阅读器看书，同时也可以在手机（Android、iOS）和电脑（MacOS、windows）上阅读本地文件，看我在Amazon商城买的书，有没有觉得很方便，与此同时，问题也出现了，如此多的设备和文件，该怎么管理？<br><a id="more"></a></p>
<h2 id="设备与文件管理"><a href="#设备与文件管理" class="headerlink" title="设备与文件管理"></a>设备与文件管理</h2><p>此处的设备包括硬件阅读器与软件kindle，设备默认使用Amazon账号进行绑定，绑定成功后，就可以在Amazon的设备管理中进行管理。<img src="//source.lijundong.com/16-1-12/88803027.jpg" alt="进入设置"></p>
<h3 id="内容管理"><a href="#内容管理" class="headerlink" title="内容管理"></a>内容管理</h3><p>这些内容只限于从Amazon商城购买的书籍，操作包括删除或者推送到某个设备上。<br><img src="//source.lijundong.com/16-1-12/25550060.jpg" alt="文件管理"></p>
<h3 id="设备管理"><a href="#设备管理" class="headerlink" title="设备管理"></a>设备管理</h3><p>所有与Amazon账号绑定的设备在这里都可以看到，在这里你可以设置设备名，邮箱地址，或者注销设备。<br><em>注：下面的那个 kindle for pc 是个不存在的设备，那是第一次在windows平台上绑定Amazon账号到kindle，只是我没有注销登陆就重装了系统，于是这个设备就成了幽灵设备。</em><br><img src="//source.lijundong.com/16-1-12/41498799.jpg" alt="设备管理"></p>
<h2 id="文件推送"><a href="#文件推送" class="headerlink" title="文件推送"></a>文件推送</h2><p>在Amazon商城里买的书，在设备联网的条件下很快就同步到了所有设备上，体验很棒。除了Kindle格式 (.MOBI, .AZW)，kindle还支持其他格式的文件(Word、HTML、RTF、Text、JPEG、GIF、PNG、BMP、PDF),所以可以将这些文件推送到kindle上阅读，推送的方式有两种。</p>
<h3 id="USB线连"><a href="#USB线连" class="headerlink" title="USB线连"></a>USB线连</h3><p>使用USB就比较硬了，直接把kindle用数据线连接电脑，把需要推送的文件放在documents目录下即可，较大的文件建议通过这种方式，使用Email推送较大的文件审核不过，推送不了。</p>
<h3 id="Email推送"><a href="#Email推送" class="headerlink" title="Email推送"></a>Email推送</h3><p>相对于直接用数据线复制，Email推送就显得极客多了，个人觉得更方便。<br><strong>原理：</strong></p>
<ul>
<li>kindle设备具有一个email地址</li>
<li>用户把需要的文件以邮件的方式发给kindle的email地址</li>
<li>推送完成</li>
</ul>
<p><strong>开始推送：</strong></p>
<ul>
<li>Step1：给你的设备配置一个邮件地址，kindle阅读器有一个默认的邮箱地址，我把默认的邮箱地址改成了一个更容易记住的地址。<img src="//source.lijundong.com/16-1-12/82468726.jpg" alt="设备邮件设置"></li>
</ul>
<ul>
<li>Step2：设备有了邮箱地址，此时发送邮件给kindle是无法成功的（你的Amazon注册邮箱发送的邮件除外），除了你添加信任的邮箱地址，其余邮箱发送的内容都会被系统屏蔽，如果没有这个功能，难以想象我们每天会接收到多少垃圾邮件和广告。所以第二步要做的是添加信任邮箱。<br>管理我的内容和设备-&gt;设置-&gt;添加认可的电子信箱<img src="//source.lijundong.com/16-1-12/67873173.jpg" alt="添加认可的电子信箱"></li>
</ul>
<ul>
<li>Step3：开始推送：将文件以附件的形式发送到kindle邮箱地址，很快文件就会同步到kindle上。</li>
</ul>
<h2 id="kindle也可谈情说爱"><a href="#kindle也可谈情说爱" class="headerlink" title="kindle也可谈情说爱"></a>kindle也可谈情说爱</h2><p>曾在知乎上看过一个故事，主人公和女票跨国恋，女主在海外读书，男主在国内复读考研，住在地下室，因为地下室没有信号，写给她的信不能立即发出去，随即想到了一个方法，在地下室写好信放手机里用邮件发出去，回到地面有信号时，邮件自动发送，她的kindle便会同步内容，他们俩就这样互相写信度过了最困难的时光。<a href="//zhihu.com/question/28468835/answer/41341142?utm_campaign=webshare&amp;utm_source=weibo&amp;utm_medium=zhihu">原版在这里</a></p>
]]></content>
      
        <categories>
            
            <category> 工具使用 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> kindle </tag>
            
            <tag> 工具使用 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Chrome扩展[一]:简易时钟]]></title>
      <url>http://lijundong.com/Chrome-extension-one-clock/</url>
      <content type="html"><![CDATA[<h2 id="Chrome插件"><a href="#Chrome插件" class="headerlink" title="Chrome插件"></a>Chrome插件</h2><p>喜欢Chrome，简洁的设计，强悍的内核只是一方面，应用商店里丰富的扩展和插件才是让我对Chrome爱不释手的根本原因。这些扩展增强了Chrome的使用体验，同时也提高了开发人员的效率，最近用了一个很方便的便签应用，可惜字体只支持英文，看着让人恼火的中文，索性决定自己写一个。一个扩展很容易实现，Chrome可以直接编译JS代码，需要界面时可添加html文件，方式与网页相差无几。<br><strong>官方资源:</strong><br><a href="//developer.chrome.com/extensions/api_index">API文档</a><br><a href="//developer.chrome.com/extensions/samples#search:">Samples</a><br><a href="//open.chrome.360.cn/extension_dev/overview.html">中文API</a><br><a id="more"></a></p>
<p><strong>书籍:</strong><br><a href="//www.ituring.com.cn/book/1421">Chrome扩展及应用开发</a>。</p>
<h2 id="Hello-Chrome"><a href="#Hello-Chrome" class="headerlink" title="Hello Chrome"></a>Hello Chrome</h2><h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p>最后出来的效果是这样：<br><img src="//source.lijundong.com/16-1-11/63411267.jpg" alt=""></p>
<h3 id="结构"><a href="#结构" class="headerlink" title="结构"></a>结构</h3><h4 id="manifest-json"><a href="#manifest-json" class="headerlink" title="manifest.json"></a>manifest.json</h4><p>每一个扩展、可安装的WebApp、皮肤，都有一个manifest.json，里面提供了重要的信息<br><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">	"manifest_version": 2,                        //默认值 2</span><br><span class="line">	"name": "我的时钟",                          //扩展名</span><br><span class="line">	"version": "1.0",                           //版本信息</span><br><span class="line">	"description":"一个简单的Chrome时钟扩展",  //扩展描述</span><br><span class="line">	"icons": &#123;                                //扩展的图标</span><br><span class="line">		"16": "images/icon16.png",</span><br><span class="line">		"48": "images/icon48.png",</span><br><span class="line">		"128": "images/icon128.png"</span><br><span class="line">	&#125;,</span><br><span class="line">	"browser_action": &#123;                  //用于在chrome主工具条的地址栏右侧增加一个图标。</span><br><span class="line">		"default_icon": &#123;</span><br><span class="line">			"19": "images/icon19.png",</span><br><span class="line">			"38": "images/icon38.png"</span><br><span class="line">		&#125;,</span><br><span class="line">		"default_title": "我的时钟",      //鼠标悬在扩展图标上显示的信息</span><br><span class="line">		"default_popup": "popup.html"     //默认的html文件</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- popup.html --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span><br><span class="line">		*&#123;</span><br><span class="line">			<span class="attribute">margin</span>:<span class="number">0</span>;</span><br><span class="line">			<span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="selector-tag">body</span>&#123;</span><br><span class="line">			<span class="attribute">width</span>:<span class="number">200px</span>;</span><br><span class="line">			<span class="attribute">height</span>:<span class="number">100px</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="selector-tag">div</span>&#123;</span><br><span class="line">			<span class="attribute">line-height</span>:<span class="number">100px</span>;</span><br><span class="line">			<span class="attribute">font-size</span>:<span class="number">42px</span>;</span><br><span class="line">			<span class="attribute">text-align</span>:center;</span><br><span class="line">		&#125;</span><br><span class="line">	</span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"clock_div"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">	<span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span><span class="attr">src</span>=<span class="string">"js/my_clock.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="JS"><a href="#JS" class="headerlink" title="JS"></a>JS</h4><p>因为Chrome不允许将javascript代码段直接内嵌入HTML文档，所以我们需要通过外部引入的方式引用JS文件。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">my_clock</span>(<span class="params">el</span>) </span>&#123;</span><br><span class="line">	<span class="keyword">var</span> today = <span class="keyword">new</span> <span class="built_in">Date</span>();</span><br><span class="line">	<span class="keyword">var</span> h = today.getHours();</span><br><span class="line">	<span class="keyword">var</span> m = today.getMinutes();</span><br><span class="line">	<span class="keyword">var</span> s = today.getSeconds();</span><br><span class="line">	m = m &gt;= <span class="number">10</span> ? m : (<span class="string">'0'</span> + m);</span><br><span class="line">	s = s &gt;= <span class="number">10</span> ? s : (<span class="string">'0'</span> + s);</span><br><span class="line">	el.innerHTML = h + <span class="string">":"</span> + m + <span class="string">":"</span> + s;</span><br><span class="line">	setTimeout(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">		my_clock(el)</span><br><span class="line">	&#125;, <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> clock_div = <span class="built_in">document</span>.getElementById(<span class="string">"clock_div"</span>);</span><br><span class="line">my_clock(clock_div);</span><br></pre></td></tr></table></figure></p>
<h3 id="打包"><a href="#打包" class="headerlink" title="打包"></a>打包</h3><p>进入chrome://extensions/，右上角打开开发者模式<br>查看效果：选择已解压的扩展程序，选择写好的文件夹即可。<br>程序打包：选择打包扩展程序，选择写好的文件夹，打包后得到一个crx文件。<br><a href="//source.lijundong.com/16-1-11/97227943.jpg"></a></p>
<h2 id="扩展推荐"><a href="#扩展推荐" class="headerlink" title="扩展推荐"></a>扩展推荐</h2><p>livereload：可以与sublimeText通信，实时刷新页面。<br>pocket：标记没有读完或者将要阅读的网页<br>悦读：增强阅读体验同时可以绑定Evernote<br>ADBlock:强大的广告拦截<br>极简图床：可以绑定七牛云，方便快捷的存储图片，麻麻再也不用担心我Markdown写的博客图片存哪了（其实百度云也可以）<br>anydo：多平台同步的GTD</p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> chrome </tag>
            
            <tag> 扩展 </tag>
            
            <tag> javascript </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[『当李晓峰成为Sky』]]></title>
      <url>http://lijundong.com/when-lixiaofeng-become-sky/</url>
      <content type="html"><![CDATA[<p>先来首歌怀念一下</p>
<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="420" height="86" src="//music.163.com/outchain/player?type=2&id=4017240&auto=0&height=66"></iframe>

<h3 id="0"><a href="#0" class="headerlink" title="0%"></a>0%</h3><p>细想应该是高三接触到这本书，偶然翻到跃峰买的一本电子杂志，sky在杂志里开了一篇专栏，连载的是他的一本自传『当李晓峰成为Sky』，那一刊记载的正是sky从郑州回家，再次上路后彻底转型为魔兽玩家的那段时光，光阴如梭，白云苍狗，没想到三四年过去了我一直念念不忘，很久之前就已经入手了电子版，只是重度拖延症一直延期到Kindle到手的第二天，利用一节科技英语课，开始看这本执念了三四年的书。<br><a id="more"></a></p>
<h3 id="25"><a href="#25" class="headerlink" title="25%"></a>25%</h3><p>初始看到了“深蓝网吧”，陌生又熟悉，印象里没有去过这家网吧，直觉告诉我这就是杂志里连载文章提到的那家网吧，意味着我已经看到了当年那篇文章提到的那一段时间，这种现实与过去重叠的错觉感，像是一把钥匙，打开了记忆的那扇门，门内星星点点的片段鱼贯而出，从我眼前划过，一幕幕幻灯片以流星雨的姿态转瞬即逝，让还未缓过神来的我徒有唏嘘。第一时间给跃峰留言，只是不知道他是否还能记起。</p>
<h3 id="50"><a href="#50" class="headerlink" title="50%"></a>50%</h3><p>这本书看到这里已经看了一半了，我既不玩星际也不玩魔兽，我有大侠梦，所以我崇拜大侠，即便他的江湖于我无关。我很喜欢这本书，因为我看到了那一份不屈，那一份执着，还看到了一个人，那段夜夜通宵练技能，每天水蒸包果腹的时光让我自惭形秽，我开始反思，我可以为了我的梦想付出多少，我迫不及待的记下此时此刻我的想法。</p>
<h3 id="70"><a href="#70" class="headerlink" title="70%"></a>70%</h3><p>后半段，sky开始走上传奇之路，然而我知道，那一件件荣耀，一座座奖杯都是长年累月的熬夜练习换来的，书已经看了70%，想的事情也多了起来，最近的一门考试在两周后，转眼大三的上半学期已经过去了一大半了，做的事情并没有多少，现实也没有改变多少，我的计划依旧只是计划，也许生活的太轻松，在sky之前很多高手选择退役，一方面肯定有放弃坚持的因素，另一个很重要的原因我相信是他们有退路，而sky的人生别无选择，如果在电竞上做不到登峰造极，后退的机会可能都没有，连个骨科医生都做不了，像是一头被逼到死角的困兽，除了置之死地而后生，殊死搏斗一番尝试翻盘，留给他的只能是灭亡，所以他奋不顾身，忘掉一切，将生活投入到了电竞，就像疯狂的程序员里面的绝影！ </p>
<h3 id="80"><a href="#80" class="headerlink" title="80%"></a>80%</h3><p>整本书花了近60%的篇幅描述未成名之前的生活经历，整日的训练，还未成为职业之前，因为父母不支持，需要四下打比赛赚生活费，然而对拮据的生活并没有很大程度的改善，多数时间都是朋友资助过来，那段时光之前也有描述，每天十个水煎包，夜夜通宵，这样的日子坚持三四年之久，SKy自己也坦言，倘若时光倒流，他不确定他能否坚持下来，其实年轻时的自己，并没有坚持一说，只是想极力的努力的想去证明自己，那些对于未来的YY成了我们最大的精神食粮，我们忘掉了身边的一切，心里只有一个声音练习！练习！！再练习！！！我们很累，但是我们更渴望看到梦想的一步步逼近，所以我们放弃休息，继续练习。</p>
<p>年轻的时候，你愿意为了喜欢的女孩子，花上一中午的时间爬遍整个村的树寻蝉壳，只因为她无意间说了句喜欢；<br>年轻的时候，你为了在校运会篮球赛上精彩的表现一把，没日没夜的练习球技，即便你从未接触过篮球，即便你一时兴起；<br>年轻的时候，你因为脑子里一闪而过的YY，浪子回头，幡然悔悟，决定对自己狠一把，即便那个画面只是一时YY，乐此不疲！</p>
<blockquote>
<p>年轻真好<br>年轻时那么鲁莽<br>年轻相信一切可以努力的梦想<br>年轻甚至相信那些努力不了的梦想<br>年轻真好<br>年轻时那么倔强<br>我们一路向北，誓不回头<br>我们执拗着梦想，执拗着坚信<br>我们努力着，尽最大的努力去达到我们的目标<br>我们坚持着，日复一日，年复一年<br>我们把最好的青春，拿去赌，赌未来，赌自己想要的一片天<br>读到此处，你的脑海出现的那幅画面是如此熟悉，却又如此遥远<br>我们再也回不去，回不去那时，一切都有希望的青春<br>已经忘了上次幻想未来的时间是何时<br>对于生活，似乎忙的少有了期待<br>对于人生，也就这样吧<br>然后提笔写下，年轻真好。</p>
</blockquote>
<h3 id="100"><a href="#100" class="headerlink" title="100%"></a>100%</h3><p>今天把『当李晓峰成为Sky』看完了，像是陪着一个朋友走了好久，历经了所有的荣耀与苦难，终于要分别了，结局像是彼此告别，他说他会一直坚持下去，一直努力下去，互相道声珍重，江湖再见！</p>
<p>值得一提的是看这本书的同时，我脑海里不断显现出绝影的身影，『疯狂的程序员』的作者，这本书算是他的自传，一个疯狂的人，成就了一段传说，让我们这些后来的学弟时常瞻仰，只是疯狂到几近癫狂的状态时，辉煌戛然而止，让人唏嘘不已。</p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 读书 </tag>
            
            <tag> 电竞 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[记暑假骑行川藏]]></title>
      <url>http://lijundong.com/cycling-on-318/</url>
      <content type="html"><![CDATA[<iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="500" height="86" src="//music.163.com/outchain/player?type=2&id=439034&auto=0&height=66"></iframe>



<p>暑假的骑行本该以这篇总结结束的，一直拖到现在。</p>
<p>7.15成都出发，8.5到达拉萨，历时二十一天，行程2100+km，翻了13座山（两座5000+，9座4000+，两座4000-），爆了一个外胎和一个内胎，都是后胎，同时爆的……，一行四人，路上结识三位，七人布达拉宫广场举车，喝拉萨啤酒，这些事情我会记得很久。<br><a id="more"></a><br><img src="//source.lijundong.com/15-9-12/81849536.jpg" alt="海拔"></p>
<p><img src="//source.lijundong.com/15-9-14/27494779.jpg" alt="路线"></p>
<p>路途中日记零零散散的写了几天，终究没有继续，始终觉得一段经历经过时间冲刷，模糊了脑海里的大半，这段经历的价值才会显露，流水账索性不记也罢。现在回想这段路，一路艰险，苦中作乐！</p>
<p>骑行吧里每天都会有人出发，我钦佩他们的勇气，每天都有人到达，我钦佩他们的毅力。<br>因为有渴望，很久一段时间，我一直看着别人的旅途，因为少一份勇气，我的旅途却无限期的延迟在我的脑海里。因为没有信心，一直选择等待，等时机，等自己，无限期的等，最终妥协于懦弱，就这样一天天平庸在人群中，黯淡了那些有过的牛掰的梦想，刺眼的光芒！如果没有上路，所有的一切都只是幻想，泡影而已。</p>
<blockquote>
<p>如果没有上路，<br>我肯定不知道骑行开始后的三四天，胳膊，腿，屁股原来可以这么疼，过了这个阶段，疼的没了知觉，整天一瘸一拐，也就适应了；<br>我不会在雨天爬折多山，雨衣外面下着大雨，里面汗流浃背，我自然也不会在那段海拔4000+的理塘去毛垭草原的路上经历两次冰雹，大风夹着冰雹扎的脸刺疼，衣服干了又湿，湿了又湿；<br>我不会知道，我可以连续骑五个小时爬上5008的东达山，自然也不知道骑了两个多小时海拔下降800+的下坡有多爽；<br>我不会知道悬崖一侧没有护栏的盘山公路是多恐怖，在加上暴雨时的妖风不断把你往边边推，我也不会知道，那时的心中其实会有很多羊驼出现的；<br>我不会知道，出了巴塘界时，QQ的消息铃声结束了三天的无网生活，像是从类人猿向人类文明的进化，一群人奔走相告，差点泪流满面；<br>我不会知道，进了拉萨界一直在找的布达拉宫终于出现在眼前，那种鸡皮疙瘩从头麻到脚的感觉是如此透彻，一群人再次奔走相告，几乎泪流满面，一路嘶吼着进城！</p>
</blockquote>
<p>我会一直记得，爬到折多塘时看到到远处耸立的雪山，阳光照在那根超大号冰淇淋的奶油上，泛着亮光，十分诱人。</p>
<p>我会一直记得，连续两天在海拔4000+上骑，看尽了天的透蓝，也见识了挂在天边的巨型棉花糖，去毛垭草原的路上遇到的彩虹挂在棉花糖上，变成了彩色的棉花糖。</p>
<p>我会一直记着，翻高尔寺山时，抄近道走还没通车的高尔寺隧道，爬了两个小时的坡，看到的却是被封的隧道，当时雨下正大，我们几个人就这样在还没通车，渺无人烟并且下着大雨的大山深处的某一段公路上不知所措，那群叫做羊驼的动物再次出现在胸口，当时突然冒出个念头“如果此刻在学校或者回合肥了，应该都不会是这样的境遇吧！”，最后无奈原路返回，下坡，速度有些快，夹杂着冰雹的大雨扎在脸上，视线被雨水模糊的只能大概辨认方向，那时就在想“一定会记住这个场景很久吧”，至少到现在都很清晰，再也不敢抄近道。</p>
<p>我会一直记着，所波大叔家的管饱的牦牛肉炖土豆，毛垭草原上远处山脚下是藏民的雪白的帐篷，傍晚的风很大，为了不弄乱我们所剩无几的发型，一群人窝在客厅里看新闻联播，等着传说中的毛牛肉炖土豆。</p>
<p>我会一直记着，在藏民们怪异的眼神里，我们一路吼着叫向布达拉宫奔去。</p>
<p>很感激这群队友，一路走过来，很照顾我，我们一起装逼（图一），一起落魄（图二），一起乡下人进城（图三四在八宿），浩子就是每个故事里的那个壮（pang）汉（zi），多亏了他带的药和外胎，棍哥一家人很热情，阿姨和姐姐包的饺子很好吃，棍哥现在常驻拉萨了，岩哥有种看透世俗的洒脱（全体狂笑），覃lang是成体的，体力惊人，开始还傻乎乎的跟着他跑，知道身份之后所有人大呼上当，一乐中途摔得最厉害，拖着残躯还把我们远远甩在身后，他是从西安到成都，再到拉萨，最后是举哥，图片中没有他，因为他在全程在看斗破苍穹。（这是他急迫到达拉萨的动力）</p>
<p><img src="//source.lijundong.com/15-12-21/1300684.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/5312845.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/5468796.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/84491210.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/23689144.jpg" alt=""></p>
<p><img src="//source.lijundong.com/15-9-15/11298532.jpg" alt=""><br><img src="//source.lijundong.com/15-9-14/11173481.jpg" alt=""><br><img src="//source.lijundong.com/15-9-14/64107524.jpg" alt=""><br><img src="//source.lijundong.com/15-9-14/765417.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/32269305.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/90019523.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/68043393.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/3279976.jpg" alt=""><br><img src="//source.lijundong.com/15-12-21/91059524.jpg" alt=""><br>最后是我和坐骑！</p>
<p><img src="//source.lijundong.com/15-9-14/23497523.jpg" alt=""><img src="//source.lijundong.com/15-9-14/40424941.jpg" alt=""><img src="//source.lijundong.com/15-9-14/5856835.jpg" alt=""></p>
<p>还有他们</p>
<p><img src="//source.lijundong.com/16-3-12/2706503.jpg" alt="队友"></p>
<hr>
<p>高三那年，准备和阿来骑行去黄山，300km，松当时还送了我一个包作送行，但老爸的第一反应是“你在逗我！”然后就没有然后了，大一暑假，准备了好久的四川骑回合肥计划因为小组培训被搁置，只是坑了当时的两位队友，觉得十分亏欠，那时候就觉得以后再也没那么好的机会了，而生活就是这么戏剧，在我准备妥当时将我拦下，却在措不及防时匆匆上路。</p>
<p>那些吹过的牛，在我忘记之前一头头把它们送上天！</p>
<p><em>ps:长久不说话，就成了哑巴，很久不写字，写了删，删了又删，这两天的状态就像个哑巴支支吾吾忘了怎么表达！</em></p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
            <tag> 骑行 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>http://lijundong.com/Hello%20World/</url>
      <content type="html"><![CDATA[<h3 id="About"><a href="#About" class="headerlink" title="About"></a>About</h3><p>写博客的习惯源于想哥，最初在CSDN上写，后转到cnBlogs上，最近给自己搭了一个空间，记录自己的思考，技术学习、生活五味。</p>
<blockquote>
<p>借刘未鹏前辈语：<br>一行字被你写下来之后，你就不用在将其费力的保持在大脑的临时记忆中，因为这行黑底白字会不断地通过视觉刺激来提醒你它的存在，于是你就可以将空出来的思维精力用于反思你自己的观点<br><a id="more"></a></p>
</blockquote>
<h3 id="技术支持"><a href="#技术支持" class="headerlink" title="技术支持"></a>技术支持</h3><blockquote>
<p>博客由<a href="//hexo.io/">Hexo</a>支撑，部署在<a href="">Github</a>上，使用的主题是<a href="//github.com/iissnan/hexo-theme-next">Next</a>，评论系统由<a href="//duoshuo.com/">多说</a>强力驱动，DNS解析由<a href="//www.dnspod.cn/">DNSPod</a>支持。</p>
</blockquote>
<h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><p>目前站点放在阿里云，DNS 服务提供商从 Cloudflare 转到了阿里云解析。</p>
<p><em>生活，最重要的就是要开心嘛！</em></p>
]]></content>
      
        <categories>
            
            <category> 生活 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> life </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Canvas制作排序算法演示动画]]></title>
      <url>http://lijundong.com/Canvas-animation-about-sort/</url>
      <content type="html"><![CDATA[<p>Tips:<br>形象化演示排序算法可以让初学者快速理解，最近在看canvas，试着用js+canvas自己做了一个。<br>已有比较好的demo：<a href="//jun-lu.github.io/SortAnimate/index.html">jun-lu的SortAnimate</a>，<a href="//www.webhek.com/misc/comparison-sort">旧金山大学的David Galles教授的算法演示课件</a>。</p>
<h2 id=""><a href="#" class="headerlink" title=""></a><a id="more"></a></h2><h3 id="实现思路"><a href="#实现思路" class="headerlink" title="实现思路"></a>实现思路</h3><ul>
<li>获取输入字符串</li>
<li>存入数组<code>S[]</code>中</li>
<li>新建一个对象数组<code>Rect[]{ x , y , target_x , target_y ,   text:S[i]}</code>（注：<code>x , y</code> 是当前坐标，<code>target_x , target_y</code> 是目的坐标，<code>text</code> 记录字符）</li>
<li>排序</li>
<li>使用插入排序进行顺序排序，当数值有交换行为时， 用<code>track_insert[]</code>记录进行交换的元素在数组中的位置（方便在绘制动画时进行坐标定位）</li>
<li>因为我用的是插入排序，属于<code>arr[i]</code>和<code>arr[i+1]</code>进行交换，所以只需要记录<code>i</code>就可以。<ul>
<li>绘制</li>
</ul>
</li>
<li>图片绘制<code>function Draw(){}</code></li>
<li>图片坐标更新<code>function Update(){}</code></li>
<li>使用<code>setInterval()</code>定时调用<code>Draw()</code>和<code>Update()</code>函数进行页面刷新</li>
</ul>
<h3 id="效果"><a href="#效果" class="headerlink" title="效果"></a>效果</h3><p><img src="//source.lijundong.com/15-9-5/33395157.jpg" alt="初始界面"></p>
<p><img src="//source.lijundong.com/15-9-5/72285328.jpg" alt="排序过程"></p>
<p><img src="//source.lijundong.com/15-9-5/80070619.jpg" alt="gif演示"></p>
<h3 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h3><p>做动画都是一个原理，不短刷新更新坐标，擦除，绘制，之前用opencv做的2d的小游戏也是同样的原理。</p>
<h3 id="Source-code"><a href="#Source-code" class="headerlink" title="Source code"></a>Source code</h3><h4 id="html"><a href="#html" class="headerlink" title=".html"></a>.html</h4><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">http-equiv</span>=<span class="string">"Content-Type"</span> <span class="attr">content</span>=<span class="string">"text/html;charset=utf-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> <span class="attr">href</span>=<span class="string">"css/demo.css"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span><span class="attr">src</span>=<span class="string">"js/demo2.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Demo<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span>  </span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"container"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span>Input String：</span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span>  <span class="attr">name</span>=<span class="string">"string"</span> <span class="attr">id</span>=<span class="string">"tin"</span> <span class="attr">type</span>=<span class="string">"text"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span>                    </span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"showDemo()"</span><span class="attr">id</span>=<span class="string">"bin"</span> <span class="attr">value</span>=<span class="string">"Show"</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">canvas</span> <span class="attr">id</span>=<span class="string">"mycanvas"</span>  &gt;</span><span class="tag">&lt;/<span class="name">canvas</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h4 id="js"><a href="#js" class="headerlink" title=".js"></a>.js</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> S;</span><br><span class="line"><span class="keyword">var</span> Coordinate_y = <span class="number">40</span>;</span><br><span class="line"><span class="keyword">var</span> Rect = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">var</span> track_insert = <span class="keyword">new</span> <span class="built_in">Array</span>();</span><br><span class="line"><span class="keyword">var</span> cons = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">var</span> cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">func</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line"><span class="comment">//获取字符串，存入数组</span></span><br><span class="line">    S = <span class="built_in">document</span>.getElementsByName(<span class="string">"string"</span>)[<span class="number">0</span>].value.split(<span class="string">""</span>);</span><br><span class="line"><span class="comment">//依据数组元素，完成对象数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; S.length; i++) &#123;</span><br><span class="line">        <span class="keyword">var</span> rect = &#123;</span><br><span class="line">            x: <span class="number">30</span> * i,</span><br><span class="line">            y: Coordinate_y,</span><br><span class="line">            target_x: <span class="number">30</span> * i,</span><br><span class="line">            target_y: Coordinate_y,</span><br><span class="line">            text: S[i]</span><br><span class="line">        &#125;</span><br><span class="line">        Rect.push(rect);</span><br><span class="line">    &#125;</span><br><span class="line">    insertSort(S);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">insertSort</span>(<span class="params">arr</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> i = <span class="number">1</span>,</span><br><span class="line">    j, key, temp;</span><br><span class="line">    <span class="keyword">for</span> (; i &lt; arr.length; i++) &#123;</span><br><span class="line">        j = i;</span><br><span class="line">        key = arr[i];</span><br><span class="line">        <span class="keyword">while</span> (--j &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span> (arr[j] &gt; key) &#123;</span><br><span class="line">                arr[j + <span class="number">1</span>] = arr[j];</span><br><span class="line">                arr[j] = key;</span><br><span class="line"><span class="comment">//当数据有交换时，记录下标</span></span><br><span class="line">                track_insert.push(j);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//坐标更新</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">update</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (cons &gt; track_insert.length) &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (cons == <span class="number">0</span>) &#123;</span><br><span class="line">        cnt = track_insert[cons];</span><br><span class="line">        Rect[cnt].target_x = Rect[cnt + <span class="number">1</span>].x;</span><br><span class="line">        Rect[cnt + <span class="number">1</span>].target_x = Rect[cnt].x;</span><br><span class="line">        cons += <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(cnt);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (Rect[cnt].x == Rect[cnt].target_x) &#123;</span><br><span class="line">        <span class="keyword">if</span> (cons == track_insert.length) &#123;</span><br><span class="line">            cons += <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">var</span> tem = Rect[cnt];</span><br><span class="line">        Rect[cnt] = Rect[cnt + <span class="number">1</span>];</span><br><span class="line">        Rect[cnt + <span class="number">1</span>] = tem;</span><br><span class="line">        cnt = track_insert[cons];</span><br><span class="line">        Rect[cnt].target_x = Rect[cnt + <span class="number">1</span>].x;</span><br><span class="line">        Rect[cnt + <span class="number">1</span>].target_x = Rect[cnt].x;</span><br><span class="line">        cons += <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">console</span>.log(cnt);</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        Rect[cnt].x += <span class="number">1</span>;</span><br><span class="line">        Rect[cnt + <span class="number">1</span>].x -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//绘制图像</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">draw</span>(<span class="params">context</span>) </span>&#123;</span><br><span class="line">    context.clearRect(<span class="number">0</span>, <span class="number">0</span>, context.canvas.width, context.canvas.height);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">var</span> i = <span class="number">0</span>; i &lt; Rect.length; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((Rect[i].x - Rect[i].target_x) &gt;= <span class="number">2</span> || (Rect[i].x - Rect[i].target_x) &lt; <span class="number">-2</span>) &#123;</span><br><span class="line">            context.fillStyle = <span class="string">"yellow"</span>;</span><br><span class="line">            context.fillRect(Rect[i].x, Rect[i].y, <span class="number">25</span>, <span class="number">25</span>);</span><br><span class="line">            context.fillStyle = <span class="string">"blue"</span>;</span><br><span class="line">            context.fillText(Rect[i].text, Rect[i].x + <span class="number">10</span>, Rect[i].y + <span class="number">15</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            context.strokeStyle = <span class="string">"blue"</span>;</span><br><span class="line">            context.strokeRect(Rect[i].x, Rect[i].y, <span class="number">25</span>, <span class="number">25</span>);</span><br><span class="line">            context.fillStyle = <span class="string">"blue"</span>;</span><br><span class="line">            context.fillText(Rect[i].text, Rect[i].x + <span class="number">10</span>, Rect[i].y + <span class="number">15</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    context.fillText(<span class="string">"插入排序"</span>, <span class="number">40</span>, <span class="number">80</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">showDemo</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    func();</span><br><span class="line">    <span class="keyword">var</span> c = <span class="built_in">document</span>.getElementById(<span class="string">"mycanvas"</span>);</span><br><span class="line">    c.width = <span class="number">600</span>;</span><br><span class="line">    c.height = <span class="number">300</span>;</span><br><span class="line">    <span class="keyword">var</span> context = c.getContext(<span class="string">"2d"</span>);</span><br><span class="line"><span class="comment">//40ms调用一次函数</span></span><br><span class="line">    setInterval(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        draw(context);</span><br><span class="line">        update();</span><br><span class="line">    &#125;, <span class="number">40</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="css"><a href="#css" class="headerlink" title=".css"></a>.css</h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">input#tin&#123;</span><br><span class="line">    margin-bottom: 5px;</span><br><span class="line">    background-color: #fff;opacity:0.85;8</span><br><span class="line">    width:20px;</span><br><span class="line">    height:25px; </span><br><span class="line">    border-width: 1;</span><br><span class="line">    font-size: 17px; </span><br><span class="line">    color: #000; </span><br><span class="line">    font-weight: 500; </span><br><span class="line">    border-radius: 5px;</span><br><span class="line">    cursor:pointer; </span><br><span class="line">&#125;</span><br><span class="line">input#bin&#123;</span><br><span class="line">    background-color: gray;</span><br><span class="line">    width:80; </span><br><span class="line">    height:25; </span><br><span class="line">    border-width: 2; </span><br><span class="line">    font-size: 20px; </span><br><span class="line">    color: #FFFFFF; </span><br><span class="line">    font-weight: 500;</span><br><span class="line">    cursor:pointer; </span><br><span class="line">    border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">canvas#mycanvas&#123;</span><br><span class="line">    border:1px solid;</span><br><span class="line">    width: 600px;</span><br><span class="line">    height: 300px;</span><br><span class="line">    margin-top: 5px;</span><br><span class="line">    border-radius: 5px;</span><br><span class="line">&#125;</span><br><span class="line">div#container&#123;</span><br><span class="line">    margin-left: 70px;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> canvas </tag>
            
            <tag> 排序 </tag>
            
            <tag> 动画 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[编写语法分析程序]]></title>
      <url>http://lijundong.com/Syntactic%20analysis/</url>
      <content type="html"><![CDATA[<h3 id="Note："><a href="#Note：" class="headerlink" title="Note："></a>Note：</h3><p>这学期修了严厉的Mr.J的编译原理，不定期更新笔记！<br>欢迎指正！</p>
<h3 id="Github"><a href="#Github" class="headerlink" title="Github:"></a>Github:</h3><ul>
<li><a href="//github.com/lijundong/lexi">词法分析</a></li>
<li><a href="//github.com/lijundong/syntax">语法分析</a></li>
<li><a href="//github.com/lijundong/semantic">语义分析</a></li>
</ul>
<hr>
<a id="more"></a>
<h3 id="文法改造"><a href="#文法改造" class="headerlink" title="文法改造"></a>文法改造</h3><h4 id="1-文法"><a href="#1-文法" class="headerlink" title="1.文法"></a>1.文法</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="number">1</span>) &lt;program&gt;→&#123;&lt;declaration_list&gt;&lt;statement_list&gt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) &lt;declaration_list&gt;→&lt;declaration_list&gt;&lt;declaration_stat&gt; | ε</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) &lt;declaration_stat&gt;→<span class="keyword">int</span> ID;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>) &lt;statement_list&gt;→&lt;statement_list&gt;&lt;statement&gt;| ε</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>) &lt;statement&gt;→ &lt;if_stat&gt;|&lt;while_stat&gt;|&lt;for_stat&gt;|&lt;read_stat&gt;</span><br><span class="line">               |&lt;write_stat&gt;|&lt; compound_stat &gt; |&lt;expression_stat&gt;</span><br><span class="line">               </span><br><span class="line"><span class="number">6</span>) &lt;if_stat&gt;→ <span class="keyword">if</span> (&lt;expr&gt;) &lt;statement &gt;| <span class="keyword">if</span> (&lt;expr&gt;) &lt;statement &gt;<span class="keyword">else</span> &lt; statement &gt;</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) &lt;while_stat&gt;→ <span class="keyword">while</span> (&lt;expr &gt;) &lt; statement &gt;</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) &lt;for_stat&gt;→ <span class="keyword">for</span> (&lt;expr&gt;;&lt;expr&gt;;&lt;expr&gt;)&lt;statement&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>) &lt;write_stat&gt;→write &lt;expression&gt;;</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>) &lt;read_stat&gt;→read ID;</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>)&lt;compound_stat&gt;→&#123;&lt;statement_list&gt;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>)&lt;expression_stat&gt;→&lt; expression &gt;;|;</span><br><span class="line"></span><br><span class="line"><span class="number">13</span>)&lt; expression &gt;→ ID=&lt;bool_expr&gt;|&lt;bool_expr&gt;</span><br><span class="line"></span><br><span class="line"><span class="number">14</span>)&lt;bool_expr&gt;→&lt;additive_expr&gt; |&lt; additive_expr &gt;(&gt;|&lt;|&gt;=|&lt;=|==|!=)&lt; additive_expr &gt; </span><br><span class="line"></span><br><span class="line"><span class="number">15</span>)&lt; additive_expr&gt;→&lt; additive_expr&gt;+&lt;term&gt;|&lt; additive_expr&gt;-&lt;term&gt;|&lt; term &gt; </span><br><span class="line"></span><br><span class="line"><span class="number">16</span>)&lt; term &gt;→&lt; term &gt;*&lt;factor&gt;|&lt; term &gt;/&lt;factor&gt;|&lt; factor &gt;</span><br><span class="line"></span><br><span class="line"><span class="number">17</span>)&lt; factor &gt;→(&lt; expression &gt;)|ID|NUM</span><br></pre></td></tr></table></figure>
<h4 id="2-消除左递归："><a href="#2-消除左递归：" class="headerlink" title="2.消除左递归："></a>2.消除左递归：</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">a.</span><br><span class="line">原型：<span class="tag">&lt;<span class="name">declaration_list</span>&gt;</span>→<span class="tag">&lt;<span class="name">declaration_list</span>&gt;</span><span class="tag">&lt;<span class="name">declaration_stat</span>&gt;</span> | ε</span><br><span class="line">改造：<span class="tag">&lt;<span class="name">declaration_list</span>&gt;</span> → A  ，A →<span class="tag">&lt;<span class="name">declaration_stat</span>&gt;</span>A|ε</span><br><span class="line"></span><br><span class="line">b.</span><br><span class="line">原形：<span class="tag">&lt;<span class="name">statement_list</span>&gt;</span>→<span class="tag">&lt;<span class="name">statement_list</span>&gt;</span><span class="tag">&lt;<span class="name">statement</span>&gt;</span>| ε</span><br><span class="line">改造：<span class="tag">&lt;<span class="name">statement_list</span>&gt;</span> → B  ， B →<span class="tag">&lt;<span class="name">statement</span>&gt;</span>B| ε</span><br><span class="line"></span><br><span class="line">c.</span><br><span class="line">原形：<span class="tag">&lt; <span class="attr">additive_expr</span>&gt;</span>→<span class="tag">&lt; <span class="attr">additive_expr</span>&gt;</span>+<span class="tag">&lt;<span class="name">term</span>&gt;</span>|<span class="tag">&lt; <span class="attr">additive_expr</span>&gt;</span>-<span class="tag">&lt;<span class="name">term</span>&gt;</span>|<span class="tag">&lt; <span class="attr">term</span> &gt;</span></span><br><span class="line">改造：<span class="tag">&lt; <span class="attr">additive_expr</span>&gt;</span> →<span class="tag">&lt; <span class="attr">term</span> &gt;</span>C  ， C →+<span class="tag">&lt;<span class="name">term</span>&gt;</span>C|-<span class="tag">&lt;<span class="name">term</span>&gt;</span>C|ε</span><br></pre></td></tr></table></figure>
<h4 id="3-提取公因式："><a href="#3-提取公因式：" class="headerlink" title="3.提取公因式："></a>3.提取公因式：</h4><figure class="highlight bnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">a.</span><br><span class="line">原形：<span class="attribute">&lt;bool_expr&gt;</span> →<span class="attribute">&lt;additive_expr&gt;</span>|<span class="attribute">&lt; additive_expr &gt;</span>(&gt;|<span class="attribute">&lt;|&gt;</span>=|<span class="attribute">&lt;=|==|!=)&lt; additive_expr &gt;</span> </span><br><span class="line"></span><br><span class="line">改造：<span class="attribute">&lt;bool_expr&gt;</span> →<span class="attribute">&lt;additive_expr&gt;</span>E </span><br><span class="line">E→ε|(&gt;|<span class="attribute">&lt;|&gt;</span>=|<span class="attribute">&lt;=|==|!=)&lt; additive_expr &gt;</span> </span><br><span class="line">b. </span><br><span class="line">原形：<span class="attribute">&lt; term &gt;</span>→<span class="attribute">&lt; term &gt;</span>*<span class="attribute">&lt;factor&gt;</span>|<span class="attribute">&lt; term &gt;</span>/<span class="attribute">&lt;factor&gt;</span>|<span class="attribute">&lt; factor &gt;</span></span><br><span class="line">改造：<span class="attribute">&lt; term &gt;</span> →<span class="attribute">&lt; factor &gt;</span>D</span><br><span class="line">D →*<span class="attribute">&lt;factor&gt;</span>D|/<span class="attribute">&lt;factor&gt;</span>D|ε</span><br><span class="line"></span><br><span class="line">3. <span class="attribute">&lt;if_stat&gt;</span>→ if (<span class="attribute">&lt;expr&gt;</span>) <span class="attribute">&lt;statement &gt;</span>( ε|else <span class="attribute">&lt; statement&gt;</span>)</span><br><span class="line">不可提取公因式</span><br><span class="line"></span><br><span class="line"><span class="attribute">&lt; expression &gt;</span>→ ID=<span class="attribute">&lt;bool_expr&gt;</span>|<span class="attribute">&lt;bool_expr&gt;</span></span><br><span class="line">该文法解决方式:  程序设计时通过超前读一个符号来解决,如果识别出标识符的符号ID后，再读一个符号，如果这个符号是“=”，说明选择的是赋值表达式； 如果不是“=”，则说明选择的是布尔表达式</span><br></pre></td></tr></table></figure>
<h3 id="求First-amp-Follow集"><a href="#求First-amp-Follow集" class="headerlink" title="求First&amp;Follow集"></a>求First&amp;Follow集</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>) <span class="variable">&lt;program&gt;</span> →&#123;<span class="variable">&lt;declaration_list&gt;</span><span class="variable">&lt;statement_list&gt;</span>&#125;</span><br><span class="line"></span><br><span class="line">First(&#123;<span class="variable">&lt;declaration_list&gt;</span><span class="variable">&lt;statement_list&gt;</span>&#125;)= &#123;  &#123;  &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">2</span>) <span class="variable">&lt;declaration_list&gt;</span> → A , A →<span class="variable">&lt;declaration_stat&gt;</span>A|ε</span><br><span class="line"></span><br><span class="line">First(A)=First(<span class="variable">&lt;declaration_stat&gt;</span>A)=   &#123; int ，ε &#125;</span><br><span class="line">First(<span class="variable">&lt;declaration_stat&gt;</span>A)=First( int ID;)= &#123; int &#125;</span><br><span class="line">Follow(A) =&#123; if,while,<span class="keyword">for</span>,read,write,&#123;,&#125;,;,ID,(,NUM&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">3</span>) <span class="variable">&lt;declaration_stat&gt;</span> →int ID;</span><br><span class="line"></span><br><span class="line">First(int ID;)=&#123;int&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">4</span>)<span class="variable">&lt;statement_list&gt;</span> → B , B →<span class="variable">&lt;statement&gt;</span>B| ε</span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt;statement&gt;</span>B)=&#123; if,while,<span class="keyword">for</span>,read,write,&#123;,;,ID,NUM,( &#125;</span><br><span class="line">First(B) =&#123; if,while,<span class="keyword">for</span>,read,write,&#123;,;,ID, ε&#125;</span><br><span class="line">Follow(B) =&#123; &#125; &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">5</span>)<span class="variable">&lt;statement&gt;</span> → <span class="variable">&lt;if_stat&gt;</span>|<span class="variable">&lt;while_stat&gt;</span>|<span class="variable">&lt;for_stat&gt;</span>|<span class="variable">&lt;read_stat&gt;</span>|</span><br><span class="line"><span class="variable">&lt;write_stat&gt;</span>|<span class="variable">&lt; compound_stat &gt;</span> |<span class="variable">&lt;expression_stat&gt;</span></span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt;if_stat&gt;</span>)=&#123;if&#125;</span><br><span class="line">First(<span class="variable">&lt;while_stat&gt;</span>)=&#123;while&#125;</span><br><span class="line">First(<span class="variable">&lt;for_stat&gt;</span>)=&#123;<span class="keyword">for</span>&#125;</span><br><span class="line">First(<span class="variable">&lt;read_stat&gt;</span>)=&#123;read&#125;</span><br><span class="line">First(<span class="variable">&lt;write_stat&gt;</span>)=&#123;write&#125;</span><br><span class="line">First(<span class="variable">&lt; compound_stat &gt;</span>)=&#123;&#123;&#125; </span><br><span class="line">First(<span class="variable">&lt;expression_stat&gt;</span>)=&#123; ;,ID,NUM,( &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">6</span>) <span class="variable">&lt;if_stat&gt;</span> → if (<span class="variable">&lt;expr&gt;</span>) <span class="variable">&lt;statement &gt;</span>| if (<span class="variable">&lt;expr&gt;</span>) <span class="variable">&lt;statement &gt;</span>else <span class="variable">&lt; statement &gt;</span></span><br><span class="line"></span><br><span class="line">First(if (<span class="variable">&lt;expr&gt;</span>) <span class="variable">&lt;statement &gt;</span>)=&#123; if &#125;</span><br><span class="line">First(if (<span class="variable">&lt;expr&gt;</span>) <span class="variable">&lt;statement &gt;</span>else <span class="variable">&lt; statement &gt;</span>)=&#123; if &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">7</span>) <span class="variable">&lt;while_stat&gt;</span> → while (<span class="variable">&lt;expr &gt;</span>) <span class="variable">&lt; statement &gt;</span></span><br><span class="line"></span><br><span class="line">First(while (<span class="variable">&lt;expr &gt;</span>) <span class="variable">&lt; statement &gt;</span>)=&#123; while &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">8</span>) <span class="variable">&lt;for_stat&gt;</span> → <span class="keyword">for</span> (<span class="variable">&lt;expr&gt;</span>;<span class="variable">&lt;expr&gt;</span>;<span class="variable">&lt;expr&gt;</span>)<span class="variable">&lt;statement&gt;</span></span><br><span class="line"></span><br><span class="line">First(<span class="keyword">for</span> (<span class="variable">&lt;expr&gt;</span>;<span class="variable">&lt;expr&gt;</span>;<span class="variable">&lt;expr&gt;</span>)<span class="variable">&lt;statement&gt;</span>)=&#123; <span class="keyword">for</span> &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">9</span>) <span class="variable">&lt;write_stat&gt;</span> →write <span class="variable">&lt;expression&gt;</span>;</span><br><span class="line"></span><br><span class="line">First(write <span class="variable">&lt;expression&gt;</span>;)=&#123; write &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">10</span>) <span class="variable">&lt;read_stat&gt;</span> →read ID; </span><br><span class="line"></span><br><span class="line">First(read ID;)=&#123; read &#125;</span><br><span class="line"></span><br><span class="line"><span class="number">11</span>)<span class="variable">&lt;compound_stat&gt;</span> →&#123;<span class="variable">&lt;statement_list&gt;</span>&#125; </span><br><span class="line"></span><br><span class="line">First(&#123;<span class="variable">&lt;statement_list&gt;</span>&#125;)=&#123;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">12</span>)<span class="variable">&lt;expression_stat&gt;</span> →<span class="variable">&lt; expression &gt;</span>;|; </span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt; expression &gt;</span>;)= &#123;ID,NUM,(&#125;</span><br><span class="line">First(;)=&#123;;&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">13</span>)<span class="variable">&lt; expression &gt;</span> → ID=<span class="variable">&lt;bool_expr&gt;</span>|<span class="variable">&lt;bool_expr&gt;</span> </span><br><span class="line"></span><br><span class="line">First(ID=<span class="variable">&lt;bool_expr&gt;</span>)=&#123;ID&#125;</span><br><span class="line">First(<span class="variable">&lt;bool_expr&gt;</span>)=&#123;ID,NUM,(&#125;</span><br><span class="line"></span><br><span class="line"><span class="number">14</span>) <span class="variable">&lt;bool_expr&gt;</span> →<span class="variable">&lt;additive_expr&gt;</span>E , E→ε|(&gt;|<span class="variable">&lt;|&gt;</span>=|<span class="variable">&lt;=|==|!=)&lt; additive_expr &gt;</span> </span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt;additive_expr&gt;</span>E)=&#123;ID,NUM,(&#125;</span><br><span class="line">First((&gt;|<span class="variable">&lt;|&gt;</span>=|<span class="variable">&lt;=|==|!=)&lt; additive_expr &gt;</span>)=&#123;&gt;,<span class="variable">&lt;,&gt;</span>=,<span class="variable">&lt;=,==,!=&#125;</span><br><span class="line">First(ε)=&#123; ε&#125; </span><br><span class="line">Follow(E)=&#123;;&#125;</span><br><span class="line"></span><br><span class="line">15)&lt; additive_expr&gt;</span> →<span class="variable">&lt; term &gt;</span>C , C →+<span class="variable">&lt;term&gt;</span>C|-<span class="variable">&lt;term&gt;</span>C|ε</span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt; term &gt;</span>C)=&#123;ID,NUM,(&#125;</span><br><span class="line">First(+<span class="variable">&lt;term&gt;</span>C)=&#123;+&#125;</span><br><span class="line">First(-<span class="variable">&lt;term&gt;</span>C)=&#123;-&#125;</span><br><span class="line">Follow(C)=&#123;;, ), (&gt;|<span class="variable">&lt;|&gt;</span>=|<span class="variable">&lt;=|==|!=)&#125;</span><br><span class="line"></span><br><span class="line">16)&lt; term &gt;</span> →<span class="variable">&lt; factor &gt;</span>D , D →*<span class="variable">&lt;factor&gt;</span>D|/<span class="variable">&lt;factor&gt;</span>D|ε</span><br><span class="line"></span><br><span class="line">First(<span class="variable">&lt; factor &gt;</span>D)=&#123;ID,NUM,(&#125;</span><br><span class="line">First(*<span class="variable">&lt;factor&gt;</span>D)=&#123;*&#125;</span><br><span class="line">First(/<span class="variable">&lt;factor&gt;</span>D)=&#123;/&#125;</span><br><span class="line">First(ε)=&#123;ε&#125;</span><br><span class="line">Follow(D)=&#123;+,-, <span class="variable">&lt;,&gt;</span>,&gt;=,<span class="variable">&lt;=,==,!=, ; , )&#125;</span><br><span class="line"></span><br><span class="line">17)&lt; factor &gt;</span> →(<span class="variable">&lt; expression &gt;</span>)|ID|NUM</span><br><span class="line"></span><br><span class="line">First((<span class="variable">&lt; expression &gt;</span>))=&#123; ( &#125;</span><br><span class="line">First(ID)=ID</span><br><span class="line">First(NUM)=NUM</span><br></pre></td></tr></table></figure>
<h3 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h3><h4 id="1-测试代码"><a href="#1-测试代码" class="headerlink" title="1.测试代码"></a>1.测试代码</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="keyword">int</span> a;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> bc;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>; i &lt;= <span class="number">10</span>; i=i+<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">;</span><br><span class="line">a=a+i</span><br><span class="line">b=b*i;</span><br><span class="line">&#123;</span><br><span class="line">c=a+b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (a&gt;b) </span><br><span class="line">&#123;</span><br><span class="line">write a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> </span><br><span class="line">&#123;</span><br><span class="line">write b;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">write c</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-实现代码"><a href="#2-实现代码" class="headerlink" title="2.实现代码"></a>2.实现代码</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;conio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">A</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">B</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">D</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">E</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TESTparse</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">program</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">statement</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">statement_list</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expression</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expression_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">declaration_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">declaration_list</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">if_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">for_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">write_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">while_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compound_stat</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">term</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factor</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bool_expr</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">additive_expr</span><span class="params">()</span></span>;</span><br><span class="line"><span class="keyword">int</span> line;</span><br><span class="line"><span class="keyword">char</span> ch;</span><br><span class="line">FILE *fp;<span class="comment">//用于指向输入文件的指针</span></span><br><span class="line"><span class="keyword">extern</span> <span class="keyword">char</span> Scanout[<span class="number">300</span>];<span class="comment">//保存词法分析输出文件名</span></span><br><span class="line"><span class="keyword">char</span> token[<span class="number">20</span>], token1[<span class="number">40</span>];<span class="comment">//token保存单词符号，token1保存单词值</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">TESTparse</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> ((fp = fopen(Scanout, <span class="string">"r"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\n Open %s error !\n"</span>, Scanout);</span><br><span class="line">        es = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"=========Result!=========\n\n"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (es == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = program();</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">program</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"&#123;"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  &#123;    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = declaration_list();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    es = statement_list();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"&#125;"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  &#125;    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    ch = getc(fp);</span><br><span class="line">    <span class="keyword">while</span> (ch != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (ch != <span class="string">' '</span>&amp;&amp;ch != <span class="string">'\n'</span>&amp;&amp;ch != <span class="string">'\t'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Programma error!!   \n"</span>, line);</span><br><span class="line">            <span class="keyword">return</span> (es = <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        ch = getc(fp);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">declaration_list</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token1, <span class="string">"int"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = A();</span><br><span class="line">        <span class="keyword">return</span> es;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack int \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">A</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token1, <span class="string">"int"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = declaration_stat();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = A();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span></span><br><span class="line">        (</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"if"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"while"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"for"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"read"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"write"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"&#123;"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">";"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"ID"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"("</span>) == <span class="number">0</span>||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"NUM"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token1, <span class="string">"&#125;"</span>) == <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack int||if||while||for||read||write||&#123;||;||ID||(||NUM||&#125; \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span>  <span class="title">declaration_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"int"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   int    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ID    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span>  <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">statement_list</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"if"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"while"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"for"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"read"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"write"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&#123;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span> </span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        es = B();</span><br><span class="line">        <span class="keyword">return</span> es;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  if||while||for||read||write||&#123;||;||ID||NUM||(   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">B</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"if"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"while"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"for"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"read"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"write"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&#123;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = statement();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = B();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"&#125;"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  if||while||for||read||write||&#123;||;||ID||NUM||( ||&#125;  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">statement</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"if"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = if_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"while"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = while_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"for"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = for_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"read"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = read_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"write"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = write_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"&#123;"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = compound_stat();                       </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (es == <span class="number">0</span> &amp;&amp; <span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = expression_stat();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  if||while||for||read||write||&#123;||;||ID||NUM||(   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">if_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"("</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  ( \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">")"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  ) \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = statement();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"else"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = statement();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">while_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"("</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   (   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">")"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   )   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = statement();</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">for_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"("</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   (   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">")"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   )  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    es = statement();</span><br><span class="line">    <span class="keyword">return</span> (es);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">write_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    es = expression();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">read_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ID  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">compound_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    es = statement_list();</span><br><span class="line">    <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"&#125;"</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expression_stat</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = expression();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;   \n"</span>, line);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   ;||ID||NUM||(   \n"</span>, line);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">expression</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>, fileadd;</span><br><span class="line">    <span class="keyword">char</span> token2[<span class="number">20</span>], token3[<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        fileadd = ftell(fp);<span class="comment">//记住当前文件位置</span></span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token2, &amp;token3, &amp;line);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token2, <span class="string">"="</span>) == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">            es = bool_expr();</span><br><span class="line">            <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            fseek(fp, fileadd, <span class="number">0</span>);<span class="comment">//若非‘=’，则文件指针回到'='前的标识符</span></span><br><span class="line">            es = bool_expr();</span><br><span class="line">            <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        es = bool_expr();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">bool_expr</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>))</span><br><span class="line">    &#123;</span><br><span class="line">        es = additive_expr();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = C();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  ID||NUM||(    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">C</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&gt;"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&gt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&lt;"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&lt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"=="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"!="</span>) == <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = additive_expr();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">")"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack )||&gt;||&lt;||&gt;=||&lt;==||==||!=||;    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">additive_expr</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = term();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = D();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  ID||NUM||(   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">D</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"+"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"-"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = term();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = D();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span></span><br><span class="line">        (</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">")"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&gt;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"&gt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&lt;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"&lt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"=="</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"!="</span>) == <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   +||-||;||)||&lt;||&gt;||&lt;=||&gt;=||==||!=    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">term</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        es = factor();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = E();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack  ID||NUM||(   \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">E</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"*"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"/"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = factor();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        es = E();</span><br><span class="line">        <span class="keyword">return</span> (es);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span></span><br><span class="line">        (</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">";"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">")"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"+"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"-"</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&gt;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"&gt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"&lt;"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"&lt;="</span>) == <span class="number">0</span> ||</span><br><span class="line">        <span class="built_in">strcmp</span>(token, <span class="string">"=="</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"!="</span>) == <span class="number">0</span></span><br><span class="line">        )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   Lack   *||/||;||)||&gt;||&lt;||==||!=||&gt;=||&lt;=  \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">factor</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> es = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"("</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        es = expression();</span><br><span class="line">        <span class="keyword">if</span> (es &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">")"</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   )   \n"</span>, line);</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(token, <span class="string">"ID"</span>) == <span class="number">0</span> || <span class="built_in">strcmp</span>(token, <span class="string">"NUM"</span>) == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">fscanf</span>(fp, <span class="string">"%s%s%d\n"</span>, &amp;token, &amp;token1, &amp;line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"ERROR: Line %d   ( || ID || NUM    \n"</span>, line);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 编译原理 </tag>
            
            <tag> 语法分析 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[编写词法分析程序]]></title>
      <url>http://lijundong.com/Lexical%20analysis/</url>
      <content type="html"><![CDATA[<h4 id="Note："><a href="#Note：" class="headerlink" title="Note："></a>Note：</h4><p>这学期修了严厉的Mr.J的编译原理，不定期更新笔记！<br>欢迎指正！</p>
<h4 id="Github"><a href="#Github" class="headerlink" title="Github:"></a>Github:</h4><ul>
<li><a href="//github.com/lijundong/lexi">词法分析</a></li>
<li><a href="//github.com/lijundong/syntax">语法分析</a></li>
<li><a href="//github.com/lijundong/semantic">语义分析</a></li>
</ul>
<hr>
<a id="more"></a>
<h4 id="TEST-语言的词法规"><a href="#TEST-语言的词法规" class="headerlink" title="TEST 语言的词法规:"></a>TEST 语言的词法规:</h4><ul>
<li><p>标识符：字母打头，后接任意字母或数字</p>
</li>
<li><p>保留字：标识符的子集，包括：if,else,for,while,do, int,write,read，</p>
</li>
<li><p>无符号整数：由数字组成，但最高位不能为0，允许一位的0，</p>
</li>
<li><p>分界符：(、)、;、{、}</p>
</li>
<li><p>运算符：+、-、*、/、=、&lt;、&gt;、&gt;=、&lt;=、!=、==</p>
</li>
<li><p>注释符：/<em>       </em>/</p>
</li>
</ul>
<hr>
<h4 id="正则表达式："><a href="#正则表达式：" class="headerlink" title="正则表达式："></a>正则表达式：</h4><ul>
<li><p>标识符：    &nbsp;   &nbsp;&nbsp;   &nbsp;  ( a|b|……|z|A|B……|Z )( 0|1|……|9| a|b|……|z|A|B……|Z )*</p>
</li>
<li><p>保留字：      &nbsp;   &nbsp;&nbsp;   &nbsp;  标识符的子集</p>
</li>
<li><p>无符号整数： ( (1……|9 )( 0|1|……|9)* )|0</p>
</li>
<li><p>分界符：     &nbsp;   &nbsp;&nbsp;   &nbsp;   ( | ) | ; | { | }</p>
</li>
<li><p>运算符：     &nbsp;   &nbsp;&nbsp;   &nbsp; + | - | * | / | = | &lt; | &gt; | &gt;= | &lt;= | != | ==</p>
</li>
<li>注释符：     &nbsp;   &nbsp;&nbsp;   &nbsp;  <code>/* (other)* */</code></li>
</ul>
<hr>
<h4 id="NFA"><a href="#NFA" class="headerlink" title="NFA"></a>NFA</h4><p><img src="//img.blog.csdn.net/20150512205514659" alt="不确定的有穷自动机"></p>
<hr>
<h4 id="DFA"><a href="#DFA" class="headerlink" title="DFA"></a>DFA</h4><p>将NFA确定化之后得到的DFA</p>
<p><img src="//img.blog.csdn.net/20150512205316491" alt="确定的有穷自动机"></p>
<hr>
<h4 id="程序测试"><a href="#程序测试" class="headerlink" title="程序测试"></a>程序测试</h4><p>依据DFA编写词法分析程序</p>
<ul>
<li><p>测试数据:</p>
<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*This a test program.*/</span></span><br><span class="line"><span class="keyword">int</span> abc;</span><br><span class="line"><span class="keyword">int</span> <span class="number">123</span>;</span><br><span class="line"><span class="keyword">int</span> A$@;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> b,c;</span><br><span class="line"><span class="keyword">int</span> <span class="number">2</span>a;</span><br><span class="line"><span class="keyword">int</span> a2;</span><br><span class="line">read n;</span><br><span class="line">n = <span class="number">012345</span>;</span><br><span class="line"><span class="keyword">for</span> (i=<span class="number">1</span>;i&lt;=n; i= i+<span class="number">1</span>)</span><br><span class="line">&#123; </span><br><span class="line">abc=abc+i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!n) b = b+c;</span><br><span class="line"><span class="comment">/*The loop ended</span><br><span class="line">write abc;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>测试结果:</p>
</li>
</ul>
<p><img src="//img.blog.csdn.net/20150512210623528" alt="控制台报错"></p>
<ul>
<li>分词结果：<br><img src="//img.blog.csdn.net/20150512210538675" alt="这里写图片描述"><img src="//img.blog.csdn.net/20150512210601654" alt="这里写图片描述"></li>
</ul>
<hr>
<h4 id="SourceCode"><a href="#SourceCode" class="headerlink" title="SourceCode"></a>SourceCode</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;ctype.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> sum 8</span></span><br><span class="line">FILE *fin, *fout;</span><br><span class="line"><span class="keyword">char</span> Dword[<span class="number">10</span>] = <span class="string">"!&gt;&lt;="</span>;</span><br><span class="line"><span class="keyword">char</span> Infile[<span class="number">300</span>], Outfile[<span class="number">300</span>];</span><br><span class="line"><span class="keyword">char</span> Sword[<span class="number">50</span>] = <span class="string">"+-*()&#123;&#125;;"</span>;</span><br><span class="line"><span class="keyword">char</span> *keyword[sum] = &#123; <span class="string">"if"</span>, <span class="string">"else"</span>, <span class="string">"for"</span>, <span class="string">"while"</span>, <span class="string">"do"</span>, <span class="string">"int"</span>, <span class="string">"read"</span>, <span class="string">"write"</span> &#125;;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">test</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> ch, Buff[<span class="number">40</span>];</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>, n, line = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">int</span> m = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Name of Pro:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, Infile);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"Name of Outfile:"</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%s"</span>, Outfile);</span><br><span class="line">    <span class="keyword">if</span> ((fin = fopen(Infile, <span class="string">"r"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\nPro file open error！\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ((fout = fopen(Outfile, <span class="string">"w"</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"\nOutfile open error！\n"</span>);</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    ch = getc(fin);</span><br><span class="line">    <span class="keyword">while</span> (ch != EOF)</span><br><span class="line">    &#123;</span><br><span class="line">        m = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">memset</span>(Buff, <span class="number">0</span>, <span class="number">40</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> (ch == <span class="string">' '</span> || ch == <span class="string">'\n'</span> || ch == <span class="string">'\t'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'\n'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                line++;</span><br><span class="line">            &#125;</span><br><span class="line">            ch = getc(fin);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">isalpha</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (<span class="built_in">isalpha</span>(ch) || <span class="built_in">isdigit</span>(ch))</span><br><span class="line">            &#123;</span><br><span class="line">                Buff[m] = ch;</span><br><span class="line">                m++;</span><br><span class="line">                ch = getc(fin);</span><br><span class="line">            &#125;</span><br><span class="line">            n = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> ((n &lt; sum) &amp;&amp; <span class="built_in">strcmp</span>(Buff, keyword[n]))</span><br><span class="line">            &#123;</span><br><span class="line">                n++;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span> (n &lt; sum)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, <span class="string">"ID"</span>, Buff);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, Buff, Buff);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'0'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Buff[<span class="number">0</span>] = <span class="string">'0'</span>;</span><br><span class="line">                Buff[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, <span class="string">"NUM"</span>, Buff);</span><br><span class="line">                ch = getc(fin);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">while</span> (<span class="built_in">isdigit</span>(ch))</span><br><span class="line">                &#123;</span><br><span class="line">                    Buff[m] = ch;</span><br><span class="line">                    m++;</span><br><span class="line">                    ch = getc(fin);</span><br><span class="line">                &#125;</span><br><span class="line">                Buff[m] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, <span class="string">"NUM"</span>, Buff);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strchr</span>(Sword, ch) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Buff[<span class="number">0</span>] = ch;</span><br><span class="line">            Buff[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">            ch = getc(fin);</span><br><span class="line">            <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, Buff, Buff);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strchr</span>(Dword, ch) &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Buff[<span class="number">0</span>] = ch;</span><br><span class="line">            ch = getc(fin);</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'='</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Buff[<span class="number">1</span>] = ch;</span><br><span class="line">                Buff[<span class="number">2</span>] = <span class="string">'\0'</span>;</span><br><span class="line">                ch = getc(fin);</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, Buff, Buff);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Buff[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="keyword">if</span> (Buff[<span class="number">0</span>] == <span class="string">'!'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"Line %d\t%s\t%s\n"</span>, line, <span class="string">"ERROR:"</span>, Buff);</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, Buff, Buff);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (ch == <span class="string">'/'</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            ch = getc(fin);</span><br><span class="line">            <span class="keyword">if</span> (ch == <span class="string">'*'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">char</span> ch1;</span><br><span class="line">                ch1 = getc(fin);</span><br><span class="line">                <span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> (ch1 == EOF)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">"Line %d\t%s\tNote does't match!\n"</span>, line,<span class="string">"ERROR:"</span> );</span><br><span class="line">                        </span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    ch = ch1;</span><br><span class="line">                    ch1 = getc(fin);</span><br><span class="line">                    <span class="keyword">if</span> (ch == <span class="string">'*'</span>&amp;&amp;ch1 == <span class="string">'/'</span>)</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                ch = getc(fin);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                Buff[<span class="number">0</span>] = <span class="string">'/'</span>;</span><br><span class="line">                Buff[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">                <span class="built_in">fprintf</span>(fout, <span class="string">"%s\t%s\n"</span>, Buff, Buff);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            Buff[<span class="number">0</span>] = ch;</span><br><span class="line">            Buff[<span class="number">1</span>] = <span class="string">'\0'</span>;</span><br><span class="line">            ch = getc(fin);</span><br><span class="line">            flag = <span class="number">3</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"Line %d\t%s\t%s\n"</span>, line, <span class="string">"ERROR:"</span>, Buff);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    fclose(fin);</span><br><span class="line">    fclose(fout);</span><br><span class="line">    <span class="keyword">return</span>(flag);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag = <span class="number">0</span>;</span><br><span class="line">    flag = test();</span><br><span class="line">    <span class="keyword">if</span> (flag &gt; <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"Compile Error\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"No Error\n"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
            <tag> 词法分析 </tag>
            
            <tag> 编译原理 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[OpenCV鼠标事件]]></title>
      <url>http://lijundong.com/OpenCV-mouse-event/</url>
      <content type="html"><![CDATA[<p>与鼠标事件相关两个函数</p>
<h4 id="回调函数cvSetMouseCallback"><a href="#回调函数cvSetMouseCallback" class="headerlink" title="回调函数cvSetMouseCallback"></a>回调函数<code>cvSetMouseCallback</code></h4><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">void cvSetMouseCallback( const char* window_name, CvMouseCallback on_mouse, void* param CV_DEFAULT(NULL));</span><br></pre></td></tr></table></figure>
<hr>
<p><code>window_name</code>：鼠标执行的窗口名</p>
<p><code>on_mouse</code>：每次指定窗口鼠标事件发生时被调用的函数指针</p>
<p><code>param</code> :传递到回调函数的参数</p>
<hr>
<h4 id="on-mouse的原型"><a href="#on-mouse的原型" class="headerlink" title="on_mouse的原型"></a><code>on_mouse</code>的原型</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">Foo</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span>;</span><br></pre></td></tr></table></figure>
<hr>
<p><code>param</code>:传递到cvSetMouseCallback函数调用的参数<br><a id="more"></a></p>
<p><code>x、y</code>：鼠标指针在图像坐标系的坐标</p>
<p><code>event</code>: CV<em>EVENT</em>*变量之一<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    CV_EVENT_MOUSEMOVE      =<span class="number">0</span>,<span class="comment">//滑动</span></span><br><span class="line">    CV_EVENT_LBUTTONDOWN    =<span class="number">1</span>,<span class="comment">//左键点击</span></span><br><span class="line">    CV_EVENT_RBUTTONDOWN    =<span class="number">2</span>,<span class="comment">//右键点击</span></span><br><span class="line">    CV_EVENT_MBUTTONDOWN    =<span class="number">3</span>,<span class="comment">//中键点击</span></span><br><span class="line">    CV_EVENT_LBUTTONUP      =<span class="number">4</span>,<span class="comment">//左键放开</span></span><br><span class="line">    CV_EVENT_RBUTTONUP      =<span class="number">5</span>,<span class="comment">//右键放开</span></span><br><span class="line">    CV_EVENT_MBUTTONUP      =<span class="number">6</span>,<span class="comment">//中键放开</span></span><br><span class="line">    CV_EVENT_LBUTTONDBLCLK  =<span class="number">7</span>,<span class="comment">//左键双击</span></span><br><span class="line">    CV_EVENT_RBUTTONDBLCLK  =<span class="number">8</span>,<span class="comment">//右键双击</span></span><br><span class="line">    CV_EVENT_MBUTTONDBLCLK  =<span class="number">9</span><span class="comment">//中键双击</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p><code>flags</code>:是CV_EVENT_FLAG的组合<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">enum</span></span><br><span class="line">&#123;</span><br><span class="line">    CV_EVENT_FLAG_LBUTTON   =<span class="number">1</span>,<span class="comment">//左键拖曳</span></span><br><span class="line">    CV_EVENT_FLAG_RBUTTON   =<span class="number">2</span>,<span class="comment">//右键拖曳</span></span><br><span class="line">    CV_EVENT_FLAG_MBUTTON   =<span class="number">4</span>,<span class="comment">//中键拖曳</span></span><br><span class="line">    CV_EVENT_FLAG_CTRLKEY   =<span class="number">8</span>,<span class="comment">//按CTRL</span></span><br><span class="line">    CV_EVENT_FLAG_SHIFTKEY  =<span class="number">16</span>,<span class="comment">//按SHIFT</span></span><br><span class="line">    CV_EVENT_FLAG_ALTKEY    =<span class="number">32</span><span class="comment">//按ALT</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><strong>注意事项</strong></h4><p>之前用opencv显示窗口时，习惯直接用<code>imshow( winname, mat);</code>，少了先命名一个窗口的过程，没有用到鼠标事件之前并没出现问题，但，当我开始向代码里面加鼠标事件后，运行时却没有响应<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onMouse</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    cvSetMouseCallback(<span class="string">"ok"</span>, onMouse, <span class="literal">NULL</span>);</span><br><span class="line">    imshow(<span class="string">"ok"</span>,window_image);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onMouse</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"heelo"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (event == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"world"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">"   "</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>因为缺少窗口声明，所以上面这段代码并没有实现响应，所以需要加一行声明。<br><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onMouse</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    namedWindow(<span class="string">"ok"</span>, <span class="number">1</span>);<span class="comment">//命名一个窗口</span></span><br><span class="line">    cvSetMouseCallback(<span class="string">"ok"</span>, onMouse, <span class="literal">NULL</span>);</span><br><span class="line">    imshow(<span class="string">"ok"</span>,window_image);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">onMouse</span><span class="params">(<span class="keyword">int</span> event, <span class="keyword">int</span> x, <span class="keyword">int</span> y, <span class="keyword">int</span> flags, <span class="keyword">void</span>* param)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (event == <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"heelo"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (event == <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="string">"world"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;x&lt;&lt;<span class="string">"   "</span>&lt;&lt;y&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
]]></content>
      
        <categories>
            
            <category> 学习 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> c++ </tag>
            
            <tag> opencv </tag>
            
            <tag> 鼠标事件 </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
